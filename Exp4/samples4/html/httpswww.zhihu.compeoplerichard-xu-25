<!doctype html>
<html lang="zh" data-hairline="true" data-theme="light"><head><meta charSet="utf-8"/><title data-react-helmet="true">Richard Xu - 知乎</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"/><meta name="renderer" content="webkit"/><meta name="force-rendering" content="webkit"/><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"/><title>知乎 - 有问题上知乎</title><meta name="description" content="有问题，上知乎。知乎是中文互联网知名知识分享平台，以「知识连接一切」为愿景，致力于构建一个人人都可以便捷接入的知识分享网络，让人们便捷地与世界分享知识、经验和见解，发现更大的世界。"/><link data-react-helmet="true" rel="prefetch" href="https://pic1.zhimg.com/80/v2-90775e228419bcd756cdcc2b1e194a4d_r.jpg"/><link rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/static/favicon.ico"/><link rel="search" type="application/opensearchdescription+xml" href="https://static.zhihu.com/static/search.xml" title="知乎"/><link rel="dns-prefetch" href="//static.zhimg.com"/><link rel="dns-prefetch" href="//pic1.zhimg.com"/><link rel="dns-prefetch" href="//pic2.zhimg.com"/><link rel="dns-prefetch" href="//pic3.zhimg.com"/><link rel="dns-prefetch" href="//pic4.zhimg.com"/><link href="https://static.zhihu.com/heifetz/main.app.ae5f819ea51859c3afe0.css" rel="stylesheet"/></head><body class="Entry-body"><div id="root"><div data-zop-usertoken="{}" data-reactroot=""><div class="LoadingBar"></div><div><header role="banner" class="Sticky AppHeader" data-za-module="TopNavBar"><div class="AppHeader-inner"><a href="//www.zhihu.com" aria-label="知乎"><svg viewBox="0 0 200 91" class="Icon ZhihuLogo ZhihuLogo--blue Icon--logo" style="height:30px;width:64px" width="64" height="30" aria-hidden="true"><title></title><g><path d="M53.29 80.035l7.32.002 2.41 8.24 13.128-8.24h15.477v-67.98H53.29v67.978zm7.79-60.598h22.756v53.22h-8.73l-8.718 5.473-1.587-5.46-3.72-.012v-53.22zM46.818 43.162h-16.35c.545-8.467.687-16.12.687-22.955h15.987s.615-7.05-2.68-6.97H16.807c1.09-4.1 2.46-8.332 4.1-12.708 0 0-7.523 0-10.085 6.74-1.06 2.78-4.128 13.48-9.592 24.41 1.84-.2 7.927-.37 11.512-6.94.66-1.84.785-2.08 1.605-4.54h9.02c0 3.28-.374 20.9-.526 22.95H6.51c-3.67 0-4.863 7.38-4.863 7.38H22.14C20.765 66.11 13.385 79.24 0 89.62c6.403 1.828 12.784-.29 15.937-3.094 0 0 7.182-6.53 11.12-21.64L43.92 85.18s2.473-8.402-.388-12.496c-2.37-2.788-8.768-10.33-11.496-13.064l-4.57 3.627c1.363-4.368 2.183-8.61 2.46-12.71H49.19s-.027-7.38-2.372-7.38zm128.752-.502c6.51-8.013 14.054-18.302 14.054-18.302s-5.827-4.625-8.556-1.27c-1.874 2.548-11.51 15.063-11.51 15.063l6.012 4.51zm-46.903-18.462c-2.814-2.577-8.096.667-8.096.667s12.35 17.2 12.85 17.953l6.08-4.29s-8.02-11.752-10.83-14.33zM199.99 46.5c-6.18 0-40.908.292-40.953.292v-31.56c1.503 0 3.882-.124 7.14-.376 12.773-.753 21.914-1.25 27.427-1.504 0 0 3.817-8.496-.185-10.45-.96-.37-7.24 1.43-7.24 1.43s-51.63 5.153-72.61 5.64c.5 2.756 2.38 5.336 4.93 6.11 4.16 1.087 7.09.53 15.36.277 7.76-.5 13.65-.76 17.66-.76v31.19h-41.71s.88 6.97 7.97 7.14h33.73v22.16c0 4.364-3.498 6.87-7.65 6.6-4.4.034-8.15-.36-13.027-.566.623 1.24 1.977 4.496 6.035 6.824 3.087 1.502 5.054 2.053 8.13 2.053 9.237 0 14.27-5.4 14.027-14.16V53.93h38.235c3.026 0 2.72-7.432 2.72-7.432z" fill-rule="evenodd"/></g></svg></a><nav role="navigation" class="AppHeader-nav"><a class="AppHeader-navItem" href="//www.zhihu.com/" data-za-not-track-link="true">首页</a><a class="AppHeader-navItem" href="//www.zhihu.com/explore" data-za-not-track-link="true">发现</a><a href="//www.zhihu.com/topic" class="AppHeader-navItem" data-za-not-track-link="true">话题</a></nav><div class="SearchBar" role="search" data-za-module="PresetWordItem"><div class="SearchBar-toolWrapper"><form class="SearchBar-tool"><div><div class="Popover"><div class="SearchBar-input Input-wrapper Input-wrapper--grey"><input type="text" maxLength="100" value="" autoComplete="off" role="combobox" aria-expanded="false" aria-autocomplete="list" aria-activedescendant="null--1" id="null-toggle" aria-haspopup="true" aria-owns="null-content" class="Input" placeholder=""/><div class="Input-after"><button aria-label="搜索" type="button" class="Button SearchBar-searchIcon Button--primary"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Search" fill="currentColor" viewBox="0 0 24 24" width="18" height="18"><path d="M17.068 15.58a8.377 8.377 0 0 0 1.774-5.159 8.421 8.421 0 1 0-8.42 8.421 8.38 8.38 0 0 0 5.158-1.774l3.879 3.88c.957.573 2.131-.464 1.488-1.49l-3.879-3.878zm-6.647 1.157a6.323 6.323 0 0 1-6.316-6.316 6.323 6.323 0 0 1 6.316-6.316 6.323 6.323 0 0 1 6.316 6.316 6.323 6.323 0 0 1-6.316 6.316z" fill-rule="evenodd"></path></svg></span></button></div></div></div></div></form></div></div><div class="AppHeader-userInfo"><div class="AppHeader-profile"><div><button type="button" class="Button AppHeader-login Button--blue">登录</button><button type="button" class="Button Button--primary Button--blue">加入知乎</button></div></div></div></div></header></div><main role="main" class="App-main"><div itemProp="people" itemType="http://schema.org/Person" itemscope=""><meta itemProp="url" content="https://www.zhihu.com/people/richard-xu-25"/><meta itemProp="gender" content="Male"/><meta itemProp="image" content="https://pic2.zhimg.com/92c892d622d4a92d81871b8817b12d9d_is.jpg"/><meta itemProp="zhihu:voteupCount" content="110067"/><meta itemProp="zhihu:thankedCount" content="18411"/><meta itemProp="zhihu:followerCount" content="69429"/><meta itemProp="zhihu:answerCount" content="1458"/><meta itemProp="zhihu:articlesCount" content="147"/><div id="ProfileHeader" class="ProfileHeader"><div class="Card"><div class="ProfileHeader-userCover"><div class="UserCover"><div class="VagueImage UserCover-image" data-src="https://pic1.zhimg.com/80/v2-90775e228419bcd756cdcc2b1e194a4d_r.jpg"><div class="VagueImage-mask is-active"></div></div></div></div><div class="ProfileHeader-wrapper"><div class="ProfileHeader-main"><div class="UserAvatar ProfileHeader-avatar" style="top:-25px"><img class="Avatar Avatar--large UserAvatar-inner" width="160" height="160" src="https://pic2.zhimg.com/92c892d622d4a92d81871b8817b12d9d_xl.jpg" srcSet="https://pic2.zhimg.com/92c892d622d4a92d81871b8817b12d9d_xll.jpg 2x"/></div><div class="ProfileHeader-content"><div class="ProfileHeader-contentHead"><h1 class="ProfileHeader-title"><span class="ProfileHeader-name">Richard Xu</span><span class="RichText ztext ProfileHeader-headline">专栏：经济学博士生的日记本</span></h1></div><div style="overflow:hidden;transition:height 300ms ease-out" class="ProfileHeader-contentBody"><div><div class="ProfileHeader-info"><div class="ProfileHeader-infoItem"><div class="ProfileHeader-iconWrapper"><svg viewBox="0 0 20 18" class="Icon Icon--company" style="height:16px;width:13px" width="13" height="16" aria-hidden="true"><title></title><g><path d="M15 3.998v-2C14.86.89 13.98 0 13 0H7C5.822 0 5.016.89 5 2v2l-3.02-.002c-1.098 0-1.97.89-1.97 2L0 16c0 1.11.882 2 1.98 2h16.033c1.1 0 1.98-.89 1.987-2V6c-.007-1.113-.884-2.002-1.982-2.002H15zM7 4V2.5s-.004-.5.5-.5h5c.5 0 .5.5.5.5V4H7z"/></g></svg></div>教育<div class="ProfileHeader-divider"></div>中国银行苏州分行<div class="ProfileHeader-divider"></div>暑假实习</div><div class="ProfileHeader-infoItem"><div class="ProfileHeader-iconWrapper"><svg viewBox="0 0 22 16" class="Icon Icon--education" style="height:16px;width:16px" width="16" height="16" aria-hidden="true"><title></title><g><path d="M11 0L0 3.94v.588l4.153 2.73v5.166C4.158 12.758 7.028 16 11 16c3.972 0 6.808-3.116 6.85-3.576l.006-5.163 4.13-2.732.014-.586L11 0z"/></g></svg></div>南加州大学（USC）<div class="ProfileHeader-divider"></div>经济<div class="ProfileHeader-divider"></div><div class="ProfileHeader-iconWrapper"><svg width="14" height="16" viewBox="0 0 14 14" class="Icon Icon--male" style="height:16px;width:14px" aria-hidden="true"><title></title><g><path d="M3.025 10.64c-1.367-1.366-1.367-3.582 0-4.95 1.367-1.366 3.583-1.366 4.95 0 1.367 1.368 1.367 3.584 0 4.95-1.367 1.368-3.583 1.368-4.95 0zm10.122-9.368c-.002-.414-.34-.75-.753-.753L8.322 0c-.413-.002-.746.33-.744.744.002.413.338.75.75.752l2.128.313c-.95.953-1.832 1.828-1.832 1.828-2.14-1.482-5.104-1.27-7.013.64-2.147 2.147-2.147 5.63 0 7.777 2.15 2.148 5.63 2.148 7.78 0 1.908-1.91 2.12-4.873.636-7.016l1.842-1.82.303 2.116c.003.414.34.75.753.753.413.002.746-.332.744-.745l-.52-4.073z" fill-rule="evenodd"/></g></svg></div></div></div></div></div><div class="ProfileHeader-contentFooter"><button type="button" class="Button ProfileHeader-expandButton Button--plain"><svg viewBox="0 0 10 6" class="Icon ProfileHeader-arrowIcon Icon--arrow" style="height:16px;width:10px" width="10" height="16" aria-hidden="true"><title></title><g><path d="M8.716.217L5.002 4 1.285.218C.99-.072.514-.072.22.218c-.294.29-.294.76 0 1.052l4.25 4.512c.292.29.77.29 1.063 0L9.78 1.27c.293-.29.293-.76 0-1.052-.295-.29-.77-.29-1.063 0z"/></g></svg>查看详细资料</button><div class="MemberButtonGroup ProfileButtonGroup ProfileHeader-buttons"><button type="button" class="Button FollowButton Button--primary Button--blue"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Plus FollowButton-icon" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M13.491 10.488s-.012-5.387 0-5.998c-.037-1.987-3.035-1.987-2.997 0-.038 1.912 0 5.998 0 5.998H4.499c-1.999.01-1.999 3.009 0 3.009s5.995-.01 5.995-.01v5.999c0 2.019 3.006 2.019 2.997 0-.01-2.019 0-5.998 0-5.998s3.996.009 6.004.009c2.008 0 2.008-3-.01-3.009h-5.994z" fill-rule="evenodd"></path></svg></span>关注他</button><button type="button" class="Button Button--grey Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Comments Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M11 2c5.571 0 9 4.335 9 8 0 6-6.475 9.764-11.481 8.022-.315-.07-.379-.124-.78.078-1.455.54-2.413.921-3.525 1.122-.483.087-.916-.25-.588-.581 0 0 .677-.417.842-1.904.064-.351-.14-.879-.454-1.171A8.833 8.833 0 0 1 2 10c0-3.87 3.394-8 9-8zm10.14 9.628c.758.988.86 2.009.86 3.15 0 1.195-.619 3.11-1.368 3.938-.209.23-.354.467-.308.722.12 1.073.614 1.501.614 1.501.237.239-.188.562-.537.5-.803-.146-1.495-.42-2.546-.811-.29-.146-.336-.106-.563-.057-2.043.711-4.398.475-6.083-.927 5.965-.524 8.727-3.03 9.93-8.016z" fill-rule="evenodd"></path></svg></span>发私信</button></div></div></div></div></div></div></div><div class="Profile-main"><div class="Profile-mainColumn"><div class="Card ProfileMain" id="ProfileMain"><div class="ProfileMain-header"><ul role="tablist" class="Tabs ProfileMain-tabs"><li role="tab" class="Tabs-item Tabs-item--noMeta" aria-controls="Profile-activities"><a class="Tabs-link" href="/people/richard-xu-25/activities">动态</a></li><li role="tab" class="Tabs-item" aria-controls="Profile-answers"><a class="Tabs-link" href="/people/richard-xu-25/answers">回答<span class="Tabs-meta">1,458</span></a></li><li role="tab" class="Tabs-item" aria-controls="Profile-asks"><a class="Tabs-link" href="/people/richard-xu-25/asks">提问<span class="Tabs-meta">12</span></a></li><li role="tab" class="Tabs-item" aria-controls="Profile-posts"><a class="Tabs-link" href="/people/richard-xu-25/posts">文章<span class="Tabs-meta">147</span></a></li><li role="tab" class="Tabs-item" aria-controls="Profile-columns"><a class="Tabs-link" href="/people/richard-xu-25/columns">专栏<span class="Tabs-meta">4</span></a></li><li role="tab" class="Tabs-item" aria-controls="Profile-pins"><a meta="28" class="Tabs-link" href="/people/richard-xu-25/pins">想法<span class="Tabs-meta">28</span></a></li><li role="tab" class="Tabs-item Tabs-item--noMeta"><div class="Popover Tabs-link"><button type="button" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" class="Button ProfileMain-menuToggler Button--plain">更多<svg viewBox="0 0 10 6" class="Icon ProfileMain-tabIcon Icon--arrow" style="height:16px;width:10px" width="10" height="16" aria-hidden="true"><title></title><g><path d="M8.716.217L5.002 4 1.285.218C.99-.072.514-.072.22.218c-.294.29-.294.76 0 1.052l4.25 4.512c.292.29.77.29 1.063 0L9.78 1.27c.293-.29.293-.76 0-1.052-.295-.29-.77-.29-1.063 0z"/></g></svg></button></div></li></ul></div><div class="List ProfileActivities" id="Profile-activities" data-zop-feedlistfather="1"><div class="List-header"><h4 class="List-headerText"><span>他<!-- -->的动态</span></h4><div class="List-headerOptions"></div></div><div class=""><div class="List-item"><div class="List-itemMeta"><div class="ActivityItem-meta"><span class="ActivityItem-metaTitle">赞同了回答</span><span>1 天前</span></div></div><div class="ContentItem AnswerItem" data-zop="{&quot;authorName&quot;:&quot;菜鱼ftfish&quot;,&quot;itemId&quot;:45218281,&quot;title&quot;:&quot;求十亿内所有质数的和，怎么做最快?&quot;,&quot;type&quot;:&quot;answer&quot;}" name="45218281" itemProp="answer" itemType="http://schema.org/Answer" itemscope=""><h2 class="ContentItem-title"><div itemProp="zhihu:question" itemType="http://schema.org/Question" itemscope=""><meta itemProp="url" content="https://www.zhihu.com/question/29580448"/><meta itemProp="name" content="求十亿内所有质数的和，怎么做最快?"/><a target="_blank" data-za-detail-view-element_name="Title" href="/question/29580448/answer/45218281">求十亿内所有质数的和，怎么做最快?</a></div></h2><div class="ContentItem-meta"><div class="AuthorInfo AnswerItem-authorInfo" itemProp="author" itemscope="" itemType="http://schema.org/Person"><meta itemProp="name" content="菜鱼ftfish"/><meta itemProp="image" content="https://pic4.zhimg.com/50/da8e974dc_s.jpg"/><meta itemProp="url" content="https://www.zhihu.com/people/ftfish"/><meta itemProp="zhihu:followerCount"/><span class="UserLink AuthorInfo-avatarWrapper"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="//www.zhihu.com/people/ftfish"><img class="Avatar AuthorInfo-avatar" width="38" height="38" src="https://pic4.zhimg.com/50/da8e974dc_xs.jpg" srcSet="https://pic4.zhimg.com/50/da8e974dc_l.jpg 2x" alt="菜鱼ftfish"/></a></div></div></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="//www.zhihu.com/people/ftfish">菜鱼ftfish</a></div></div></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"><div class="RichText ztext AuthorInfo-badgeText">半码农，半理论男，半CMUer，纯Nerd</div></div></div></div></div><div class="AnswerItem-extraInfo"><span class="Voters"><button type="button" class="Button Button--plain">1,439 人<!-- -->赞同了该回答</button></span></div></div><meta itemProp="image" content=""/><meta itemProp="upvoteCount" content="1439"/><meta itemProp="url" content="https://www.zhihu.com/question/29580448/answer/45218281"/><meta itemProp="dateCreated" content="2015-04-18T23:58:19.000Z"/><meta itemProp="dateModified" content="2015-04-19T15:37:09.000Z"/><meta itemProp="commentCount" content="80"/><div class="RichContent is-collapsed"><div class="RichContent-inner"><span class="RichText ztext CopyrightRichText-richText" itemProp="text">这个题目下的答案大致分为几种： Magic。例如 <a data-hash="c1c892f179f95da8b37a1dc604839d2c" href="http://www.zhihu.com/people/c1c892f179f95da8b37a1dc604839d2c" class="member_mention" data-editable="true" data-title="@陈硕" data-tip="p$b$c1c892f179f95da8b37a1dc604839d2c" data-hovercard="p$b$c1c892f179f95da8b37a1dc604839d2c">@陈硕</a>， <a data-hash="203b150d2cb5a62457a40471e40ae2f6" href="http://www.zhihu.com/people/203b150d2cb5a62457a40471e40ae2f6" class="member_mention" data-editable="true" data-title="@渡子厄" data-tip="p$b$203b150d2cb5a62457a40471e40ae2f6" data-hovercard="p$b$203b150d2cb5a62457a40471e40ae2f6">@渡子厄</a>（半Magic，因为Wolfram Alpha并没给出准确结果）。这个我就不评论了，因为没说是什么方法。暴力1到10亿，对每个数判断是否素数（或暴力试除，或Miller Rabin）。方法太暴力，最快也不过\Omega(n\log n)，其中n是上界10亿。筛出所有n以内的素数然后加起来。有人用Eratosthenes筛（复杂度O(n \log \log n)），有人用欧拉筛（最简单的线性筛之一），也有人用Matlab等软…</span><button type="button" class="Button ContentItem-more Button--plain">阅读全文<span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--ArrowDown ContentItem-arrowIcon" fill="currentColor" viewBox="0 0 24 24" width="24" height="24"><path d="M12 13L8.285 9.218a.758.758 0 0 0-1.064 0 .738.738 0 0 0 0 1.052l4.249 4.512a.758.758 0 0 0 1.064 0l4.246-4.512a.738.738 0 0 0 0-1.052.757.757 0 0 0-1.063 0L12.002 13z" fill-rule="evenodd"></path></svg></span></button></div><div class="ContentItem-actions"><span><button aria-label="赞同" type="button" class="Button VoteButton VoteButton--up"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--TriangleUp VoteButton-TriangleUp" fill="currentColor" viewBox="0 0 24 24" width="10" height="10"><path d="M2 18.242c0-.326.088-.532.237-.896l7.98-13.203C10.572 3.57 11.086 3 12 3c.915 0 1.429.571 1.784 1.143l7.98 13.203c.15.364.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H3.955c-1.08 0-1.955-.517-1.955-1.9z" fill-rule="evenodd"></path></svg></span>赞同 <!-- -->1.4K</button><button aria-label="反对" type="button" class="Button VoteButton VoteButton--down"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--TriangleDown" fill="currentColor" viewBox="0 0 24 24" width="10" height="10"><path d="M20.044 3H3.956C2.876 3 2 3.517 2 4.9c0 .326.087.533.236.896L10.216 19c.355.571.87 1.143 1.784 1.143s1.429-.572 1.784-1.143l7.98-13.204c.149-.363.236-.57.236-.896 0-1.386-.876-1.9-1.956-1.9z" fill-rule="evenodd"></path></svg></span></button></span><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd"></path></svg></span>80 条评论</button><div class="Popover ShareMenu ContentItem-action"><div class="" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd"></path></svg></span>分享</button></div></div><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd"></path></svg></span>收藏</button><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Heart Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M2 8.437C2 5.505 4.294 3.094 7.207 3 9.243 3 11.092 4.19 12 6c.823-1.758 2.649-3 4.651-3C19.545 3 22 5.507 22 8.432 22 16.24 13.842 21 12 21 10.158 21 2 16.24 2 8.437z" fill-rule="evenodd"></path></svg></span>感谢</button></div></div></div></div><div class="List-item"><div class="List-itemMeta"><div class="ActivityItem-meta"><span class="ActivityItem-metaTitle">赞同了回答</span><span>1 天前</span></div></div><div class="ContentItem AnswerItem" data-zop="{&quot;authorName&quot;:&quot;余翔&quot;,&quot;itemId&quot;:21654024,&quot;title&quot;:&quot;怎样证明0.9循环（0.999999...） = 1？&quot;,&quot;type&quot;:&quot;answer&quot;}" name="21654024" itemProp="answer" itemType="http://schema.org/Answer" itemscope=""><h2 class="ContentItem-title"><div itemProp="zhihu:question" itemType="http://schema.org/Question" itemscope=""><meta itemProp="url" content="https://www.zhihu.com/question/19607903"/><meta itemProp="name" content="怎样证明0.9循环（0.999999...） = 1？"/><a target="_blank" data-za-detail-view-element_name="Title" href="/question/19607903/answer/21654024">怎样证明0.9循环（0.999999...） = 1？</a></div></h2><div class="ContentItem-meta"><div class="AuthorInfo AnswerItem-authorInfo" itemProp="author" itemscope="" itemType="http://schema.org/Person"><meta itemProp="name" content="余翔"/><meta itemProp="image" content="https://pic4.zhimg.com/50/330be1908de8de12b307d19a519706b1_s.jpg"/><meta itemProp="url" content="https://www.zhihu.com/people/yu-xiang-63-75"/><meta itemProp="zhihu:followerCount"/><span class="UserLink AuthorInfo-avatarWrapper"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="//www.zhihu.com/people/yu-xiang-63-75"><img class="Avatar AuthorInfo-avatar" width="38" height="38" src="https://pic4.zhimg.com/50/330be1908de8de12b307d19a519706b1_xs.jpg" srcSet="https://pic4.zhimg.com/50/330be1908de8de12b307d19a519706b1_l.jpg 2x" alt="余翔"/></a></div></div></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="//www.zhihu.com/people/yu-xiang-63-75">余翔</a></div></div><a class="UserLink-badge" data-tooltip="优秀回答者" href="https://www.zhihu.com/question/48509984" target="_blank"><svg viewBox="0 0 20 20" class="Icon Icon--badgeGlorious" style="height:16px;width:16px" width="16" height="16" aria-hidden="true"><title>用户标识</title><g><g fill="none" fill-rule="evenodd">     <path d="M.64 11.39c1.068.895 1.808 2.733 1.66 4.113l.022-.196c-.147 1.384.856 2.4 2.24 2.278l-.198.016c1.387-.12 3.21.656 4.083 1.735l-.125-.154c.876 1.085 2.304 1.093 3.195.028l-.127.152c.895-1.068 2.733-1.808 4.113-1.66l-.198-.022c1.386.147 2.402-.856 2.28-2.238l.016.197c-.12-1.388.656-3.212 1.735-4.084l-.154.125c1.084-.876 1.093-2.304.028-3.195l.152.127c-1.068-.895-1.808-2.732-1.66-4.113l-.022.198c.147-1.386-.856-2.4-2.24-2.28l.198-.016c-1.387.122-3.21-.655-4.083-1.734l.125.153C10.802-.265 9.374-.274 8.483.79L8.61.64c-.895 1.068-2.733 1.808-4.113 1.662l.198.02c-1.386-.147-2.4.857-2.28 2.24L2.4 4.363c.12 1.387-.656 3.21-1.735 4.084l.154-.126C-.265 9.2-.274 10.626.79 11.517L.64 11.39z" fill="#FF9500"/>     <path d="M10.034 12.96L7.38 14.58c-.47.286-.747.09-.618-.45l.72-3.024-2.36-2.024c-.418-.357-.318-.68.235-.725l3.1-.25 1.195-2.87c.21-.508.55-.513.763 0l1.195 2.87 3.1.25c.547.043.657.365.236.725l-2.362 2.024.72 3.025c.13.535-.143.74-.616.45l-2.654-1.62z" fill="#FFF"/>   </g></g></svg></a></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"></div></div></div></div><div class="AnswerItem-extraInfo"><span class="Voters"><button type="button" class="Button Button--plain">1,602 人<!-- -->赞同了该回答</button></span></div></div><meta itemProp="image" content=""/><meta itemProp="upvoteCount" content="1602"/><meta itemProp="url" content="https://www.zhihu.com/question/19607903/answer/21654024"/><meta itemProp="dateCreated" content="2014-01-14T14:49:42.000Z"/><meta itemProp="dateModified" content="2015-08-17T07:42:20.000Z"/><meta itemProp="commentCount" content="297"/><div class="RichContent is-collapsed"><div class="RichContent-inner"><span class="RichText ztext CopyrightRichText-richText" itemProp="text"><a data-hash="70dfc36d5a0c21e8fb233fd31e93f62d" href="http://www.zhihu.com/people/70dfc36d5a0c21e8fb233fd31e93f62d" class="member_mention" data-editable="true" data-title="@申力立" data-tip="p$b$70dfc36d5a0c21e8fb233fd31e93f62d" data-hovercard="p$b$70dfc36d5a0c21e8fb233fd31e93f62d">@申力立</a> 的证明存在错误，错误在于显然地认为0.99\cdots 9\ (n\text{个}9)\ &lt;0.999\cdots\leq 1成立，他的理由是从高到低依次比较每一位数字的大小，但这并不是显然的，这一性质是在已经定义好了0.99\cdots 9\ (n\text{个}9)，0.999\cdots之后才有的。 完整地解释实数的十进制实数（实数的十进制表示）是什么，并不像你可能想象的那么自然。为什么00423与423是同一个实数，而32400与324不是同一个数？为什么123.444\cdots是实数…</span><button type="button" class="Button ContentItem-more Button--plain">阅读全文<span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--ArrowDown ContentItem-arrowIcon" fill="currentColor" viewBox="0 0 24 24" width="24" height="24"><path d="M12 13L8.285 9.218a.758.758 0 0 0-1.064 0 .738.738 0 0 0 0 1.052l4.249 4.512a.758.758 0 0 0 1.064 0l4.246-4.512a.738.738 0 0 0 0-1.052.757.757 0 0 0-1.063 0L12.002 13z" fill-rule="evenodd"></path></svg></span></button></div><div class="ContentItem-actions"><span><button aria-label="赞同" type="button" class="Button VoteButton VoteButton--up"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--TriangleUp VoteButton-TriangleUp" fill="currentColor" viewBox="0 0 24 24" width="10" height="10"><path d="M2 18.242c0-.326.088-.532.237-.896l7.98-13.203C10.572 3.57 11.086 3 12 3c.915 0 1.429.571 1.784 1.143l7.98 13.203c.15.364.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H3.955c-1.08 0-1.955-.517-1.955-1.9z" fill-rule="evenodd"></path></svg></span>赞同 <!-- -->1.6K</button><button aria-label="反对" type="button" class="Button VoteButton VoteButton--down"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--TriangleDown" fill="currentColor" viewBox="0 0 24 24" width="10" height="10"><path d="M20.044 3H3.956C2.876 3 2 3.517 2 4.9c0 .326.087.533.236.896L10.216 19c.355.571.87 1.143 1.784 1.143s1.429-.572 1.784-1.143l7.98-13.204c.149-.363.236-.57.236-.896 0-1.386-.876-1.9-1.956-1.9z" fill-rule="evenodd"></path></svg></span></button></span><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd"></path></svg></span>297 条评论</button><div class="Popover ShareMenu ContentItem-action"><div class="" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd"></path></svg></span>分享</button></div></div><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd"></path></svg></span>收藏</button><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Heart Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M2 8.437C2 5.505 4.294 3.094 7.207 3 9.243 3 11.092 4.19 12 6c.823-1.758 2.649-3 4.651-3C19.545 3 22 5.507 22 8.432 22 16.24 13.842 21 12 21 10.158 21 2 16.24 2 8.437z" fill-rule="evenodd"></path></svg></span>感谢</button></div></div></div></div><div></div></div></div></div></div><div class="Profile-sideColumn" data-za-module="RightSideBar"><div class="Card"><div class="Card-header Profile-sideColumnTitle"><div class="Card-headerText">认证与成就</div></div><div class="Profile-sideColumnItems"><div class="Profile-sideColumnItem"><a class="Profile-sideColumnItemTitle" href="/account/verification/intro" target="_blank"><div class="IconGraf"><div class="IconGraf-iconWrapper"><svg viewBox="0 0 20 20" class="Icon IconGraf-icon Icon--badgeCert" style="height:16px;width:16px" width="16" height="16" aria-hidden="true"><title></title><g><g fill="none" fill-rule="evenodd">     <path d="M.64 11.39c1.068.895 1.808 2.733 1.66 4.113l.022-.196c-.147 1.384.856 2.4 2.24 2.278l-.198.016c1.387-.12 3.21.656 4.083 1.735l-.125-.154c.876 1.085 2.304 1.093 3.195.028l-.127.152c.895-1.068 2.733-1.808 4.113-1.66l-.198-.022c1.386.147 2.402-.856 2.28-2.238l.016.197c-.12-1.388.656-3.212 1.735-4.084l-.154.125c1.084-.876 1.093-2.304.028-3.195l.152.127c-1.068-.895-1.808-2.732-1.66-4.113l-.022.198c.147-1.386-.856-2.4-2.24-2.28l.198-.016c-1.387.122-3.21-.655-4.083-1.734l.125.153C10.802-.265 9.374-.274 8.483.79L8.61.64c-.895 1.068-2.733 1.808-4.113 1.662l.198.02c-1.386-.147-2.4.857-2.28 2.24L2.4 4.363c.12 1.387-.656 3.21-1.735 4.084l.154-.126C-.265 9.2-.274 10.626.79 11.517L.64 11.39z" fill="#0F88EB"/>     <path d="M7.78 13.728l-2.633-3s-.458-.704.242-1.36c.7-.658 1.327-.22 1.327-.22L8.67 11.28l4.696-4.93s.663-.35 1.3.197c.635.545.27 1.382.27 1.382s-3.467 3.857-5.377 5.78c-.98.93-1.78.018-1.78.018z" fill="#FFF"/>1   </g></g></svg></div>认证信息</div></a><div class="Profile-sideColumnItemValue">南加州大学 经济学博士在读</div></div><div class="Profile-sideColumnItem"><div class="IconGraf"><div class="IconGraf-iconWrapper"><svg viewBox="0 0 20 20" class="Icon IconGraf-icon Icon--badgeGlorious" style="height:16px;width:16px" width="16" height="16" aria-hidden="true"><title></title><g><g fill="none" fill-rule="evenodd">     <path d="M.64 11.39c1.068.895 1.808 2.733 1.66 4.113l.022-.196c-.147 1.384.856 2.4 2.24 2.278l-.198.016c1.387-.12 3.21.656 4.083 1.735l-.125-.154c.876 1.085 2.304 1.093 3.195.028l-.127.152c.895-1.068 2.733-1.808 4.113-1.66l-.198-.022c1.386.147 2.402-.856 2.28-2.238l.016.197c-.12-1.388.656-3.212 1.735-4.084l-.154.125c1.084-.876 1.093-2.304.028-3.195l.152.127c-1.068-.895-1.808-2.732-1.66-4.113l-.022.198c.147-1.386-.856-2.4-2.24-2.28l.198-.016c-1.387.122-3.21-.655-4.083-1.734l.125.153C10.802-.265 9.374-.274 8.483.79L8.61.64c-.895 1.068-2.733 1.808-4.113 1.662l.198.02c-1.386-.147-2.4.857-2.28 2.24L2.4 4.363c.12 1.387-.656 3.21-1.735 4.084l.154-.126C-.265 9.2-.274 10.626.79 11.517L.64 11.39z" fill="#FF9500"/>     <path d="M10.034 12.96L7.38 14.58c-.47.286-.747.09-.618-.45l.72-3.024-2.36-2.024c-.418-.357-.318-.68.235-.725l3.1-.25 1.195-2.87c.21-.508.55-.513.763 0l1.195 2.87 3.1.25c.547.043.657.365.236.725l-2.362 2.024.72 3.025c.13.535-.143.74-.616.45l-2.654-1.62z" fill="#FFF"/>   </g></g></svg></div>优秀回答者</div><div class="Profile-sideColumnItemValue"><span><span><a href="/people/richard-xu-25/answers/topic/19560170">经济学</a>、</span><span><a href="/people/richard-xu-25/answers/topic/19567962">博弈论</a> </span>话题</span></div></div><div class="Profile-sideColumnItem"><div class="IconGraf"><div class="IconGraf-iconWrapper"><svg viewBox="0 0 14 16" class="Icon IconGraf-icon Icon--marked" style="height:14px;width:16px" width="16" height="14" aria-hidden="true"><title></title><g><path d="M0 1.505C0 .675.666 0 1.5 0H3v6l.59-.59c.778-.778 2.043-.777 2.82 0L7 6V0h5.498C13.328 0 14 .667 14 1.505v12.99c0 .83-.675 1.505-1.498 1.505H1.498C.67 16 0 15.333 0 14.495V1.505z" fill-rule="evenodd"/></g></svg></div><span>知乎收录</span><a class="Profile-sideColumnItemLink" href="/people/richard-xu-25/answers/included"> 23 个回答</a><a class="Profile-sideColumnItemLink" href="/people/richard-xu-25/posts/included"> 20 篇文章</a></div><div class="Profile-sideColumnItemValue">知乎圆桌和编辑推荐收录</div></div><div class="Profile-sideColumnItem"><div class="IconGraf"><div class="IconGraf-iconWrapper"><svg viewBox="0 0 20 18" xmlns="http://www.w3.org/2000/svg" class="Icon IconGraf-icon Icon--like" style="height:16px;width:16px" width="16" height="16" aria-hidden="true"><title></title><g><path d="M.718 7.024c-.718 0-.718.63-.718.63l.996 9.693c0 .703.718.65.718.65h1.45c.916 0 .847-.65.847-.65V7.793c-.09-.88-.853-.79-.846-.79l-2.446.02zm11.727-.05S13.2 5.396 13.6 2.89C13.765.03 11.55-.6 10.565.53c-1.014 1.232 0 2.056-4.45 5.83C5.336 6.965 5 8.01 5 8.997v6.998c-.016 1.104.49 2 1.99 2h7.586c2.097 0 2.86-1.416 2.86-1.416s2.178-5.402 2.346-5.91c1.047-3.516-1.95-3.704-1.95-3.704l-5.387.007z"/></g></svg></div>获得 <!-- -->110,067<!-- --> 次赞同</div><div class="Profile-sideColumnItemValue">获得 18,411 次感谢
                ，
                50,788 次收藏</div></div><div class="Profile-sideColumnItem"><div class="IconGraf"><div class="IconGraf-iconWrapper"><svg width="16" height="16" viewBox="0 0 16 16" class="Icon IconGraf-icon Icon--commonEdit" style="height:16px;width:16px" aria-hidden="true"><title></title><g><path d="M8 15.5C3.858 15.5.5 12.142.5 8 .5 3.858 3.858.5 8 .5c4.142 0 7.5 3.358 7.5 7.5 0 4.142-3.358 7.5-7.5 7.5zm3.032-11.643c-.22-.214-.574-.208-.79.013L5.1 9.173 6.778 10.8l5.142-5.303c.215-.222.21-.575-.01-.79l-.878-.85zm-6.77 7.107L4 12l1.028-.293.955-.27L4.503 10l-.242.964z" fill-rule="evenodd"/></g></svg></div><a class="Profile-sideColumnItemLink" href="/people/richard-xu-25/logs" target="_blank">参与 <!-- -->540<!-- --> 次公共编辑</a></div><div class="Profile-sideColumnItemValue"></div></div></div></div><div class="Card FollowshipCard"><div class="NumberBoard FollowshipCard-counts NumberBoard--divider"><a type="button" class="Button NumberBoard-item Button--plain" href="/people/richard-xu-25/following"><div class="NumberBoard-itemInner"><div class="NumberBoard-itemName">关注了</div><strong class="NumberBoard-itemValue" title="452">452</strong></div></a><a type="button" class="Button NumberBoard-item Button--plain" href="/people/richard-xu-25/followers"><div class="NumberBoard-itemInner"><div class="NumberBoard-itemName">关注者</div><strong class="NumberBoard-itemValue" title="69429">69,429</strong></div></a></div></div><div class="Profile-lightList"><a class="Profile-lightItem" target="_blank" href="/lives/users/6808bf0f275d42432d961d5285dc282f"><span class="Profile-lightItemName">举办的 Live ⚡️</span><span class="Profile-lightItemValue">1</span></a><a class="Profile-lightItem" href="/people/richard-xu-25/following/topics"><span class="Profile-lightItemName">关注的话题</span><span class="Profile-lightItemValue">17</span></a><a class="Profile-lightItem" href="/people/richard-xu-25/following/columns"><span class="Profile-lightItemName">关注的专栏</span><span class="Profile-lightItemValue">18</span></a><a class="Profile-lightItem" href="/people/richard-xu-25/following/questions"><span class="Profile-lightItemName">关注的问题</span><span class="Profile-lightItemValue">490</span></a><a class="Profile-lightItem" href="/people/richard-xu-25/following/collections"><span class="Profile-lightItemName">关注的收藏夹</span><span class="Profile-lightItemValue">1</span></a></div></div></div></div></main></div></div><div id="data" style="display:none" data-state="{&quot;common&quot;:{&quot;ask&quot;:{}},&quot;privacy&quot;:{&quot;showPrivacy&quot;:false},&quot;loading&quot;:{&quot;global&quot;:{&quot;count&quot;:0},&quot;local&quot;:{&quot;people/get/&quot;:false,&quot;people/getActivities/richard-xu-25&quot;:false}},&quot;entities&quot;:{&quot;users&quot;:{&quot;richard-xu-25&quot;:{&quot;isFollowed&quot;:false,&quot;educations&quot;:[{&quot;school&quot;:{&quot;introduction&quot;:&quot;&lt;a href=\&quot;http://www.compassedu.hk/univ_103_12?zhihuupdate\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;美国南加州大学\&quot;&gt;&lt;b&gt;&lt;u&gt;美国南加州大学&lt;/u&gt;&lt;/b&gt;&lt;/a&gt;（University\nof Southern California），位于美国加州洛杉矶市，1880年创立，是加州最古老的私立研究型大学。南加州大学是一所科研教学水平一流、有着丰富校园文化生活的世界著名私立大学，拥有庞大的校友网络“特洛伊家族”，当中不乏政治、商业和专业领域的知名人士。南加州大学运动风气兴盛，体育成绩亦很彪炳。它是美国所有大学中曾夺得第二多冠军奖的大学，总共得到104个冠军。&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/6a0fb1f76_is.jpg&quot;,&quot;name&quot;:&quot;南加州大学（USC）&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/topics/19755275&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;美国南加州大学 （University\nof Southern California），位于美国加州洛杉矶市，1880年创立，是加州最古老的私立研究型大学。南加州大学是一所科研教学水平一流、有着丰富校园文化生活的世界著名私立大学，拥有庞大的校友网络“特洛伊家族”，当中不乏政治、商业和专业领域的知名人士。南加州大学运动风气兴盛，体育成绩亦很彪炳。它是美国所有大学中曾夺得第二多冠军奖的大学，总共得到104个冠军。&quot;,&quot;id&quot;:&quot;19755275&quot;},&quot;major&quot;:{&quot;introduction&quot;:&quot;经济是价值的创造、转化与实现；人类经济活动就是创造、转化、实现价值，满足人类物质文化生活需要的活动。简单地说，经济就是对物资的管理；是对人们生产、使用、处理、分配一切物资这一整体动态现象的总称。这一概念微观的指一个家庭的家务管理，宏观的指一个国家的经国济民。在这一动态整体中，包括着人类的生产、储蓄、交换、分配的各项活动；生产是这一动态的基础，分配是这一动态的终点。&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/v2-b761e41f19531e4899892e9197de40dd_is.jpg&quot;,&quot;name&quot;:&quot;经济&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/topics/19552981&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;经济是价值的创造、转化与实现；人类经济活动就是创造、转化、实现价值，满足人类物质文化生活需要的活动。简单地说，经济就是对物资的管理；是对人们生产、使用、处理、分配一切物资这一整体动态现象的总称。这一概念微观的指一个家庭的家务管理，宏观的指一个国家的经国济民。在这一动态整体中，包括着人类的生产、储蓄、交换、分配的各项活动；生产是这一动态的基础，分配是这一动态的终点。&quot;,&quot;id&quot;:&quot;19552981&quot;}},{&quot;school&quot;:{&quot;introduction&quot;:&quot;清华大学（Tsinghua University），简称“清华”，由中华人民共和国教育部直属，中央直管副部级建制，位列“211工程”、“985工程”、“世界一流大学和一流学科”，入选“基础学科拔尖学生培养试验计划”、“高等学校创新能力提升计划”、“高等学校学科创新引智计划”，为九校联盟、中国大学校长联谊会、东亚研究型大学协会、亚洲大学联盟、环太平洋大学联盟、清华—剑桥—MIT低碳大学联盟成员，被誉为“红色工程师的摇篮”。清华大学的前身清华学堂始建于1911年，因水木清华而得名，是清政府设立的留美预备学校，其建校的资金源于1908年美国退还的部分庚子赔款。1912年更名为清华学校。1928年更名为国立清华大学。1937年抗日战争全面爆发后南迁长沙，与北京大学、南开大学组建国立长沙临时大学，1938年迁至昆明改名为国立西南联合大学。1946年迁回清华园。1949年中华人民共和国成立，清华大学进入了新的发展阶段。1952年全国高等学校院系调整后成为多科性工业大学。1978年以来逐步恢复和发展为综合性的研究型大学。水木清华，钟灵毓秀，清华大学秉持“自强不息、厚德载物”的校训和“行胜于言”的校风，坚持“中西融汇、古今贯通、文理渗透”的办学风格和“又红又专、全面发展”的培养特色，弘扬“爱国奉献、追求卓越”传统和“人文日新”精神。恰如清华园工字厅内对联所书——“槛外山光，历春夏秋冬、万千变幻，都非凡境；窗中云影，任东西南北、去来澹荡，洵是仙居”。&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/dfa000c15_is.jpg&quot;,&quot;name&quot;:&quot;清华大学&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/topics/19563245&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;清华大学（Tsinghua University），简称“清华”，由中华人民共和国教育部直属，中央直管副部级建制，位列“211工程”、“985工程”、“世界一流大学和一流学科”，入选“基础学科拔尖学生培养试验计划”、“高等学校创新能力提升计划”、“高等学校学科创新引智计划”，为九校联盟、中国大学校长联谊会、东亚研究型大学协会、亚洲大学联盟、环太平洋大学联盟、清华—剑桥—MIT低碳大学联盟成员，被誉为“红色工程师的摇篮”。清…&quot;,&quot;id&quot;:&quot;19563245&quot;},&quot;major&quot;:{&quot;introduction&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic1.zhimg.com/e82bab09c_is.jpg&quot;,&quot;name&quot;:&quot;经济与金融&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/topics/20180626&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;&quot;,&quot;id&quot;:&quot;20180626&quot;}}],&quot;followingCount&quot;:452,&quot;voteFromCount&quot;:0,&quot;userType&quot;:&quot;people&quot;,&quot;includedText&quot;:&quot;知乎圆桌和编辑推荐&quot;,&quot;pinsCount&quot;:28,&quot;isFollowing&quot;:false,&quot;isPrivacyProtected&quot;:false,&quot;accountStatus&quot;:[],&quot;includedArticlesCount&quot;:20,&quot;isForceRenamed&quot;:false,&quot;id&quot;:&quot;6808bf0f275d42432d961d5285dc282f&quot;,&quot;favoriteCount&quot;:1,&quot;voteupCount&quot;:110067,&quot;commercialQuestionCount&quot;:0,&quot;isBlocking&quot;:false,&quot;followingColumnsCount&quot;:18,&quot;headline&quot;:&quot;专栏：经济学博士生的日记本&quot;,&quot;urlToken&quot;:&quot;richard-xu-25&quot;,&quot;participatedLiveCount&quot;:2,&quot;isAdvertiser&quot;:false,&quot;followingFavlistsCount&quot;:1,&quot;favoritedCount&quot;:50788,&quot;isOrg&quot;:false,&quot;followerCount&quot;:69429,&quot;employments&quot;:[{&quot;job&quot;:{&quot;introduction&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic1.zhimg.com/e82bab09c_is.jpg&quot;,&quot;name&quot;:&quot;暑假实习&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/topics/19570405&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;&quot;,&quot;id&quot;:&quot;19570405&quot;},&quot;company&quot;:{&quot;introduction&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/v2-5949a042b7d9830a242a035cbc0fdba7_is.jpg&quot;,&quot;name&quot;:&quot;中国银行苏州分行&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/topics/&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;&quot;,&quot;id&quot;:&quot;&quot;}}],&quot;type&quot;:&quot;people&quot;,&quot;avatarHue&quot;:&quot;&quot;,&quot;avatarUrlTemplate&quot;:&quot;https://pic2.zhimg.com/92c892d622d4a92d81871b8817b12d9d_{size}.jpg&quot;,&quot;followingTopicCount&quot;:17,&quot;description&quot;:&quot;专栏：经济学博士生的日记本&quot;,&quot;business&quot;:{&quot;introduction&quot;:&quot;教育，教育者有目的有计划有组织的对受教育者的心智发展进行教化培育，以现有的经验、学识推敲于人，为其解释各种现象、问题或行为，以增长能力经验，其根本是以人的一种相对成熟或理性的思维来认知对待，让事物得以接近其最根本的存在，人在其中，慢慢的对一种事物由感官触摸而到以认知理解的状态，并形成一种相对完善或理性的自我意识思维...但同时，人有着自我意识上的思维，又有着其自我的感官维度，所以，任何教育性的意识思维都未必能够绝对正确，而应该感性式的理解其思维的方向，只要他不偏差事物的内在；教育又是一种思维的传授，而人因为其自身的意识形态，又有着另样的思维走势，所以，教育当以最客观、最公正的意识思维教化于人，如此，人的思维才不至于过于偏差，并因思维的丰富而逐渐成熟、理性，并由此，走向最理性的自我和拥有最正确的思维认知，这就是教育的根本所在。教育也是一种教书育人的过程，可将一种最客观的理解教予他人，而后在自己的生活经验中得以自己所认为的价值观。教育，是一种提高人的综合素质的实践活动。&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/f672948364a6592511342b965bbfad91_is.jpg&quot;,&quot;name&quot;:&quot;教育&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/topics/19553176&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;教育，教育者有目的有计划有组织的对受教育者的心智发展进行教化培育，以现有的经验、学识推敲于人，为其解释各种现象、问题或行为，以增长能力经验，其根本是以人的一种相对成熟或理性的思维来认知对待，让事物得以接近其最根本的存在，人在其中，慢慢的对一种事物由感官触摸而到以认知理解的状态，并形成一种相对完善或理性的自我意识思维...但同时，人有着自我意识上的思维，又有着其自我的感官维度，所以，任何教育性的意识…&quot;,&quot;id&quot;:&quot;19553176&quot;},&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/92c892d622d4a92d81871b8817b12d9d_is.jpg&quot;,&quot;columnsCount&quot;:4,&quot;hostedLiveCount&quot;:1,&quot;isActive&quot;:1,&quot;thankToCount&quot;:0,&quot;mutualFolloweesCount&quot;:0,&quot;coverUrl&quot;:&quot;https://pic1.zhimg.com/v2-90775e228419bcd756cdcc2b1e194a4d_r.jpg&quot;,&quot;thankFromCount&quot;:0,&quot;voteToCount&quot;:0,&quot;isBlocked&quot;:false,&quot;answerCount&quot;:1458,&quot;allowMessage&quot;:false,&quot;articlesCount&quot;:147,&quot;name&quot;:&quot;Richard Xu&quot;,&quot;questionCount&quot;:12,&quot;locations&quot;:[{&quot;introduction&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic1.zhimg.com/e82bab09c_is.jpg&quot;,&quot;name&quot;:&quot;洛杉矶&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/topics/&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;&quot;,&quot;id&quot;:&quot;&quot;},{&quot;introduction&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic1.zhimg.com/e82bab09c_is.jpg&quot;,&quot;name&quot;:&quot;苏州市&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/topics/&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;&quot;,&quot;id&quot;:&quot;&quot;}],&quot;badge&quot;:[{&quot;type&quot;:&quot;identity&quot;,&quot;description&quot;:&quot;南加州大学 经济学博士在读&quot;},{&quot;topics&quot;:[{&quot;introduction&quot;:&quot;经济学是研究人类经济活动的规律即价值的创造、转化、实现的规律——经济发展规律的理论，分为政治经济学与科学经济学两大类型。政治经济学根据所代表的阶级的利益为了突出某个阶级在经济活动中的地位和作用自发从某个侧面研究价值规律或经济规律，科学经济学自觉从整体上研究价值规律或经济规律。对称经济学就是科学经济学。经济学的核心是经济规律；在对称经济学看来，资源的优化配置与优化再生只是经济规律的展开和具体表现，经济学的对象应该是资源优化配置与优化再生后面的经济规律与经济本质，而不是停留在资源的优化配置与优化再生层面。停留在资源的优化配置与优化再生层面的，是政治经济学而不是科学的经济学。要研究经济发展的规律就必须从整体上统一研究经济现象，宏观经济与微观经济是统一的经济体中对称的两个方面，所以在科学的对称经济学范式框架中，有宏观经济与微观经济之分，没有宏观经济学与微观经济学之别；而政治经济学总是把经济学分为宏观经济学与微观经济学。&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/30ffc337a555a56877aebdab9c5042f7_is.jpg&quot;,&quot;name&quot;:&quot;经济学&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/topics/19560170&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;经济学是研究人类经济活动的规律即价值的创造、转化、实现的规律——经济发展规律的理论，分为政治经济学与科学经济学两大类型。政治经济学根据所代表的阶级的利益为了突出某个阶级在经济活动中的地位和作用自发从某个侧面研究价值规律或经济规律，科学经济学自觉从整体上研究价值规律或经济规律。对称经济学就是科学经济学。经济学的核心是经济规律；在对称经济学看来，资源的优化配置与优化再生只是经济规律的展开和具体表现，…&quot;,&quot;id&quot;:&quot;19560170&quot;},{&quot;introduction&quot;:&quot;博弈论又被称为对策论（Game Theory），既是现代数学的一个新分支，也是运筹学的一个重要学科。博弈论主要研究公式化了的激励结构间的相互作用，是研究具有斗争或竞争性质现象的数学理论和方法。 博弈论考虑游戏中的个体的预测行为和实际行为，并研究它们的优化策略。生物学家使用博弈理论来理解和预测进化论的某些结果。博弈论已经成为经济学的标准分析工具之一。在金融学、证券学、生物学、经济学、国际关系、计算机科学、政治学、军事战略和其他很多学科都有广泛的应用。&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/43efd061747369b1f03cc2c34adca45e_is.jpg&quot;,&quot;name&quot;:&quot;博弈论&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/topics/19567962&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;博弈论又被称为对策论（Game Theory），既是现代数学的一个新分支，也是运筹学的一个重要学科。博弈论主要研究公式化了的激励结构间的相互作用，是研究具有斗争或竞争性质现象的数学理论和方法。 博弈论考虑游戏中的个体的预测行为和实际行为，并研究它们的优化策略。生物学家使用博弈理论来理解和预测进化论的某些结果。博弈论已经成为经济学的标准分析工具之一。在金融学、证券学、生物学、经济学、国际关系、计算机科学、政治…&quot;,&quot;id&quot;:&quot;19567962&quot;}],&quot;type&quot;:&quot;best_answerer&quot;,&quot;description&quot;:&quot;优秀回答者&quot;}],&quot;includedAnswersCount&quot;:23,&quot;url&quot;:&quot;http://www.zhihu.com/people/6808bf0f275d42432d961d5285dc282f&quot;,&quot;messageThreadToken&quot;:&quot;2639244000&quot;,&quot;logsCount&quot;:540,&quot;followingQuestionCount&quot;:490,&quot;thankedCount&quot;:18411,&quot;gender&quot;:1}},&quot;questions&quot;:{&quot;298235353&quot;:{&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;Lynnsan&quot;,&quot;headline&quot;:&quot;艺术/哲学/人性&quot;,&quot;urlToken&quot;:&quot;linyu-88&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/98e322e7076c0e72ccec028c1b50dcd0&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/50/v2-2a8793378a1d034f27e3de1cb24f3e93_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;98e322e7076c0e72ccec028c1b50dcd0&quot;},&quot;relationship&quot;:{&quot;isAuthor&quot;:false,&quot;isFollowing&quot;:false},&quot;created&quot;:1539333672,&quot;url&quot;:&quot;https://api.zhihu.com/questions/298235353&quot;,&quot;title&quot;:&quot;共享经济的发展能够消除固定成本吗？&quot;,&quot;excerpt&quot;:&quot;在曼昆《经济学原理》的14章，讲到短期决策不考虑固定成本，但是长期决策需要考虑固…&quot;,&quot;detail&quot;:&quot;&lt;p&gt;在曼昆《经济学原理》的14章，讲到短期决策不考虑固定成本，但是长期决策需要考虑固定成本。所以就在想对于企业什么样的是长期什么样的短期？好像问题的根本在于固定成本的不灵活（非专业术语），固定成本不管是雇佣的工人或是设备等都是有限的资源，有工时的限制、设备由于损耗的最多使用次数等，由于固定成本的不灵活才造成了资源的浪费，所以才会在短期决策中只要P＞MC就会选择生产。而又联想到共享经济好像刚好又能解决固定成本的不灵活，所以提出这个问题。&lt;/p&gt;&quot;,&quot;answerCount&quot;:8,&quot;boundTopicIds&quot;:[3324,5539,18567,154911,192834],&quot;commentCount&quot;:0,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:35,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:298235353}},&quot;answers&quot;:{&quot;21654024&quot;:{&quot;relationship&quot;:{&quot;isAuthor&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false,&quot;isNothelp&quot;:false,&quot;upvotedFolloweeIds&quot;:[]},&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;&lt;a data-hash=\&quot;70dfc36d5a0c21e8fb233fd31e93f62d\&quot; href=\&quot;http://www.zhihu.com/people/70dfc36d5a0c21e8fb233fd31e93f62d\&quot; class=\&quot;member_mention\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;@申力立\&quot; data-tip=\&quot;p$b$70dfc36d5a0c21e8fb233fd31e93f62d\&quot; data-hovercard=\&quot;p$b$70dfc36d5a0c21e8fb233fd31e93f62d\&quot;&gt;@申力立&lt;/a&gt; 的证明存在错误，错误在于显然地认为0.99\\cdots 9\\ (n\\text{个}9)\\ &amp;lt;0.999\\cdots\\leq 1成立，他的理由是从高到低依次比较每一位数字的大小，但这并不是显然的，这一性质是在已经定义好了0.99\\cdots 9\\ (n\\text{个}9)，0.999\\cdots之后才有的。 完整地解释实数的十进制实数（实数的十进制表示）是什么，并不像你可能想象的那么自然。为什么00423与423是同一个实数，而32400与324不是同一个数？为什么123.444\\cdots是实数…&quot;,&quot;createdTime&quot;:1389710982,&quot;previewType&quot;:&quot;default&quot;,&quot;id&quot;:21654024,&quot;isCopyable&quot;:true,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;余翔&quot;,&quot;headline&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;yu-xiang-63-75&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/24c0f8a6d86da9668b25ef3e0fa56f08&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/330be1908de8de12b307d19a519706b1_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[{&quot;topics&quot;:[],&quot;topicNames&quot;:[&quot;数学&quot;,&quot;高等数学&quot;],&quot;type&quot;:&quot;best_answerer&quot;,&quot;description&quot;:&quot;优秀回答者&quot;}],&quot;id&quot;:&quot;24c0f8a6d86da9668b25ef3e0fa56f08&quot;},&quot;url&quot;:&quot;https://api.zhihu.com/answers/21654024&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;question&quot;:{&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;无心之矢&quot;,&quot;headline&quot;:&quot;世间的浪人&quot;,&quot;urlToken&quot;:&quot;neverarrow&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/b703e539bec4bfc3097f213a67f5cbfc&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/1ae29a389_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;b703e539bec4bfc3097f213a67f5cbfc&quot;},&quot;created&quot;:1303386664,&quot;url&quot;:&quot;https://api.zhihu.com/questions/19607903&quot;,&quot;title&quot;:&quot;怎样证明0.9循环（0.999999...） = 1？&quot;,&quot;excerpt&quot;:&quot;0.999...后面表示无限循环的9 不想开新问题，所以在这里补充一些疑问： 如果说0.999999...和1在数值上是严格相等的，那么两者真正的区别是什么？ 是否可以认为0.999999...和1的相等需要建立在一些隐含的条件的基础之上？ 也就是说，0.999999...和1是否并不总是相等？ 其中在初等数学阶段，是否可以认为由于保证0.999999...和1相等的隐含条件并不存在，因此学生们的怀疑实际上是合理的？&quot;,&quot;answerCount&quot;:466,&quot;boundTopicIds&quot;:[1291],&quot;commentCount&quot;:52,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:4913,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:19607903},&quot;updatedTime&quot;:1439797340,&quot;content&quot;:&quot;&lt;a data-hash=\&quot;70dfc36d5a0c21e8fb233fd31e93f62d\&quot; href=\&quot;http://www.zhihu.com/people/70dfc36d5a0c21e8fb233fd31e93f62d\&quot; class=\&quot;member_mention\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;@申力立\&quot; data-tip=\&quot;p$b$70dfc36d5a0c21e8fb233fd31e93f62d\&quot; data-hovercard=\&quot;p$b$70dfc36d5a0c21e8fb233fd31e93f62d\&quot;&gt;@申力立&lt;/a&gt; 的证明存在错误，错误在于显然地认为&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.99%5Ccdots+9%5C+%28n%5Ctext%7B%E4%B8%AA%7D9%29%5C+%3C0.999%5Ccdots%5Cleq+1\&quot; alt=\&quot;0.99\\cdots 9\\ (n\\text{个}9)\\ &amp;lt;0.999\\cdots\\leq 1\&quot; eeimg=\&quot;1\&quot;&gt;成立，他的理由是从高到低依次比较每一位数字的大小，但这并不是显然的，这一性质是在已经定义好了&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.99%5Ccdots+9%5C+%28n%5Ctext%7B%E4%B8%AA%7D9%29\&quot; alt=\&quot;0.99\\cdots 9\\ (n\\text{个}9)\&quot; eeimg=\&quot;1\&quot;&gt;，&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.999%5Ccdots\&quot; alt=\&quot;0.999\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;之后才有的。&lt;br&gt;&lt;br&gt;完整地解释实数的十进制实数（实数的十进制表示）是什么，并不像你可能想象的那么自然。为什么&lt;img src=\&quot;http://www.zhihu.com/equation?tex=00423\&quot; alt=\&quot;00423\&quot; eeimg=\&quot;1\&quot;&gt;与&lt;img src=\&quot;http://www.zhihu.com/equation?tex=423\&quot; alt=\&quot;423\&quot; eeimg=\&quot;1\&quot;&gt;是同一个实数，而&lt;img src=\&quot;http://www.zhihu.com/equation?tex=32400\&quot; alt=\&quot;32400\&quot; eeimg=\&quot;1\&quot;&gt;与&lt;img src=\&quot;http://www.zhihu.com/equation?tex=324\&quot; alt=\&quot;324\&quot; eeimg=\&quot;1\&quot;&gt;不是同一个数？为什么&lt;img src=\&quot;http://www.zhihu.com/equation?tex=123.444%5Ccdots\&quot; alt=\&quot;123.444\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;是实数，而&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Ccdots444.321\&quot; alt=\&quot;\\cdots444.321\&quot; eeimg=\&quot;1\&quot;&gt;不是实数？以及为什么当我们在作加法或乘法时必须关注小数点的位置？为什么&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.999%5Ccdots\&quot; alt=\&quot;0.999\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;和&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1\&quot; alt=\&quot;1\&quot; eeimg=\&quot;1\&quot;&gt;是同一个实数？最小的正实数是是什么，是否是&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.00%5Ccdots01\&quot; alt=\&quot;0.00\\cdots01\&quot; eeimg=\&quot;1\&quot;&gt;？&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.999%5Ccdots%3D1\&quot; alt=\&quot;0.999\\cdots=1\&quot; eeimg=\&quot;1\&quot;&gt;简单地说就是实数的十进制表示唯一性不成立，所有的实数，当它是&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%25E6%259C%2589%25E9%2599%2590%25E5%25B0%258F%25E6%2595%25B0\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;有限小数&lt;/a&gt;时（从小数点后某位开始全是零的数），它有两种十进制表示，当它不能表示成有限小数时，它只有一种十进制表示。&lt;/b&gt;&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1\&quot; alt=\&quot;1\&quot; eeimg=\&quot;1\&quot;&gt;仅有两种十进制表示，即&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1.000%5Ccdots\&quot; alt=\&quot;1.000\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;和&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.999%5Ccdots\&quot; alt=\&quot;0.999\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;。&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1.000%5Ccdots\&quot; alt=\&quot;1.000\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;表示的是Cauchy序列&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1.0%2C%5Cquad+1.00%2C%5Cquad+1.000%2C%5Cquad+%5Ccdots\&quot; alt=\&quot;1.0,\\quad 1.00,\\quad 1.000,\\quad \\cdots\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;的极限，很明显它的极限为&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1\&quot; alt=\&quot;1\&quot; eeimg=\&quot;1\&quot;&gt;。&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.999%5Ccdots\&quot; alt=\&quot;0.999\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;表示的是Cauchy序列&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.9%2C%5Cquad+0.99%2C%5Cquad+0.999%2C%5Cquad+%5Ccdots\&quot; alt=\&quot;0.9,\\quad 0.99,\\quad 0.999,\\quad \\cdots\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;的极限，这个序列的极限也是是&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1\&quot; alt=\&quot;1\&quot; eeimg=\&quot;1\&quot;&gt;。&lt;br&gt;这里我推荐《&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//book.douban.com/subject/3235486/\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;陶哲轩实分析 &lt;/a&gt;》一书，tao在附录B中详细地解释了这个问题。&lt;br&gt;&lt;br&gt;下面来严格地处理&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Real_number\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;实数&lt;/a&gt;，从有理数来构造实数有两种方法&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//en.wikipedia.org/wiki/Dedekind_cut\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Dedekind分割&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Cauchy_sequence\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Cauchy序列&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;一、实数的构造&lt;/b&gt;&lt;br&gt;这里采用Cauchy序列的方法来从有理数构造实数，设&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathcal%7BC%7D\&quot; alt=\&quot;\\mathcal{C}\&quot; eeimg=\&quot;1\&quot;&gt;表示所有有理数的Cauchy序列的集合，那么我们要构造的实数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathbf%7BR%7D\&quot; alt=\&quot;\\mathbf{R}\&quot; eeimg=\&quot;1\&quot;&gt;就是&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathcal%7BC%7D\&quot; alt=\&quot;\\mathcal{C}\&quot; eeimg=\&quot;1\&quot;&gt;除以一个&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Equivalence_class\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;等价关系&lt;/a&gt;的商集：&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathbf%7BR%7D%3A%3D%5Cmathcal%7BC%7D%2F%5Csim\&quot; alt=\&quot;\\mathbf{R}:=\\mathcal{C}/\\sim\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;这个等价关系是&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%28a_n%29_%7Bn%3D1%7D%5E%5Cinfty%5Csim+%28b_n%29_%7Bn%3D1%7D%5E%5Cinfty\&quot; alt=\&quot;(a_n)_{n=1}^\\infty\\sim (b_n)_{n=1}^\\infty\&quot; eeimg=\&quot;1\&quot;&gt;当且仅当对每个有理数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cvarepsilon%3E0\&quot; alt=\&quot;\\varepsilon&amp;gt;0\&quot; eeimg=\&quot;1\&quot;&gt;，存在&lt;img src=\&quot;http://www.zhihu.com/equation?tex=N\&quot; alt=\&quot;N\&quot; eeimg=\&quot;1\&quot;&gt;使得对一切&lt;img src=\&quot;http://www.zhihu.com/equation?tex=n%5Cgeq+N\&quot; alt=\&quot;n\\geq N\&quot; eeimg=\&quot;1\&quot;&gt;都有&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%7Ca_n-b_n%7C%5Cleq+%5Cvarepsilon\&quot; alt=\&quot;|a_n-b_n|\\leq \\varepsilon\&quot; eeimg=\&quot;1\&quot;&gt;。当然这里认为有理数已经定义好了，你可能会问，有理数是如何定义的？这里简单的回顾一下各种“数”的定义：首先自然数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathbf%7BN%7D\&quot; alt=\&quot;\\mathbf{N}\&quot; eeimg=\&quot;1\&quot;&gt;是最基础的，它是采用&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Peano_axioms\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Peano公理&lt;/a&gt;和集合论中的&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Zermelo%25E2%2580%2593Fraenkel_set_theory\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;ZF公理&lt;/a&gt;来定义的，整数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathbf%7BZ%7D\&quot; alt=\&quot;\\mathbf{Z}\&quot; eeimg=\&quot;1\&quot;&gt;是&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathbf%7BN%7D\&quot; alt=\&quot;\\mathbf{N}\&quot; eeimg=\&quot;1\&quot;&gt;的加法完备化，有理数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathbf%7BQ%7D\&quot; alt=\&quot;\\mathbf{Q}\&quot; eeimg=\&quot;1\&quot;&gt;是&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathbf%7BZ%7D\&quot; alt=\&quot;\\mathbf{Z}\&quot; eeimg=\&quot;1\&quot;&gt;的乘法完备化，我们要构造的实数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathbf%7BR%7D\&quot; alt=\&quot;\\mathbf{R}\&quot; eeimg=\&quot;1\&quot;&gt;是&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathbf%7BQ%7D\&quot; alt=\&quot;\\mathbf{Q}\&quot; eeimg=\&quot;1\&quot;&gt;的度量完备化。&lt;br&gt;&lt;br&gt;构造实数首先需要Cauchy序列的概念。&lt;br&gt;&lt;b&gt;定义. &lt;/b&gt;（Cauchy序列）一个有理数序列&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%28a_n%29_%7Bn%3D0%7D%5E%7B%5Cinfty%7D\&quot; alt=\&quot;(a_n)_{n=0}^{\\infty}\&quot; eeimg=\&quot;1\&quot;&gt;叫做&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Cauchy_sequence\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Cauchy序列&lt;/a&gt;，当且仅当对每个有理数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cvarepsilon++%3E0\&quot; alt=\&quot;\\varepsilon  &amp;gt;0\&quot; eeimg=\&quot;1\&quot;&gt;，存在&lt;img src=\&quot;http://www.zhihu.com/equation?tex=N%5Cgeq+0\&quot; alt=\&quot;N\\geq 0\&quot; eeimg=\&quot;1\&quot;&gt;使得对一切&lt;img src=\&quot;http://www.zhihu.com/equation?tex=j%2Ck%5Cgeq+N\&quot; alt=\&quot;j,k\\geq N\&quot; eeimg=\&quot;1\&quot;&gt;，&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%7Ca_j-a_k%7C%5Cleq+%5Cvarepsilon+\&quot; alt=\&quot;|a_j-a_k|\\leq \\varepsilon \&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;比如&lt;img src=\&quot;http://www.zhihu.com/equation?tex=a_n%3A%3D1%2Fn\&quot; alt=\&quot;a_n:=1/n\&quot; eeimg=\&quot;1\&quot;&gt;，即&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1%2C1%2F2+%2C1%2F3%2C%5Ccdots\&quot; alt=\&quot;1,1/2 ,1/3,\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;是有理数的Cauchy序列&lt;br&gt;&lt;br&gt;&lt;b&gt;定义.&lt;/b&gt;（等价的序列） 两个序列&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%28a_n%29_%7Bn%3D1%7D%5E%7B%5Cinfty%7D\&quot; alt=\&quot;(a_n)_{n=1}^{\\infty}\&quot; eeimg=\&quot;1\&quot;&gt;和&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%28b_n%29_%7Bn%3D1%7D%5E%7B%5Cinfty%7D\&quot; alt=\&quot;(b_n)_{n=1}^{\\infty}\&quot; eeimg=\&quot;1\&quot;&gt;是&lt;b&gt;等价的&lt;/b&gt;当且仅当对每个有理数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cvarepsilon+%3E0\&quot; alt=\&quot;\\varepsilon &amp;gt;0\&quot; eeimg=\&quot;1\&quot;&gt;，存在&lt;img src=\&quot;http://www.zhihu.com/equation?tex=N%5Cgeq+0\&quot; alt=\&quot;N\\geq 0\&quot; eeimg=\&quot;1\&quot;&gt;使得&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%7Ca_n-b_n%7C%5Cleq+%5Cvarepsilon+\&quot; alt=\&quot;|a_n-b_n|\\leq \\varepsilon \&quot; eeimg=\&quot;1\&quot;&gt;对一切&lt;img src=\&quot;http://www.zhihu.com/equation?tex=n%5Cgeq+N\&quot; alt=\&quot;n\\geq N\&quot; eeimg=\&quot;1\&quot;&gt;成立。&lt;br&gt;&lt;br&gt;实数就是所有Cauchy序列的集合&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathcal%7BC%7D\&quot; alt=\&quot;\\mathcal{C}\&quot; eeimg=\&quot;1\&quot;&gt;除以这个等价关系的商集。&lt;br&gt;&lt;b&gt;定义. &lt;/b&gt;（实数）形如&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathrm%7BLIM%7D_%7Bn%5Crightarrow+%5Cinfty%7Da_n\&quot; alt=\&quot;\\mathrm{LIM}_{n\\rightarrow \\infty}a_n\&quot; eeimg=\&quot;1\&quot;&gt;的对象叫做&lt;b&gt;实数&lt;/b&gt;，其中&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%28a_n%29_%7Bn%3D1%7D%5E%7B%5Cinfty%7D\&quot; alt=\&quot;(a_n)_{n=1}^{\\infty}\&quot; eeimg=\&quot;1\&quot;&gt;是有理数的一个Cauchy序列。两个实数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathrm%7BLIM%7D_%7Bn%5Crightarrow+%5Cinfty%7Da_n\&quot; alt=\&quot;\\mathrm{LIM}_{n\\rightarrow \\infty}a_n\&quot; eeimg=\&quot;1\&quot;&gt;和&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathrm%7BLIM%7D_%7Bn%5Crightarrow+%5Cinfty%7Db_n\&quot; alt=\&quot;\\mathrm{LIM}_{n\\rightarrow \\infty}b_n\&quot; eeimg=\&quot;1\&quot;&gt;叫做&lt;b&gt;相等的&lt;/b&gt;当且仅当&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%28a_n%29_%7Bn%3D1%7D%5E%7B%5Cinfty%7D\&quot; alt=\&quot;(a_n)_{n=1}^{\\infty}\&quot; eeimg=\&quot;1\&quot;&gt;和&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%28b_n%29_%7Bn%3D1%7D%5E%7B%5Cinfty%7D\&quot; alt=\&quot;(b_n)_{n=1}^{\\infty}\&quot; eeimg=\&quot;1\&quot;&gt;是等价的Cauchy序列。我们把&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathrm%7BLIM%7D_%7Bn%5Crightarrow+%5Cinfty%7Da_n\&quot; alt=\&quot;\\mathrm{LIM}_{n\\rightarrow \\infty}a_n\&quot; eeimg=\&quot;1\&quot;&gt;叫作 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%28a_n%29_%7Bn%3D1%7D%5E%7B%5Cinfty%7D\&quot; alt=\&quot;(a_n)_{n=1}^{\\infty}\&quot; eeimg=\&quot;1\&quot;&gt;的&lt;b&gt;形式极限&lt;/b&gt;。&lt;br&gt;&lt;b&gt;注.&lt;/b&gt; 符号&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathrm%7BLIM%7D_%7Bn%5Cto%5Cinfty%7D+a_n\&quot; alt=\&quot;\\mathrm{LIM}_{n\\to\\infty} a_n\&quot; eeimg=\&quot;1\&quot;&gt;的集合论解释是，它是Cauchy序列&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%28a_n%29_%7Bn%3D1%7D%5E%7B%5Cinfty%7D\&quot; alt=\&quot;(a_n)_{n=1}^{\\infty}\&quot; eeimg=\&quot;1\&quot;&gt;在这个等价关系下的等价类：&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathrm%7BLIM%7D_%7Bn%5Cto%5Cinfty%7D+a_n%3A%3D%5C%7B%28b_n%29_%7Bn%3D1%7D%5E%5Cinfty%3A%28b_n%29_%7Bn%3D1%7D%5E%5Cinfty%5Csim%28a_n%29_%7Bn%3D1%7D%5E%5Cinfty%5C%7D\&quot; alt=\&quot;\\mathrm{LIM}_{n\\to\\infty} a_n:=\\{(b_n)_{n=1}^\\infty:(b_n)_{n=1}^\\infty\\sim(a_n)_{n=1}^\\infty\\}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;但这种解释对于我们如何处理实数并没有什么帮助。&lt;br&gt;&lt;br&gt;后面我们将定义真正的极限，并且证明一个Cauchy序列的形式极限与此序列的极限是相同的。之所以定义形式极限是为了避免循环论证：定义实数需要极限的概念，而极限的概念只有当我们定义了实数之后方能适当地定义。至此，实数就定义好了。&lt;br&gt;&lt;br&gt;&lt;b&gt;二、实数的十进制表示&lt;/b&gt;&lt;br&gt;前面的实数的构造我们没有用到十进制，因为十进系统本身在数学中不是本质的。十进制系统对于计算很方便，而且由于一千多年的使用，我们从小就习惯于这个系统，但在数学史上，它的确是相等较为近代的发明。但为了处理&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.999%5Ccdots+\&quot; alt=\&quot;0.999\\cdots \&quot; eeimg=\&quot;1\&quot;&gt;之类的数，我们需要实数的十进制表示。&lt;br&gt;&lt;br&gt;&lt;b&gt;定义. &lt;/b&gt;（digit）一个digit是&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0%2C1%2C2%2C%5Ccdots%2C9\&quot; alt=\&quot;0,1,2,\\cdots,9\&quot; eeimg=\&quot;1\&quot;&gt;这十个符号之一。我们把这些digit与自然数依下述公式等同起来&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0%3A%3D0\&quot; alt=\&quot;0:=0\&quot; eeimg=\&quot;1\&quot;&gt;，&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1%3A%3D0%2B%2B\&quot; alt=\&quot;1:=0++\&quot; eeimg=\&quot;1\&quot;&gt;，&lt;img src=\&quot;http://www.zhihu.com/equation?tex=2%3A%3D1%2B%2B\&quot; alt=\&quot;2:=1++\&quot; eeimg=\&quot;1\&quot;&gt;，&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Ccdots\&quot; alt=\&quot;\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;，&lt;img src=\&quot;http://www.zhihu.com/equation?tex=9%3A%3D8%2B%2B\&quot; alt=\&quot;9:=8++\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;我们还定义数字拾为：&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Ctext%7B%E6%8B%BE%7D%3A%3D9%2B%2B\&quot; alt=\&quot;\\text{拾}:=9++\&quot; eeimg=\&quot;1\&quot;&gt;（我们还不能使用十进制符号&lt;img src=\&quot;http://www.zhihu.com/equation?tex=10\&quot; alt=\&quot;10\&quot; eeimg=\&quot;1\&quot;&gt;来表示拾，因为那要预先知道十进制，从而导致逻辑循环）&lt;br&gt;&lt;br&gt;&lt;b&gt;定义. &lt;/b&gt;（十进制正整数） 一个十进制正整数是一个digit串&lt;img src=\&quot;http://www.zhihu.com/equation?tex=a_na_%7Bn-1%7D%5Ccdots+a_0\&quot; alt=\&quot;a_na_{n-1}\\cdots a_0\&quot; eeimg=\&quot;1\&quot;&gt;，其中&lt;img src=\&quot;http://www.zhihu.com/equation?tex=n%5Cgeq+0\&quot; alt=\&quot;n\\geq 0\&quot; eeimg=\&quot;1\&quot;&gt;是自然数，并且第一个digit &lt;img src=\&quot;http://www.zhihu.com/equation?tex=a_n\&quot; alt=\&quot;a_n\&quot; eeimg=\&quot;1\&quot;&gt;不是零。我们用公式&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=a_na_%7Bn-1%7D%5Ccdots+a_0%3A%3D%5Csum_%7Bi%3D0%7D%5E%7Bn%7D%7Ba_i%5Ctimes%7D+%5Ctext%7B%E6%8B%BE%7D%5Ei\&quot; alt=\&quot;a_na_{n-1}\\cdots a_0:=\\sum_{i=0}^{n}{a_i\\times} \\text{拾}^i\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;使每个十进制正整数与正整数相等。&lt;br&gt;比如&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1024\&quot; alt=\&quot;1024\&quot; eeimg=\&quot;1\&quot;&gt;是十进制正整数数，而&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0123\&quot; alt=\&quot;0123\&quot; eeimg=\&quot;1\&quot;&gt;不是，&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0\&quot; alt=\&quot;0\&quot; eeimg=\&quot;1\&quot;&gt;也不是。根据定义&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=10%3D1%5Ctimes%5Ctext%7B%E6%8B%BE%7D%5E1%2B0%5Ctimes%5Ctext%7B%E6%8B%BE%7D%5E0%3D%5Ctext%7B%E6%8B%BE%7D\&quot; alt=\&quot;10=1\\times\\text{拾}^1+0\\times\\text{拾}^0=\\text{拾}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;另外，一个单元的十进制整数恰好等于那个digit本身，比如十进制数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=3\&quot; alt=\&quot;3\&quot; eeimg=\&quot;1\&quot;&gt;恰好等于&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=3%3D3%5Ctimes%5Ctext%7B%E6%8B%BE%7D%5E0%3D3\&quot; alt=\&quot;3=3\\times\\text{拾}^0=3\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;&lt;br&gt;正整数的十进制表示是存在和唯一的，因为有下面定理：&lt;br&gt;&lt;b&gt;定理. &lt;/b&gt;（正整数的十进制表示是存在和唯一的） 每个正整数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=m\&quot; alt=\&quot;m\&quot; eeimg=\&quot;1\&quot;&gt;都恰等于一个十进制正整数。&lt;br&gt;这个定理不难证明，主要用到了自然数的&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Euclidean_division\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;带余除法&lt;/a&gt;。一旦有了正整数的十进制表示，当然可以加一个负号&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%28-%29\&quot; alt=\&quot;(-)\&quot; eeimg=\&quot;1\&quot;&gt;以用于负整数的十进制表示，最后让&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0\&quot; alt=\&quot;0\&quot; eeimg=\&quot;1\&quot;&gt;也是十进制数，那么就给出了一切整数的十进制表示，由于拾&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%3D10\&quot; alt=\&quot;=10\&quot; eeimg=\&quot;1\&quot;&gt;，通常我们用&lt;img src=\&quot;http://www.zhihu.com/equation?tex=10\&quot; alt=\&quot;10\&quot; eeimg=\&quot;1\&quot;&gt;代替拾。&lt;br&gt;&lt;br&gt;&lt;b&gt;定义. &lt;/b&gt;（有限小数） 一个实数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=x\&quot; alt=\&quot;x\&quot; eeimg=\&quot;1\&quot;&gt;叫作有限小数，如果对于两个整数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=m%2Cn\&quot; alt=\&quot;m,n\&quot; eeimg=\&quot;1\&quot;&gt;，&lt;img src=\&quot;http://www.zhihu.com/equation?tex=x%3Dn%2F10%5Em\&quot; alt=\&quot;x=n/10^m\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;很明显，有限小数是有理数，但有理数不一定是有限小数，比如&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1%2F3\&quot; alt=\&quot;1/3\&quot; eeimg=\&quot;1\&quot;&gt;。&lt;br&gt;&lt;br&gt;&lt;b&gt;定义. &lt;/b&gt;（十进制有限小数） 一个十进制有限小数是一个digit的串连同一个小数点，书写成&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpm+a_n%5Ccdots+a_0.a_%7B-1%7Da_%7B-2%7D%5Ccdots+a_%7B-m%7D\&quot; alt=\&quot;\\pm a_n\\cdots a_0.a_{-1}a_{-2}\\cdots a_{-m}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;其中，小数点左边是有限的，小数点右边也是有限的，其中&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpm+\&quot; alt=\&quot;\\pm \&quot; eeimg=\&quot;1\&quot;&gt;取&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%2B\&quot; alt=\&quot;+\&quot; eeimg=\&quot;1\&quot;&gt;或则&lt;img src=\&quot;http://www.zhihu.com/equation?tex=-\&quot; alt=\&quot;-\&quot; eeimg=\&quot;1\&quot;&gt;，而&lt;img src=\&quot;http://www.zhihu.com/equation?tex=a_n%5Ccdots+a_0\&quot; alt=\&quot;a_n\\cdots a_0\&quot; eeimg=\&quot;1\&quot;&gt;是一个十进制自然数(即或为十进制正整数，或为&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0\&quot; alt=\&quot;0\&quot; eeimg=\&quot;1\&quot;&gt;)。这个十进制数等于有限小数&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpm+a_n%5Ccdots+a_0.a_%7B-1%7Da_%7B-2%7D%5Ccdots+a_m%3A%3D%28%5Cpm+1%29%5Ctimes%5Csum_%7Bi%3D-m%7D%5E%7Bn%7D%7Ba_i%5Ctimes+10%5Ei%7D+\&quot; alt=\&quot;\\pm a_n\\cdots a_0.a_{-1}a_{-2}\\cdots a_m:=(\\pm 1)\\times\\sum_{i=-m}^{n}{a_i\\times 10^i} \&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;&lt;br&gt;模仿上面定理的证明，可以得到一个类似的定理：&lt;br&gt;&lt;b&gt;定理. &lt;/b&gt;（有限小数的十进制表示是存在和唯一的） 每个有限小数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=x\&quot; alt=\&quot;x\&quot; eeimg=\&quot;1\&quot;&gt;都恰等于一个十进制有限小数。&lt;br&gt;&lt;br&gt;最后来定义十进制实数：&lt;br&gt;&lt;b&gt;定义.&lt;/b&gt;（十进制实数） 一个十进制实数是一个digit的序列连同一个小数点，书写成&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpm+a_n%5Ccdots+a_0.a_%7B-1%7Da_%7B-2%7D%5Ccdots+%2C\&quot; alt=\&quot;\\pm a_n\\cdots a_0.a_{-1}a_{-2}\\cdots ,\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;其中，小数点左边是有限的，但小数点右边是无限的，其中&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpm+\&quot; alt=\&quot;\\pm \&quot; eeimg=\&quot;1\&quot;&gt;取&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%2B\&quot; alt=\&quot;+\&quot; eeimg=\&quot;1\&quot;&gt;或则&lt;img src=\&quot;http://www.zhihu.com/equation?tex=-\&quot; alt=\&quot;-\&quot; eeimg=\&quot;1\&quot;&gt;，而&lt;img src=\&quot;http://www.zhihu.com/equation?tex=a_n...a_0\&quot; alt=\&quot;a_n...a_0\&quot; eeimg=\&quot;1\&quot;&gt;是一个十进制自然数(即或为十进制正整数，或为&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0\&quot; alt=\&quot;0\&quot; eeimg=\&quot;1\&quot;&gt;)。这个十进制数等于实数&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpm+a_n%5Ccdots+a_0.a_%7B-1%7Da_%7B-2%7D%5Ccdots+%3A%3D%28%5Cpm+1%29%5Ctimes%5Csum_%7Bi%3D-%5Cinfty%7D%5E%7Bn%7D%7Ba_i%5Ctimes+10%5Ei%7D+\&quot; alt=\&quot;\\pm a_n\\cdots a_0.a_{-1}a_{-2}\\cdots :=(\\pm 1)\\times\\sum_{i=-\\infty}^{n}{a_i\\times 10^i} \&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;这个级数总是绝对收敛的，因为它是有界的，根据十进制实数和无限级数的定义，&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpm+a_n%5Ccdots+a_0.a_%7B-1%7Da_%7B-2%7D%5Ccdots+\&quot; alt=\&quot;\\pm a_n\\cdots a_0.a_{-1}a_{-2}\\cdots \&quot; eeimg=\&quot;1\&quot;&gt;表示的是有理数的Cauchy序列&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpm+a_n00%5Ccdots+0%2C%5Cquad+%5Ccdots%2C+%5Cquad+%5Cpm+a_n%5Ccdots+a_0%2C%5Cquad+%5Cpm+a_n%5Ccdots+a_0.a_%7B-1%7D%2C%5Cquad+%5Ccdots\&quot; alt=\&quot;\\pm a_n00\\cdots 0,\\quad \\cdots, \\quad \\pm a_n\\cdots a_0,\\quad \\pm a_n\\cdots a_0.a_{-1},\\quad \\cdots\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;的极限。比如&lt;img src=\&quot;http://www.zhihu.com/equation?tex=3.1415%5Ccdots\&quot; alt=\&quot;3.1415\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;表示的是有理数序列&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=3%2C%5Cquad+3.1%5Cquad+3.14%2C%5Cquad+3.141%2C%5Cquad+3.1415%2C%5Cquad%5Ccdots\&quot; alt=\&quot;3,\\quad 3.1\\quad 3.14,\\quad 3.141,\\quad 3.1415,\\quad\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;的极限。&lt;br&gt;&lt;br&gt;但是实数的十进制有一个小小的瑕疵：一个实数可能有两个十进制表示。我们只能有下面的定理：&lt;br&gt;&lt;b&gt;定理. &lt;/b&gt;（十进制表示的存在性） 每个实数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=x\&quot; alt=\&quot;x\&quot; eeimg=\&quot;1\&quot;&gt;都至少有一个十进制表示&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=x%3Da_n%5Ccdots+a_0.a_%7B-1%7Da_%7B-2%7Da_%7B-3%7D%5Ccdots\&quot; alt=\&quot;x=a_n\\cdots a_0.a_{-1}a_{-2}a_{-3}\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;证明主要是根据实数的阿基米德性质。&lt;br&gt;&lt;br&gt;最后展示一个例子说是实数的十进制表示并不是唯一的。&lt;br&gt;&lt;b&gt;命题. &lt;/b&gt;（十进制表示的唯一性不成立）数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1\&quot; alt=\&quot;1\&quot; eeimg=\&quot;1\&quot;&gt;有两个不同的实数的十进制表示：&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1.000%5Ccdots\&quot; alt=\&quot;1.000\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;和&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.999%5Ccdots\&quot; alt=\&quot;0.999\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;&lt;b&gt;证明.&lt;/b&gt; 表示&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1%3D1.000%5Ccdots\&quot; alt=\&quot;1=1.000\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;是明显的，现在计算&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.999%5Ccdots\&quot; alt=\&quot;0.999\\cdots\&quot; eeimg=\&quot;1\&quot;&gt;，根据定义，这是有理数的Cauchy序列&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=0.9%2C%5Cquad+0.99%2C%5Cquad++0.999%2C%5Cquad+%5Ccdots\&quot; alt=\&quot;0.9,\\quad 0.99,\\quad  0.999,\\quad \\cdots\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;的极限，也就是序列&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%281-1%2F10%5En%29_%7Bn%3D1%7D%5E%7B%5Cinfty%7D\&quot; alt=\&quot;(1-1/10^n)_{n=1}^{\\infty}\&quot; eeimg=\&quot;1\&quot;&gt;的极限，很明显它的极限是&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1\&quot; alt=\&quot;1\&quot; eeimg=\&quot;1\&quot;&gt;。&lt;br&gt;数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=1\&quot; alt=\&quot;1\&quot; eeimg=\&quot;1\&quot;&gt;只有这两个十进制表示。事实上，所有的实数，当它是有限小数（即从小数点后某位开始全是零的数）时，它有两种十进制表示，当它不能表示成有限小数时，它只有一种十进制表示。&lt;br&gt;&lt;br&gt;参考&lt;br&gt;[1] &lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//book.douban.com/subject/3235486/\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;陶哲轩实分析 &lt;/a&gt;&lt;br&gt;[2] &lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//www.coursehero.com/file/8534735/The-Definition-of-the-Real-Numbers/\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;The Definition of the Real Numbers&lt;/a&gt;&lt;br&gt;[3] &lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//planetmath.org/sites/default/files/texpdf/32907.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;planetmath.org/sites/de&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;fault/files/texpdf/32907.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&quot;,&quot;commentCount&quot;:297,&quot;voteupCount&quot;:1602,&quot;reshipmentSettings&quot;:&quot;allowed&quot;,&quot;thanksCount&quot;:411,&quot;excerptNew&quot;:&quot;@申力立的证明存在错误，错误在于显然地认为0.99\\cdots 9\\ (n\\text{个}9)\\ &lt;0.999\\cdots\\leq 1成立，他的理由是从高到低依次比较每一位数字的大小，但这并不是显然的，这一性质是在已经定义好了0.99\\cdots 9\\ (n\\text{个}9)，0.999\\cdots之后才有的。 完整地解…&quot;,&quot;previewText&quot;:&quot;&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;&quot;},&quot;45218281&quot;:{&quot;relationship&quot;:{&quot;isAuthor&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false,&quot;isNothelp&quot;:false,&quot;upvotedFolloweeIds&quot;:[]},&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;这个题目下的答案大致分为几种： Magic。例如 &lt;a data-hash=\&quot;c1c892f179f95da8b37a1dc604839d2c\&quot; href=\&quot;http://www.zhihu.com/people/c1c892f179f95da8b37a1dc604839d2c\&quot; class=\&quot;member_mention\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;@陈硕\&quot; data-tip=\&quot;p$b$c1c892f179f95da8b37a1dc604839d2c\&quot; data-hovercard=\&quot;p$b$c1c892f179f95da8b37a1dc604839d2c\&quot;&gt;@陈硕&lt;/a&gt;， &lt;a data-hash=\&quot;203b150d2cb5a62457a40471e40ae2f6\&quot; href=\&quot;http://www.zhihu.com/people/203b150d2cb5a62457a40471e40ae2f6\&quot; class=\&quot;member_mention\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;@渡子厄\&quot; data-tip=\&quot;p$b$203b150d2cb5a62457a40471e40ae2f6\&quot; data-hovercard=\&quot;p$b$203b150d2cb5a62457a40471e40ae2f6\&quot;&gt;@渡子厄&lt;/a&gt;（半Magic，因为Wolfram Alpha并没给出准确结果）。这个我就不评论了，因为没说是什么方法。暴力1到10亿，对每个数判断是否素数（或暴力试除，或Miller Rabin）。方法太暴力，最快也不过\\Omega(n\\log n)，其中n是上界10亿。筛出所有n以内的素数然后加起来。有人用Eratosthenes筛（复杂度O(n \\log \\log n)），有人用欧拉筛（最简单的线性筛之一），也有人用Matlab等软…&quot;,&quot;createdTime&quot;:1429401499,&quot;previewType&quot;:&quot;default&quot;,&quot;id&quot;:45218281,&quot;isCopyable&quot;:true,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;菜鱼ftfish&quot;,&quot;headline&quot;:&quot;半码农，半理论男，半CMUer，纯Nerd&quot;,&quot;urlToken&quot;:&quot;ftfish&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/9ec27a53a16302e63603600c8453414d&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/da8e974dc_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;9ec27a53a16302e63603600c8453414d&quot;},&quot;url&quot;:&quot;https://api.zhihu.com/answers/45218281&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;question&quot;:{&quot;author&quot;:{&quot;headline&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/aadd7b895_s.jpg&quot;,&quot;name&quot;:&quot;匿名用户&quot;,&quot;url&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;&quot;,&quot;type&quot;:&quot;people&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;id&quot;:&quot;0&quot;},&quot;created&quot;:1429074768,&quot;url&quot;:&quot;https://api.zhihu.com/questions/29580448&quot;,&quot;title&quot;:&quot;求十亿内所有质数的和，怎么做最快?&quot;,&quot;excerpt&quot;:&quot;&quot;,&quot;answerCount&quot;:59,&quot;boundTopicIds&quot;:[872,1093,3646,3807,17215],&quot;commentCount&quot;:17,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:2256,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:29580448},&quot;updatedTime&quot;:1429457829,&quot;content&quot;:&quot;这个题目下的答案大致分为几种：&lt;br&gt;&lt;ol&gt;&lt;li&gt;Magic。例如 &lt;a data-hash=\&quot;c1c892f179f95da8b37a1dc604839d2c\&quot; href=\&quot;http://www.zhihu.com/people/c1c892f179f95da8b37a1dc604839d2c\&quot; class=\&quot;member_mention\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;@陈硕\&quot; data-tip=\&quot;p$b$c1c892f179f95da8b37a1dc604839d2c\&quot; data-hovercard=\&quot;p$b$c1c892f179f95da8b37a1dc604839d2c\&quot;&gt;@陈硕&lt;/a&gt;， &lt;a data-hash=\&quot;203b150d2cb5a62457a40471e40ae2f6\&quot; href=\&quot;http://www.zhihu.com/people/203b150d2cb5a62457a40471e40ae2f6\&quot; class=\&quot;member_mention\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;@渡子厄\&quot; data-tip=\&quot;p$b$203b150d2cb5a62457a40471e40ae2f6\&quot; data-hovercard=\&quot;p$b$203b150d2cb5a62457a40471e40ae2f6\&quot;&gt;@渡子厄&lt;/a&gt;（半Magic，因为Wolfram Alpha并没给出准确结果）。这个我就不评论了，因为没说是什么方法。&lt;/li&gt;&lt;li&gt;暴力1到10亿，对每个数判断是否素数（或暴力试除，或Miller Rabin）。方法太暴力，最快也不过&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5COmega%28n%5Clog+n%29\&quot; alt=\&quot;\\Omega(n\\log n)\&quot; eeimg=\&quot;1\&quot;&gt;，其中&lt;img src=\&quot;http://www.zhihu.com/equation?tex=n\&quot; alt=\&quot;n\&quot; eeimg=\&quot;1\&quot;&gt;是上界10亿。&lt;/li&gt;&lt;li&gt;筛出所有&lt;img src=\&quot;http://www.zhihu.com/equation?tex=n\&quot; alt=\&quot;n\&quot; eeimg=\&quot;1\&quot;&gt;以内的素数然后加起来。有人用Eratosthenes筛（复杂度&lt;img src=\&quot;http://www.zhihu.com/equation?tex=O%28n+%5Clog+%5Clog+n%29\&quot; alt=\&quot;O(n \\log \\log n)\&quot; eeimg=\&quot;1\&quot;&gt;），有人用欧拉筛（最简单的线性筛之一），也有人用Matlab等软件。此方法也极其暴力。因为不超过n的素数有&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5CTheta%28%5Cfrac%7Bn%7D%7B%5Clog+n%7D%29\&quot; alt=\&quot;\\Theta(\\frac{n}{\\log n})\&quot; eeimg=\&quot;1\&quot;&gt;个，所以任何先找出所有素数再加起来的方法（即使使用亚线性的筛法，例如Atkin筛或Wheel筛）都不可能快于这个时间复杂度。&lt;/li&gt;&lt;li&gt;不知所云型。就不点名了。&lt;/li&gt;&lt;li&gt;理论上更优的算法。目前只看到  &lt;a data-hash=\&quot;b7734862be39b570374b4d89e058666a\&quot; href=\&quot;http://www.zhihu.com/people/b7734862be39b570374b4d89e058666a\&quot; class=\&quot;member_mention\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;@罗宸\&quot; data-tip=\&quot;p$b$b7734862be39b570374b4d89e058666a\&quot; data-hovercard=\&quot;p$b$b7734862be39b570374b4d89e058666a\&quot;&gt;@罗宸&lt;/a&gt;。他给出的代码是来自于Project Euler第10题（&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//projecteuler.net/problem%3D10\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Summation of primes&lt;/a&gt; ）的论坛中Lucy_Hedgehog给出的Python代码的直接翻译，注释也都还在。接下来我就来介绍一下Lucy_Hedgehog给出的这个算法。&lt;/li&gt;&lt;/ol&gt;&lt;b&gt;==========正式回答分割线=============&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;首先来感受一下这个算法的速度：&lt;br&gt;&lt;div class=\&quot;highlight\&quot;&gt;&lt;pre&gt;&lt;code class=\&quot;language-text\&quot;&gt;$ for n in 10000000 100000000 1000000000 10000000000 100000000000; do time python Main.py $n; done\n3203324994356\n\nreal    0m0.049s\nuser    0m0.031s\nsys     0m0.015s\n279209790387276\n\nreal    0m0.117s\nuser    0m0.093s\nsys     0m0.015s\n24739512092254535\n\nreal    0m0.514s\nuser    0m0.468s\nsys     0m0.046s\n2220822432581729238\n\nreal    0m2.645s\nuser    0m2.625s\nsys     0m0.031s\n201467077743744681014\n\nreal    0m15.713s\nuser    0m15.656s\nsys     0m0.031s\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;可以看到，即使是python这样的解释型动态语言，算出10亿的结果也不过需要0.5s，算出1000亿也只要15秒，是完虐以上各种暴力方法的。&lt;br&gt;&lt;br&gt;整个算法类似于Wikipedia中给出的求n以内素数个数的算法（&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Prime-counting_function%23Algorithms_for_evaluating_.CF.80.28x.29\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Prime-counting function&lt;/a&gt;），感兴趣的也可以去看一下。&lt;br&gt;&lt;br&gt;&lt;b&gt;==========真正的！正式回答分割线 :D =============&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;定义&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S%28v%2Cp%29\&quot; alt=\&quot;S(v,p)\&quot; eeimg=\&quot;1\&quot;&gt;为&lt;img src=\&quot;http://www.zhihu.com/equation?tex=2\&quot; alt=\&quot;2\&quot; eeimg=\&quot;1\&quot;&gt;到&lt;img src=\&quot;http://www.zhihu.com/equation?tex=v\&quot; alt=\&quot;v\&quot; eeimg=\&quot;1\&quot;&gt;所有整数中，在普通筛法中外层循环筛完&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;时仍然幸存的数的和。因此这些数要不本身是素数，要不其最小的素因子也大于&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;。因此我们需要求的是&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S%28n%2C%5Clfloor%5Csqrt+n%5Crfloor%29\&quot; alt=\&quot;S(n,\\lfloor\\sqrt n\\rfloor)\&quot; eeimg=\&quot;1\&quot;&gt;，其中&lt;img src=\&quot;http://www.zhihu.com/equation?tex=n\&quot; alt=\&quot;n\&quot; eeimg=\&quot;1\&quot;&gt;是十亿。&lt;br&gt;&lt;br&gt;为了计算&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S%28v%2Cp%29\&quot; alt=\&quot;S(v,p)\&quot; eeimg=\&quot;1\&quot;&gt;，先考虑几个特殊情况&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p%5Cle1\&quot; alt=\&quot;p\\le1\&quot; eeimg=\&quot;1\&quot;&gt;。此时所有数都还没有被筛掉，所以&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S%28v%2Cp%29%3D%5Csum_%7Bi%3D2%7D%5E%7Bv%7Di%3D%5Cfrac%7B%282%2Bv%29%28v-1%29%7D%7B2%7D\&quot; alt=\&quot;S(v,p)=\\sum_{i=2}^{v}i=\\frac{(2+v)(v-1)}{2}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;不是素数。因为筛法中&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;早已被别的数筛掉，所以在这步什么都不会做，所以此时&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29\&quot; alt=\&quot;S(v,p)=S(v,p-1)\&quot; eeimg=\&quot;1\&quot;&gt;；&lt;/li&gt;&lt;li&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;是素数，但是&lt;img src=\&quot;http://www.zhihu.com/equation?tex=v%3Cp%5E2\&quot; alt=\&quot;v&amp;lt;p^2\&quot; eeimg=\&quot;1\&quot;&gt;。因为每个合数都一定有一个不超过其平方根的素因子，如果筛到&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;时还没筛掉一个数，那么筛到&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p-1\&quot; alt=\&quot;p-1\&quot; eeimg=\&quot;1\&quot;&gt;时这个数也还在。所以此时也有&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29\&quot; alt=\&quot;S(v,p)=S(v,p-1)\&quot; eeimg=\&quot;1\&quot;&gt;。&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;现在考虑最后一种稍微麻烦些的情况：&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;是素数，且&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p%5E2%5Cle+v\&quot; alt=\&quot;p^2\\le v\&quot; eeimg=\&quot;1\&quot;&gt;。&lt;br&gt;此时，我们要用素数&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;去筛掉剩下的那些数中&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;的倍数。注意到现在还剩下的合数都没有小于&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;的素因子。因此有：&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29-%5Csum_%7B%5Csubstack%7B2%5Cle+k+%5Cle+v%2C%5C%5C+p%5Cmbox%7B%E4%B8%BA%7Dk%5Cmbox%7B%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B4%A0%E5%9B%A0%E5%AD%90%7D%7D%7Dk\&quot; alt=\&quot;S(v,p)=S(v,p-1)-\\sum_{\\substack{2\\le k \\le v,\\\\ p\\mbox{为}k\\mbox{的最小素因子}}}k\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;&lt;br&gt;后面那项中提取公共因子&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;，有：&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29-p%5Ctimes%5Csum_%7B%5Csubstack%7B2%5Cle+k+%5Cle+v%2C%5C%5C+p%5Cmbox%7B%E4%B8%BA%7Dk%5Cmbox%7B%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B4%A0%E5%9B%A0%E5%AD%90%7D%7D%7D%5Cfrac%7Bk%7D%7Bp%7D\&quot; alt=\&quot;S(v,p)=S(v,p-1)-p\\times\\sum_{\\substack{2\\le k \\le v,\\\\ p\\mbox{为}k\\mbox{的最小素因子}}}\\frac{k}{p}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;&lt;br&gt;因为&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;整除&lt;img src=\&quot;http://www.zhihu.com/equation?tex=k\&quot; alt=\&quot;k\&quot; eeimg=\&quot;1\&quot;&gt;，稍微变形一下，令&lt;img src=\&quot;http://www.zhihu.com/equation?tex=t%3D%5Cfrac%7Bk%7D%7Bp%7D\&quot; alt=\&quot;t=\\frac{k}{p}\&quot; eeimg=\&quot;1\&quot;&gt;，有：&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29-p%5Ctimes%5Csum_%7B%5Csubstack%7B2%5Cle+t+%5Cle+%5Clfloor%5Cfrac%7Bv%7D%7Bp%7D%5Crfloor%2C%5C%5C+t%5Cmbox%7B%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B4%A0%E5%9B%A0%E5%AD%90%7D%5Cge+p%7D%7Dt\&quot; alt=\&quot;S(v,p)=S(v,p-1)-p\\times\\sum_{\\substack{2\\le t \\le \\lfloor\\frac{v}{p}\\rfloor,\\\\ t\\mbox{的最小素因子}\\ge p}}t\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;&lt;br&gt;注意到一开始提到的&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S\&quot; alt=\&quot;S\&quot; eeimg=\&quot;1\&quot;&gt;的定义（“这些数要不本身是素数，要不其最小的素因子也&lt;b&gt;大于(注意!)&lt;/b&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;”），此时&lt;img src=\&quot;http://www.zhihu.com/equation?tex=p\&quot; alt=\&quot;p\&quot; eeimg=\&quot;1\&quot;&gt;后面这项可以用&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S\&quot; alt=\&quot;S\&quot; eeimg=\&quot;1\&quot;&gt;来表达：&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29-p%5Ctimes%28S%28%5Cleft%5Clfloor%5Cfrac%7Bv%7D%7Bp%7D%5Cright%5Crfloor%2Cp-1%29-%5C%7Bp-1%5Cmbox%7B%E4%BB%A5%E5%86%85%E7%9A%84%E6%89%80%E6%9C%89%E7%B4%A0%E6%95%B0%E5%92%8C%5C%7D%7D%29\&quot; alt=\&quot;S(v,p)=S(v,p-1)-p\\times(S(\\left\\lfloor\\frac{v}{p}\\right\\rfloor,p-1)-\\{p-1\\mbox{以内的所有素数和\\}})\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;&lt;br&gt;再用&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S\&quot; alt=\&quot;S\&quot; eeimg=\&quot;1\&quot;&gt;替换素数和得到最终表达式：&lt;br&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29-p%5Ctimes%28S%28%5Cleft%5Clfloor%5Cfrac%7Bv%7D%7Bp%7D%5Cright%5Crfloor%2Cp-1%29-S%28p-1%2Cp-1%29%29\&quot; alt=\&quot;S(v,p)=S(v,p-1)-p\\times(S(\\left\\lfloor\\frac{v}{p}\\right\\rfloor,p-1)-S(p-1,p-1))\&quot; eeimg=\&quot;1\&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;我们最终的结果是&lt;img src=\&quot;http://www.zhihu.com/equation?tex=S%28n%2C%5Clfloor%5Csqrt+n%5Crfloor%29\&quot; alt=\&quot;S(n,\\lfloor\\sqrt n\\rfloor)\&quot; eeimg=\&quot;1\&quot;&gt;。计算时可以使用记忆化，也可以直接自底向上动态规划。&lt;br&gt;至于算法的复杂度就留作练习，是低于以上任何一种暴力方法的。&lt;br&gt;&lt;br&gt;希望我讲清楚了。代码我就不放了，自己解决Project Euler 第10题之后可以去论坛里看Lucy_Hedgehog的代码（在论坛第5页）。也可以去看 &lt;a data-hash=\&quot;b7734862be39b570374b4d89e058666a\&quot; href=\&quot;http://www.zhihu.com/people/b7734862be39b570374b4d89e058666a\&quot; class=\&quot;member_mention\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;@罗宸\&quot; data-tip=\&quot;p$b$b7734862be39b570374b4d89e058666a\&quot; data-hovercard=\&quot;p$b$b7734862be39b570374b4d89e058666a\&quot;&gt;@罗宸&lt;/a&gt; 给出的代码。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;========== 更新：&lt;/b&gt;&lt;br&gt;&lt;a data-hash=\&quot;ad0a1e81c1f9c59375f78a74161fe6bd\&quot; href=\&quot;http://www.zhihu.com/people/ad0a1e81c1f9c59375f78a74161fe6bd\&quot; class=\&quot;member_mention\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;@吴昌隆\&quot; data-tip=\&quot;p$b$ad0a1e81c1f9c59375f78a74161fe6bd\&quot; data-hovercard=\&quot;p$b$ad0a1e81c1f9c59375f78a74161fe6bd\&quot;&gt;@吴昌隆&lt;/a&gt; 在评论中给出一个链接，其中包含一个理论上更优的算法（&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//cstheory.stackexchange.com/\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Theoretical Computer Science Stack Exchange&lt;/a&gt;上&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//cstheory.stackexchange.com/questions/5578/can-merlin-convince-arthur-about-a-certain-sum\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Charles的回答&lt;/a&gt;）。我粗略读了一下，认为理论上是可行的。因为本题中的答案只有&lt;img src=\&quot;http://www.zhihu.com/equation?tex=O%28%5Cfrac%7Bn%5E2%7D%7B%5Clog+n%7D%29\&quot; alt=\&quot;O(\\frac{n^2}{\\log n})\&quot; eeimg=\&quot;1\&quot;&gt;级别，使用中国剩余定理的话也只需要算到&lt;img src=\&quot;http://www.zhihu.com/equation?tex=O%28%5Clog+n%29\&quot; alt=\&quot;O(\\log n)\&quot; eeimg=\&quot;1\&quot;&gt;级别的素数，因此总复杂度为&lt;img src=\&quot;http://www.zhihu.com/equation?tex=O%28n%5E%7B1%2F2%2B%5Cepsilon%7D%5Clog+n%29\&quot; alt=\&quot;O(n^{1/2+\\epsilon}\\log n)\&quot; eeimg=\&quot;1\&quot;&gt;。&lt;br&gt;粗略读了下其参考文献（J. C. Lagarias and A. M. Odlyzko, &lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.dtc.umn.edu/%7Eodlyzko/doc/arch/analytic.pi.of.x.pdf\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Computing &lt;/a&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.dtc.umn.edu/%7Eodlyzko/doc/arch/analytic.pi.of.x.pdf\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;π(x): An analytic method&lt;/a&gt;, &lt;em&gt;Journal of Algorithms&lt;/em&gt;&lt;strong&gt;8&lt;/strong&gt; (1987), pp. 173-191. ）后，我认为这算法不可能像这个答案中的算法一样在十几行代码内实现，仅放出来供感兴趣的朋友去看一下。&quot;,&quot;commentCount&quot;:80,&quot;voteupCount&quot;:1439,&quot;reshipmentSettings&quot;:&quot;allowed&quot;,&quot;thanksCount&quot;:287,&quot;excerptNew&quot;:&quot;这个题目下的答案大致分为几种： Magic。例如@陈硕，@渡子厄（半Magic，因为Wolfram Alpha并没给出准确结果）。这个我就不评论了，因为没说是什么方法。暴力1到10亿，对每个数判断是否素数（或暴力试除，或Miller Rabin）。方法太暴力，最快也不过\\Omega(n\\log…&quot;,&quot;previewText&quot;:&quot;&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;&quot;},&quot;513992249&quot;:{&quot;relationship&quot;:{&quot;isAuthor&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false,&quot;isNothelp&quot;:false,&quot;upvotedFolloweeIds&quot;:[]},&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;我的回答主要是为了怼 &lt;a class=\&quot;member_mention\&quot; href=\&quot;http://www.zhihu.com/people/a9a6d0febe4ce1b5b9f72f7accb46b6f\&quot; data-hash=\&quot;a9a6d0febe4ce1b5b9f72f7accb46b6f\&quot; data-hovercard=\&quot;p$b$a9a6d0febe4ce1b5b9f72f7accb46b6f\&quot;&gt;@汪有&lt;/a&gt; 的如下这篇似是而非的回答，不想看的欢迎跳过：&lt;a href=\&quot;https://www.zhihu.com/question/293366890/answer/513130457\&quot; data-draft-node=\&quot;block\&quot; data-draft-type=\&quot;link-card\&quot; class=\&quot;internal\&quot;&gt;经典的定价问题：同时在沙漠里的我和马云要渴死了，从你这里买两瓶水，你会怎么定价？&lt;/a&gt;没错，这篇回答里面确实用了很多经济学术语，但是只要稍微学过一点经济学的就能看出， 这篇回答完美地诠释了“如何一篇回答气死经济学家”。 我们一个一个来看：(1) &lt;b&gt;博弈论是经济学的一个重要组成部分&lt;/b&gt;，Jean Tirole当年拿诺奖的理由之一就是把产业组织理论重新用博弈…&quot;,&quot;createdTime&quot;:1539935364,&quot;previewType&quot;:&quot;default&quot;,&quot;id&quot;:513992249,&quot;isCopyable&quot;:false,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;Richard Xu&quot;,&quot;headline&quot;:&quot;专栏：经济学博士生的日记本&quot;,&quot;urlToken&quot;:&quot;richard-xu-25&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/6808bf0f275d42432d961d5285dc282f&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/92c892d622d4a92d81871b8817b12d9d_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[{&quot;type&quot;:&quot;identity&quot;,&quot;description&quot;:&quot;南加州大学 经济学博士在读&quot;},{&quot;topics&quot;:[],&quot;topicNames&quot;:[&quot;经济学&quot;,&quot;博弈论&quot;],&quot;type&quot;:&quot;best_answerer&quot;,&quot;description&quot;:&quot;优秀回答者&quot;}],&quot;id&quot;:&quot;6808bf0f275d42432d961d5285dc282f&quot;},&quot;url&quot;:&quot;https://api.zhihu.com/answers/513992249&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;question&quot;:{&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;耿怀民&quot;,&quot;headline&quot;:&quot;匹夫！&quot;,&quot;urlToken&quot;:&quot;quandier&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/11427759d2e125f70329393fc6e8dca3&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/v2-ebcc8f2e0563b275ec09d36dd98ad490_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;11427759d2e125f70329393fc6e8dca3&quot;},&quot;created&quot;:1536055351,&quot;url&quot;:&quot;https://api.zhihu.com/questions/293366890&quot;,&quot;title&quot;:&quot;经典的定价问题：同时在沙漠里的我和马云要渴死了，从你这里买两瓶水，你会怎么定价？&quot;,&quot;excerpt&quot;:&quot;价格是市场经济中最迷人的现象。但如何定价，我们似乎从来没有统一过。 有人说，应该用成本定价法：生产成本+合理利润，产生最终售价。 也有人认为，应该采用供需定价：供大于求降价，供不应求涨价（蔬菜价格暴涨暴跌）。 还有人说，应该看人下菜碟：不同的人给予不同的定价（机票价格的因时而异）。 关键是，每个定价的理论，都能在市场中找到支持的现象。但遗憾的是，每种定价理论，都只能覆盖一部分社会价格现象。 那么有没有一种价格规律，可以同时使用于所有的价格现象？就如万有引力于物理力学。 假设一个极端场景：我跟马云同时在非洲沙漠里，孤立无援快渴死了，每人只要一瓶水就能活着走出沙漠，但世界上仅有的两瓶可以交易的水，我最高的出价能力是2000块钱一瓶，马云的出价可以到500亿一瓶。但是把水运进沙漠的成本是4000元（一瓶两瓶基本没有成本差别）。这种情况下这两瓶水应该如何定价呢？ 这是一个典型的定价问题：供需不失衡，一人的需求是一瓶，运输到手的成本明确4000元。每个人的最高出价明确，一个2000元，一个500亿。你要是矿泉水公司，你会怎么定价？&quot;,&quot;answerCount&quot;:1802,&quot;boundTopicIds&quot;:[1184,6837,8227,42770,172263],&quot;commentCount&quot;:92,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:7985,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:293366890},&quot;updatedTime&quot;:1539935364,&quot;content&quot;:&quot;&lt;p&gt;我的回答主要是为了怼 &lt;a class=\&quot;member_mention\&quot; href=\&quot;http://www.zhihu.com/people/a9a6d0febe4ce1b5b9f72f7accb46b6f\&quot; data-hash=\&quot;a9a6d0febe4ce1b5b9f72f7accb46b6f\&quot; data-hovercard=\&quot;p$b$a9a6d0febe4ce1b5b9f72f7accb46b6f\&quot;&gt;@汪有&lt;/a&gt; 的如下这篇似是而非的回答，不想看的欢迎跳过：&lt;/p&gt;&lt;a href=\&quot;https://www.zhihu.com/question/293366890/answer/513130457\&quot; data-draft-node=\&quot;block\&quot; data-draft-type=\&quot;link-card\&quot; class=\&quot;internal\&quot;&gt;经典的定价问题：同时在沙漠里的我和马云要渴死了，从你这里买两瓶水，你会怎么定价？&lt;/a&gt;&lt;p&gt;没错，这篇回答里面确实用了很多经济学术语，但是只要稍微学过一点经济学的就能看出， 这篇回答完美地诠释了“如何一篇回答气死经济学家”。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我们一个一个来看：&lt;/p&gt;&lt;p&gt;(1) &lt;b&gt;博弈论是经济学的一个重要组成部分&lt;/b&gt;，Jean Tirole当年拿诺奖的理由之一就是把产业组织理论重新用博弈论的范式梳理了一遍，而定价问题也是产业组织理论的一个老生常谈的问题（当然这一问题在经济学的其它子领域也有涉及）。说“这不是一个经济学的问题而是一个博弈论的问题”，让人不禁怀疑作者是不是连经济学的教科书都没读过，入门如Mankiw，进阶如MWG，哪个不涉及博弈论？此外，我反正是没见过“博弈学”这个说法的。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;(2) 对“价格歧视”的解释没错，但是紧接着举的“药厂如何给药定价”的例子，基本上都是错误的。&lt;/p&gt;&lt;p&gt;a. 首先，作者说的比如学生票和优惠券的这种做法，叫作“三级价格歧视”。“三级价格歧视”的前提之一是&lt;b&gt;垄断定价能力&lt;/b&gt;，而药厂之所以能够定高价，是由于专利保护，这个作者没提。&lt;/p&gt;&lt;p&gt;b. “三级价格歧视”的另一个前提是&lt;b&gt;限制转售&lt;/b&gt;，比如不是学生就不能用学生票，没有优惠券就不能便宜买肯德基。然而，在卖水的例子中，我们很容易核实两个人的身份，而且存在有效的措施限制转售（比如要求他们拿到水之后必须当着面喝掉），这时候我们是可以进行三级价格歧视的。&lt;/p&gt;&lt;p&gt;c. 作者完全&lt;b&gt;混淆了支付能力（预算约束）和支付意愿，价格歧视针对的是不同的支付意愿&lt;/b&gt;，不是不同的支付能力。穷人其实愿意付很多钱来换命，他们只是付不起而已，这在经济学上是两回事。最简单的一点，如果穷人的支付意愿和富人一样高，那么前者拿到药之后不会转售给后者。&lt;/p&gt;&lt;p&gt;d. 如果我们假想一下，药厂如果可以限制印度和美国之间的药物转售，是否会在印度定低价呢？答案是不一定，限制转售只说明了药厂可以把美国市场和印度市场拆开，但是&lt;b&gt;药厂在这两个市场分别还是拥有垄断定价能力&lt;/b&gt;的话，最终还是会给印度定一个较高的价格，或者说穷人付不起的价格——毕竟印度也是有富人的。&lt;/p&gt;&lt;p&gt;e. 但是在卖水的例子中，我们最终还是不会进行三级价格歧视，根本的原因其实是因为&lt;b&gt;供给太少&lt;/b&gt;。只有两瓶水的情况下，只要马云对第二瓶水的支付意愿比“我”对第一瓶水的支付意愿还要高，那么没有必要价格歧视“我”——我们的目标转而变成了如何价格歧视马云的“第一瓶”和“第二瓶”来获得最高的收益。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;(3) 接下来是一串诡异的用语。&lt;/p&gt;&lt;p&gt;作者说两人围绕是五万还是一亿展开“博弈”，然而根据作者所描述的过程，这显然说的是&lt;b&gt;“谈判”(Bargaining)&lt;/b&gt;。然后我们就可以用经济学的黑话翻译一下作者的这段话：&lt;/p&gt;&lt;p&gt;&lt;b&gt;作者所说的“博弈优势”&lt;/b&gt;（注：博弈论中没有这词儿）&lt;b&gt;，对应于“谈判”中的“分歧点”(Disagreement Point)&lt;/b&gt;，即如果“谈判”失败，双方各自所获得的收益。&lt;/p&gt;&lt;p&gt;&lt;b&gt;作者所说的“硬杠”，对应于“谈判”中的“谈判力”(Bargaining Power)&lt;/b&gt;，“谈判力”决定了“谈判”的收益分配方式。&lt;/p&gt;&lt;p&gt;上述有关“谈判”的术语最初来自于合作博弈(Cooperative Game)，而我们平时常说的如纳什均衡等概念是在非合作博弈(Non-cooperative Game)的框架下讨论的。所谓“合作”和“非合作”，并不是说从结果上来说博弈双方或多方是否达成合作，而是指博弈双方或多方能否在博弈开始前签订一个确保可执行的契约。后来“谈判”也被非合作博弈借用过去了，就是所谓的“非合作谈判博弈”，可以证明“非合作谈判博弈”的均衡在一定程度上能够建立起与“合作谈判”的解的等价性。&lt;br&gt;顺带一提，关于“硬杠”，作者后面还提到&lt;/p&gt;&lt;blockquote&gt;你看，博弈主要看谁更能杠。经济学术语是谁的需求更加“刚性”。&lt;/blockquote&gt;&lt;p&gt;首先，需求的描述只有“弹性”，或者说“缺乏弹性”，“刚性”需求是媒体说房子的。&lt;/p&gt;&lt;p&gt;其次，需求的“弹性”是指需求量随价格变化的百分比幅度，显然我们的问题当中没有涉及到这种弹性。&lt;/p&gt;&lt;p&gt;最后，上面已经提到了，这里的“硬杠”对应的是“谈判力”，和需求的弹性没有半毛钱关系。&lt;/p&gt;&lt;p&gt;总结一下，上述引文的后一个句子从第一个字扯淡到最后一个字。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;(4) 对“胆小鬼博弈”的描述没错，但是看到最后我真的是要被笑死了。&lt;/p&gt;&lt;p&gt;&lt;b&gt;在“胆小鬼博弈”中得到“囚徒困境”的结果？&lt;/b&gt;&lt;/p&gt;&lt;p&gt;作者学博弈论的时候是睡着了还是睡着了还是睡着了？&lt;/p&gt;&lt;p&gt;“囚徒困境”是和“胆小鬼博弈”完全不同的另一个博弈，你告诉我怎么在一个博弈中得出另一个博弈的结果？&lt;/p&gt;&lt;p&gt;“引入博弈第三方”又是什么鬼？东哥又没有参与这个“博弈”，他哪里是“第三方”了？&lt;/p&gt;&lt;p&gt;硬要扯上关系的话，这其实是博弈中的&lt;b&gt;“可置信/不可置信威胁”&lt;/b&gt;，或者说是改变了“谈判”的“分歧点”。&lt;/p&gt;&lt;p&gt;还有谁教你的“胆小鬼博弈”或者这个卖水的问题是&lt;b&gt;一个“零和博弈”&lt;/b&gt;的？&lt;/p&gt;&lt;p&gt;&lt;b&gt;零和博弈要求每一种可能的博弈结果中，双方的收益之和始终为零&lt;/b&gt;，你告诉我如果你卖不出去水然后马云也不买水，这事儿是零和？马云都他喵的跪了这他喵的还是零和？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&quot;,&quot;commentCount&quot;:36,&quot;voteupCount&quot;:296,&quot;reshipmentSettings&quot;:&quot;need_payment&quot;,&quot;thanksCount&quot;:35,&quot;excerptNew&quot;:&quot;我的回答主要是为了怼@汪有的如下这篇似是而非的回答，不想看的欢迎跳过：经典的定价问题：同时在沙漠里的我和马云要渴死了，从你这里买两瓶水，你会怎么定价？ 没错，这篇回答里面确实用了很多经济学术语，但是只要稍微学过一点经济学的就能看出， 这篇回答完…&quot;,&quot;previewText&quot;:&quot;&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;&quot;}},&quot;articles&quot;:{&quot;31809930&quot;:{&quot;updated&quot;:1516085126,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;SIY.Z&quot;,&quot;headline&quot;:&quot;USTC CS&quot;,&quot;urlToken&quot;:&quot;siyz&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/ccd81296bb40c3d8738e399d380c9015&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/50/55a7d524465d743f084a26328a9759ae_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;ccd81296bb40c3d8738e399d380c9015&quot;},&quot;excerpt&quot;:&quot;&lt;b&gt;18/01/16 第二篇出来啦：&lt;a href=\&quot;https://zhuanlan.zhihu.com/p/32073374\&quot; class=\&quot;internal\&quot;&gt;浅述：从 Minimax 到 AlphaZero，完全信息博弈之路（2）&lt;/a&gt;&lt;/b&gt;最近一次修订：17/12/15 19:08，根据 &lt;a class=\&quot;member_mention\&quot; href=\&quot;http://www.zhihu.com/people/570d21d724d51202c46df32fa605ccf7\&quot; data-hash=\&quot;570d21d724d51202c46df32fa605ccf7\&quot; data-hovercard=\&quot;p$b$570d21d724d51202c46df32fa605ccf7\&quot;&gt;@阿修比&lt;/a&gt; 和 &lt;a class=\&quot;member_mention\&quot; href=\&quot;http://www.zhihu.com/people/fc635771b5003f1dd099dfda60d3ba34\&quot; data-hash=\&quot;fc635771b5003f1dd099dfda60d3ba34\&quot; data-hovercard=\&quot;p$b$fc635771b5003f1dd099dfda60d3ba34\&quot;&gt;@七彩极光夜&lt;/a&gt; 的建议修改了部分事实陈述，在此表示感谢。上次修订：17/12/15 14:35，改正了部分错别字和病句，修正了关于 Master 和 Zero 的棋力比较，补充了各个版本 AlphaGo 的 Elo 表以及功耗图。这篇文章从Minimax算法开始，一直到最新的 AlphaGo Zero 和 AlphaZero，旨在介绍完全信息博弈上人们…&quot;,&quot;id&quot;:31809930,&quot;voteupCount&quot;:154,&quot;upvotedFollowees&quot;:[],&quot;created&quot;:1513257088,&quot;url&quot;:&quot;https://api.zhihu.com/articles/31809930&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;title&quot;:&quot;浅述：从 Minimax 到 AlphaZero，完全信息博弈之路（1）&quot;,&quot;previewType&quot;:&quot;default&quot;,&quot;content&quot;:&quot;&lt;p&gt;&lt;b&gt;18/01/16 第二篇出来啦：&lt;a href=\&quot;https://zhuanlan.zhihu.com/p/32073374\&quot; class=\&quot;internal\&quot;&gt;浅述：从 Minimax 到 AlphaZero，完全信息博弈之路（2）&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;最近一次修订：17/12/15 19:08，根据 &lt;a class=\&quot;member_mention\&quot; href=\&quot;http://www.zhihu.com/people/570d21d724d51202c46df32fa605ccf7\&quot; data-hash=\&quot;570d21d724d51202c46df32fa605ccf7\&quot; data-hovercard=\&quot;p$b$570d21d724d51202c46df32fa605ccf7\&quot;&gt;@阿修比&lt;/a&gt; 和 &lt;a class=\&quot;member_mention\&quot; href=\&quot;http://www.zhihu.com/people/fc635771b5003f1dd099dfda60d3ba34\&quot; data-hash=\&quot;fc635771b5003f1dd099dfda60d3ba34\&quot; data-hovercard=\&quot;p$b$fc635771b5003f1dd099dfda60d3ba34\&quot;&gt;@七彩极光夜&lt;/a&gt; 的建议修改了部分事实陈述，在此表示感谢。&lt;/p&gt;&lt;p&gt;上次修订：17/12/15 14:35，改正了部分错别字和病句，修正了关于 Master 和 Zero 的棋力比较，补充了各个版本 AlphaGo 的 Elo 表以及功耗图。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;这篇文章从Minimax算法开始，一直到最新的 AlphaGo Zero 和 AlphaZero，旨在介绍完全信息博弈上人们一路走来得到的算法，以及背后的思路。这篇文章还将重点介绍 DeepMind Alpha 系列的背后的思想和种种细节，并对某些问题提出个人的思考。&lt;/p&gt;&lt;p&gt;话说最近DeepMind又搞了不大不小的新闻，他们使用了完全类似 AlphaGo Zero 的同一套算法框架，在完全没有人类下棋数据的情况下，解决了诸多困难的棋类问题，包括国际象棋，将棋以及围棋；在国际象棋，将棋方面轻松碾压当前最强的框架（国际象棋甚至连续100局不败，并且很明显体现了先后手造成的巨大差距）。&lt;/p&gt;&lt;p&gt;他们将这个框架命名为 AlphaZero，也就是简单地比AlphaGo Zero少一个Go。AlphaZero 证实了 ResNet + MCTS 的方法不仅适用于围棋，也适用于大多人类可以掌控玩法的棋类。&lt;/p&gt;&lt;p&gt;至此我们可以认为，简单的完全信息博弈问题可以说是基本被 AlphaZero 解决了（鉴于海量的博弈状态，完全解决几乎是不可能的，但是解决到人们“看不懂在干什么”的程度是可以的，在这个程度以上的解决其实已经没有特别实在的意义了，因此说“基本解决”也不为过）。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;更准确的说，AlphaZero解决的是 “有限状态零和完全信息两人博弈” 问题。&lt;/p&gt;&lt;blockquote&gt;注：标准的说法是“有限策略”，但是个人认为对目前大部分棋类而言，“有限状态”可能更切合，因为“有限状态”包含了策略有限，而且基于这一点，大部分棋类可以使用额外的规则使得步数也有限（像围棋就通过各种劫的规则阻止状态的重复，而象棋等都有类似的规则阻止重复或者判定和局）。&lt;/blockquote&gt;&lt;p&gt;这里我们梳理一下后面会提及的一些软件版本：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Stockfish，当今最强的&lt;b&gt;开源&lt;/b&gt;国际象棋软件，&lt;b&gt;2016 TCEC 计算机国际象棋锦标赛冠军&lt;/b&gt;。人类顶级棋手一般只能和它的弱化版本对抗。&lt;/li&gt;&lt;li&gt;Elmo，&lt;b&gt;日本将棋 Computer Shogi Association (CSA) 世界冠军&lt;/b&gt;。 &lt;/li&gt;&lt;li&gt;AlphaGo-Fan，DeepMind 第一篇 Nature 论文 &lt;i&gt;Mastering the game of Go with deep neural networks and tree search&lt;/i&gt; 中提及的围棋软件，其多次击败欧洲围棋冠军樊麾，最强实力可达职业5段，这是&lt;b&gt;第一个击败职业围棋手的软件&lt;/b&gt;。其需要学习人类的围棋对弈，运行时需要数千CPU和数百GPU才能发挥最强性能。&lt;/li&gt;&lt;li&gt;AlphaGo-Lee，在国际公开赛上以&lt;b&gt;4-1击败李世石&lt;/b&gt;的版本，引起世界轰动。基本和 AlphaGo-Fan 相同，可能使用了更强的算力(后来的论文中作为基准线时，使用了48个TPU)。其段位约为9.5。&lt;/li&gt;&lt;li&gt;AlphaGo-Master，&lt;b&gt;在野狐等在线围棋对局平台上以快棋（限时1分钟）的形式60连胜世界范围内的顶级职业围棋手&lt;/b&gt;，引起棋界轰动，并在乌镇比赛上3-0击败柯洁。其学习的对战棋局来自 AlphaGo-Lee，运行时仅需4个TPU和2个CPU（单个计算节点，也就是只要一个小机箱就够了，峰值功耗预计500W）。棋力据称可以让 AlphaGo-Lee 3子（被戏称为职业20段）&lt;/li&gt;&lt;li&gt;AlphaGo-Zero，DeepMind 第二篇 Nature 论文 &lt;i&gt;Mastering the game of Go without human knowledge&lt;/i&gt; 的主角，&lt;b&gt;不使用任何直接间接来自人类的对战棋谱，不使用除了对战规则以外的任何围棋知识&lt;/b&gt;，仅用时3天就以100-0的战绩完胜AlphaGo-Lee（黄士杰称“人类千年围棋，zero三天走过”）。其硬件配置同 Master。AlphaGo-Zero 的最强版本对 AlphaGo-Master 100局胜率为 89%&lt;/li&gt;&lt;li&gt;AlphaZero，DeepMind最近的作品，硬件配置和算法基本同 AlphaGo-Zero，但是其同一套算法&lt;b&gt;除了解决围棋外，还能够解决国际象棋和日本将棋问题&lt;/b&gt;，并击败了 Stockfish（Stockfish使用了版本 8，64个CPU线程，并调节哈希表至其战力最强）。并且其用仅用8个小时就超过了 AlphaGo-Lee。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;具体的 Elo 评分（来自 AlphaGo-Zero 论文）：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;AlphaGo-Zero: 5185 &lt;/li&gt;&lt;li&gt;AlphaGo-Zero（仅含网络，不用任何搜索）: 3055&lt;/li&gt;&lt;li&gt;AlphaGo-Master: 4858&lt;/li&gt;&lt;li&gt;AlphaGo-Lee: 3739&lt;/li&gt;&lt;li&gt;AlphaGo-Fan: 3144&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;200 分的 Elo 差距对应 75% 胜率。&lt;/p&gt;&lt;p&gt;以及它们的功耗对比(按照硬件散热设计功耗TDP计，一般达不到这些样的功耗)：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-470a9146cb195a158640246f05e80e24_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1500\&quot; data-rawheight=\&quot;762\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1500\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-470a9146cb195a158640246f05e80e24_r.jpg\&quot;&gt;&lt;figcaption&gt;不同版本的AlphaGo的比赛时的功耗，（图片来源：DeepMind官网）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;其中 AlphaGo Lee 的功耗大幅下降得益于硬件（TPU 取代 GPU），而 Master 和 Zero 得益于算法 （删除了 Rollout）。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;有限状态零和完全信息两人博弈&lt;/h2&gt;&lt;p&gt;所谓零和完全信息博弈，是指在&lt;b&gt;任意时刻&lt;/b&gt;，双方玩家都知道游戏的&lt;b&gt;全部状态&lt;/b&gt;（“完全信息”），并且&lt;b&gt;有限步&lt;/b&gt;（“有限状态”）之后游戏的结果&lt;b&gt;非胜即负&lt;/b&gt;（“零和”），至多加上平局。而双方在游戏中对抗，目的是&lt;b&gt;自己获得尽可能好的结果&lt;/b&gt;（“两人博弈”）。&lt;/p&gt;&lt;p&gt;下面为了简单起见，我们假定不可能平局，&lt;/p&gt;&lt;p&gt;知道游戏的全部状态+有限状态意味着，玩家可以通过&lt;b&gt;暴力枚举&lt;/b&gt;，来计算所有可能的下法，形成一棵搜索树（习惯称为“&lt;b&gt;Game tree&lt;/b&gt;”）。&lt;/p&gt;&lt;p&gt;Game tree 从上而下，第 k 层（最上面的树根计为0层）代表下了 k 步后的游戏局面（即状态）。而边代表不同的走法，同一层的边是同一个玩家的走法，并且不同层间两个玩家交替下棋。&lt;/p&gt;&lt;p&gt;这里初识者可能有疑问：如果某个游戏允许一个玩家一次走多步呢？这个并没有问题，我们只是关心某个玩家的走法对状态的影响。如果一个玩家走了很多步，我们将它当成“复杂的一大步”就行了。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-1a5b9056a08a273c1a7779bf8aa8b004_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;545\&quot; data-rawheight=\&quot;363\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;545\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-1a5b9056a08a273c1a7779bf8aa8b004_r.jpg\&quot;&gt;&lt;figcaption&gt;井字棋的搜索树，仅仅显示前两步，忽略完全对称的情形 (来源：wikipedia)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;而零和意味着，在某个状态下计算所有可能的下法时，对于某一方，总有一系列后续的应对策略，能够达到最终胜利（或者至少平局）；也就是有所谓的“必胜策略”。&lt;/p&gt;&lt;p&gt;这一点一开始会让人觉得有点反直觉：是不是某些状态下，我们无法确认能够有必胜策略呢？&lt;/p&gt;&lt;p&gt;答案是否定的。如果我们并不能找到这样一个必胜策略，就意味着无论如何走棋，对手总有办法阻止你必胜，由于游戏是零和的，这也意味着对手有必胜策略。&lt;/p&gt;&lt;p&gt;这种反直觉实质上是因为我们的无能，我们在刚开局的时候，都会觉得最终是否胜利来自于“之后下的棋的好坏”，因为我们难以看清所有的可能下法。&lt;/p&gt;&lt;p&gt;下面我们会看到，一个枚举了所有的可能下法的对手，是何其地冷酷。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;冷酷的“上帝”和 Minimax&lt;/h2&gt;&lt;p&gt;假设你有一个非常强大的对手，他能够枚举所有可能的下法，那么他就可以画出一个上文说的 &lt;b&gt;Game tree&lt;/b&gt;，他可以给所有的终局打分（比如分越高越成功，分越低越失败）。&lt;/p&gt;&lt;p&gt;为了简单起见，我们假设一个游戏4步后就可以结束，并能够得到一个数字表示结果。&lt;/p&gt;&lt;p&gt;不妨令自己先手，枚举所有可能的走法，我们可以得到一棵 Game tree：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-a7262943155b2c0ef4db82012d000374_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;600\&quot; data-rawheight=\&quot;351\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;600\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-a7262943155b2c0ef4db82012d000374_r.jpg\&quot;&gt;&lt;figcaption&gt;Minimax 算法 (来源：wikipedia)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;第 4 层是结果。&lt;/p&gt;&lt;p&gt;然后我们使用回溯的思想，反向推导。假如到了第3层，这是对手走棋，对手会怎么走？对手一定会走使得最后结果最小的那步对吧？于是在第3层，我们可以填上下一层相连节点中的最小值（所谓MIN）；同理，在第二层，我们会选择最大的值，因为自己总是希望更好（所谓MAX）。于是两方反复形成了MIN-MAX的“对抗”，一直到树的根节点。这个时候你发现结果是-7，这意味着，如果对手一旦做了同样的推理，你是必输的；而你最好的可以取得的结果就是使得结果的评分为-7。&lt;/p&gt;&lt;p&gt;这就意味着，两个“围棋上帝（能够算出围棋的完整Game tree的人）”的对弈，最关键的部分就是猜先，然后两个神陷入沉思，不久后其中一个直接投子认输。&lt;/p&gt;&lt;p&gt;由于其MIN-MAX的特性，对应算法也叫做 Minimax (Min-i-max)。实际中为了效率算法的运行是遵循“深度优先”的原则的，具体见下图（非常慢的GIF）&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-96a560828d529893e5aac7c3ab6389a2_b.gif\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;800\&quot; data-rawheight=\&quot;580\&quot; data-thumbnail=\&quot;https://pic4.zhimg.com/v2-96a560828d529893e5aac7c3ab6389a2_b.jpg\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;800\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-96a560828d529893e5aac7c3ab6389a2_r.jpg\&quot;&gt;&lt;figcaption&gt;实际中 Minimax 算法的运行 （带遍历顺序），来源：Wikipedia&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;当然了，现实中还有另外一个冷酷的“上帝”，那就是 Murphy&#x27;s law （墨菲定律）。如果将墨菲定律视为自己的对手（当然那是极度保守者的行为），那么最好的做法还是采取最稳妥的行为——选择最坏的选择中最好的那个，任何侥幸的心理都会导致更大的损失。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;Minimax 的复杂性分析：难以企及的完美&lt;/h2&gt;&lt;p&gt;Minimax 的关键在于要能够计算出整个 Game tree，而计算出 Game tree 的代价正比于 Game tree 的大小。&lt;/p&gt;&lt;p&gt;Game tree 的大小主要由两个数字决定：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;特征深度 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=d\&quot; alt=\&quot;d\&quot; eeimg=\&quot;1\&quot;&gt; ，这代表了游戏典型的走棋步数&lt;/li&gt;&lt;li&gt;分支因子 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=b\&quot; alt=\&quot;b\&quot; eeimg=\&quot;1\&quot;&gt; ，这代表了游戏典型的每步走棋的可行走法&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;很容易得出，一个游戏的 Game tree 的大小，约为 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=b%5Ed\&quot; alt=\&quot;b^d\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;只要是一个不太 toy 的游戏， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=b%5Ed\&quot; alt=\&quot;b^d\&quot; eeimg=\&quot;1\&quot;&gt; 都是一个天文数字。例如对于围棋而言，这个数字超过了可观测宇宙中的原子数*。&lt;/p&gt;&lt;p&gt;Game tree 过于庞大，使得我们难以枚举树上的所有节点，进而难以达到“完美”的境界。&lt;/p&gt;&lt;p&gt;但是正是难以达到完美，才是游戏的有趣之处，一个靠猜先来赢的游戏并不具备足够的吸引力。&lt;/p&gt;&lt;blockquote&gt;*注：需要着重强调“可观测宇宙”。 “超过了宇宙中的原子数”是个很严谨的说法，因为可观察宇宙大小有限，大尺度结构也大致清楚，我们可以根据可观测的部分较为准确地估计原子数。而“宇宙”就很宽泛了，我们现今仍了解不足。&lt;/blockquote&gt;&lt;h2&gt;Minimax 的改进：宽度方向和深度方向&lt;/h2&gt;&lt;p&gt;由于 Minimax 非常完美的理论特性，后续的改进几乎都是基于 Minimax 的框架。&lt;/p&gt;&lt;p&gt;既然 Minimax 的复杂度主要取决于特征深度 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=d\&quot; alt=\&quot;d\&quot; eeimg=\&quot;1\&quot;&gt; 和分支因子 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=b+\&quot; alt=\&quot;b \&quot; eeimg=\&quot;1\&quot;&gt; ，那么改进思路主要就是试图减少这两个数。&lt;/p&gt;&lt;p&gt;减少特征深度 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=d\&quot; alt=\&quot;d\&quot; eeimg=\&quot;1\&quot;&gt; 的主要方式是有三个：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;b&gt;函数近似&lt;/b&gt;。我们构造一个所谓的&lt;b&gt;估值函数（evaluation function）&lt;/b&gt;，它的目的是估计某个局面的 Minimax 评分，这样我们我们就不用搜索到终盘才能得知结果。一般而言，越接近终盘估计会越准确（因为游戏往往越到残局越简单），所以估值函数不能完全替代搜索。这是 AlphaGo-Zero 和 AlphaZero 的方式。&lt;/li&gt;&lt;li&gt;&lt;b&gt;模拟估计&lt;/b&gt;。我们可以从某个局面开始，使用一个相对简单的对弈系统（如果和主程序一样复杂就没有意义了），快速下到终局，用得到的结果作为这个局面的 Minimax 评分的近似。显然这个方法也往往越到终盘越准确。此方法又称为&lt;b&gt; rollout&lt;/b&gt;。&lt;/li&gt;&lt;li&gt;上面两种方法的混合，比如两个的结果加权平均。这是 AlphaGo-Fan 和 AlphaGo-Lee使用的方式。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;可以看出，减少特征深度 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=d\&quot; alt=\&quot;d\&quot; eeimg=\&quot;1\&quot;&gt; 的核心思想就是&lt;b&gt;直接近似得到某个盘面 Minimax 评分，而不是依赖后续的搜索，以截断 Minimax 的搜索深度。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;而减少分支因子 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=b+\&quot; alt=\&quot;b \&quot; eeimg=\&quot;1\&quot;&gt; 的方式主要有两个：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;b&gt;剪枝&lt;/b&gt;。剪枝就是去除掉某些明显劣势的走法。最著名的是 &lt;b&gt;Alpha–beta 剪枝&lt;/b&gt;，它充分利用了 Minimax 算法的特点，并且仍然可以得到和 Minimax相同的结果（也就是不是近似），是首选的优化。另外也可以用估值函数减掉某些非常坏的走法的分支。&lt;/li&gt;&lt;li&gt;&lt;b&gt;采样估计&lt;/b&gt;。其思路是蒙特卡洛(monte-carlo)模拟。我们可以先预估出一个先验概率分布 P，然后再根据 P 采样部分路径用作估计。这种手段对分支因子的减少比较激进，在围棋等分支因子较大的棋类中较常用。Alpha系列采用的就是此类方法。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;下面我们将提及这些技术。&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt;下面几小节将介绍一些著名的以减少分支因子为目的的机制&lt;/blockquote&gt;&lt;h2&gt;Alpha–beta 剪枝&lt;/h2&gt;&lt;p&gt;可以说，在AlphaGo系列之前，alpha-beta剪枝是棋类游戏游戏中最主要的优化技术之一（可能即使以后也是如此）。alpha-beta剪枝可以在minimax的基础上无缝地（即不大幅修改原算法，不会降低算法的效力）进行优化。&lt;/p&gt;&lt;p&gt;alpha-beta 的核心思想在于剪去某些明显非最优的分支，其原理基于是Minimax算法的特性，本质上是利用了 min 和 max 的“单调性”。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-cc342fb391516e5daac268513f138671_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1516\&quot; data-rawheight=\&quot;1078\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1516\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-cc342fb391516e5daac268513f138671_r.jpg\&quot;&gt;&lt;figcaption&gt;Alpha-beta 剪枝示意图&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;如上图所示，如果在下层的MAX节点发现得到的值为5，那么意味着上层的MIN节点的数值一定不大于5。而如果本层的MAX节点的值已经至少为8（比如因为下层的MIN节点为8），那么就可以剪掉右边的分支（即右边的分支不必继续探索）。&lt;/p&gt;&lt;p&gt;可以看到，如果我们运气很好（实际中依赖估值函数预先猜几个），直接搜到了最好的情况，alpha-beta可以剪去大部分分支。在这种情况下，复杂度可以约化为 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Csqrt%7Bb%5Ed%7D\&quot; alt=\&quot;\\sqrt{b^d}\&quot; eeimg=\&quot;1\&quot;&gt; ，也就是 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=b%5E%7Bd%5Cover+2%7D\&quot; alt=\&quot;b^{d\\over 2}\&quot; eeimg=\&quot;1\&quot;&gt; （证明略）。这是很有趣的事情：虽然alpha-beta剪枝优化的是分支因子 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=b\&quot; alt=\&quot;b\&quot; eeimg=\&quot;1\&quot;&gt; ，但是在算法的实际运行中，效果反而类似于优化了深度 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=d\&quot; alt=\&quot;d\&quot; eeimg=\&quot;1\&quot;&gt; 。良好的alpha-beta剪枝可以使得算力相同时搜索深度增大一倍，而能看远一倍的对手是非常可怕的。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;蒙特卡洛树搜索（Monte-Carlo Tree Search, MCTS）&lt;/h2&gt;&lt;p&gt;蒙特卡洛法的思想非常简单：用随机采样来估计某些数值。最经典的是下面的估算圆周率 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpi\&quot; alt=\&quot;\\pi\&quot; eeimg=\&quot;1\&quot;&gt; 的例子： &lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-eb0945aa2185df958f4568e58300e77a_b.gif\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;500\&quot; data-rawheight=\&quot;500\&quot; data-thumbnail=\&quot;https://pic2.zhimg.com/v2-eb0945aa2185df958f4568e58300e77a_b.jpg\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;500\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-eb0945aa2185df958f4568e58300e77a_r.jpg\&quot;&gt;&lt;figcaption&gt;Monte-Carlo 法估算圆周率 (图片来源：Wikipedia)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;在这个例子中，我们随机向正方形内均匀投点，然后我们计算有多少点在 1/4 圆内（这很容易，比如判断点离原点的欧氏距离），进而可以算出在1/4圆内的点所占的总点数的比例，然后带入圆面积公式就可以估计出 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpi\&quot; alt=\&quot;\\pi\&quot; eeimg=\&quot;1\&quot;&gt; 。&lt;/p&gt;&lt;p&gt;但是，怎么样将蒙特卡洛法用于Game Tree呢？先看一个简单的情况（多臂摇臂机问题）：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-ecafa8bce057bb8e4fd292eed2cbc4ae_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1100\&quot; data-rawheight=\&quot;768\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1100\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-ecafa8bce057bb8e4fd292eed2cbc4ae_r.jpg\&quot;&gt;&lt;figcaption&gt;拉斯维加斯赌场的摇臂机（来源：Wikipedia）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;假设你面前有一排摇臂机，它们的期望回报有差别，显然你希望在最终博弈时尝试胜率更高的那个。&lt;/p&gt;&lt;p&gt;幸运的是，你被允许事先尝试这些摇臂机，但是由于受到时间和精力的限制，你只能尝试一个有限的次数。这实际上就是下棋的情景：你希望走胜率最高的那步，并且你有有限的时间来尝试不同下法（被称为 &lt;b&gt;Exploration，探索&lt;/b&gt;），来决定最终使用哪个走法。&lt;/p&gt;&lt;p&gt;Monte-Carlo 法希望这些尝试过程能够最终让（平均价值）最好的选择获得最多次尝试（或者说，让尝试次数和其真正的价值对应；就好像前面示例中投入 1/4 圆的点的个数和其面积对应类似）。一个很简单的方法是，让获得获得回报越高的选择重复选择的可能性越大（被称为 &lt;b&gt;Exploitation，利用&lt;/b&gt;）。并且我们在每次利用时顺便也更新平均价值。&lt;/p&gt;&lt;p&gt;但是这个问题有一些麻烦之处：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;如果我们把太多的选择放到一个一开始回报很大的选项上，因为尝试次数有限，我们很有可能受到统计涨落的影响，错失一个我们碰巧没有选中或者碰巧头几回价值低但是期望价值很高的选项。这就是 &lt;b&gt;&lt;i&gt;Exploitation&lt;/i&gt; &amp;amp; &lt;i&gt;Exploration&lt;/i&gt; (E &amp;amp; E) 问题&lt;/b&gt;，即我们需要在探索和利用中取得一个平衡。这个平衡要求我们对&lt;b&gt;探索过多的选择进行适当贬值&lt;/b&gt;，但是这个贬值又不能降低其“真正价值”，因为一个选择被探索多次后，其平均价值接近真实价值，我们不应为了某个不甚了解的“后起之秀”轻易抛弃一个身经百战的“长老”。&lt;/li&gt;&lt;li&gt;如果我们简单地像 Monte-Carlo 一样一开始简单地对所有的节点均匀采样，效率实在太低了，这对于围棋等复杂问题是不能忍受的（类似完全不剪枝）。如果我们先验地觉得，某个选择更好（比如因为我们已有的经验，朋友的推荐等等），可以提供一个更大的先验概率 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=P\&quot; alt=\&quot;P\&quot; eeimg=\&quot;1\&quot;&gt; 用来引导采样。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;下面我们介绍 AlphaGo Zero 使用的策略，它是传统的PUCT中策略的改进和简化：&lt;/p&gt;&lt;p&gt;首先，我们定义每个选择的“可利用价值”为（平均）动作价值 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=Q\&quot; alt=\&quot;Q\&quot; eeimg=\&quot;1\&quot;&gt; 和置信上界 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=U\&quot; alt=\&quot;U\&quot; eeimg=\&quot;1\&quot;&gt; 之和。 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=Q\&quot; alt=\&quot;Q\&quot; eeimg=\&quot;1\&quot;&gt; 是每次利用时得到的价值的平均， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=U\&quot; alt=\&quot;U\&quot; eeimg=\&quot;1\&quot;&gt; 代表某种“潜在可利用性”。&lt;/p&gt;&lt;p&gt;那么 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=U\&quot; alt=\&quot;U\&quot; eeimg=\&quot;1\&quot;&gt; 应该和什么有关呢？首先，更大的先验概率 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=P\&quot; alt=\&quot;P\&quot; eeimg=\&quot;1\&quot;&gt; ，对应更大的 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=U\&quot; alt=\&quot;U\&quot; eeimg=\&quot;1\&quot;&gt; ；而如果被利用次数 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=N\&quot; alt=\&quot;N\&quot; eeimg=\&quot;1\&quot;&gt; 太多，那么 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=U\&quot; alt=\&quot;U\&quot; eeimg=\&quot;1\&quot;&gt; 应该“贬值”。所以一个初步的设想是：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=U%5Cpropto+%7BP%5Cover%7B1%2BN%7D%7D\&quot; alt=\&quot;U\\propto {P\\over{1+N}}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;但是对于树搜索而言，有一个问题在于它是有分支的。这意味着分支间还有竞争。因此我们还要考虑到“分支优势”，即一个分支的邻居（即同一局面下的一组选择）也需要给 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=U\&quot; alt=\&quot;U\&quot; eeimg=\&quot;1\&quot;&gt; 做贡献，以体现“邻居优势”。毕竟我们得到一个局面下的一个优秀的选择，我们更有兴趣去尝试这个局面下其他选择到底如何。邻居贡献显然要小于自己的贡献，因此我们不妨加个根号（为什么加根号在PUCT等地方有推导）：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=U%5Cpropto+P%7B%7B%5Csqrt%7B%5Csum%7BN%27%7D%7D%7D%5Cover%7B1%2BN%7D%7D\&quot; alt=\&quot;U\\propto P{{\\sqrt{\\sum{N&#x27;}}}\\over{1+N}}\&quot; eeimg=\&quot;1\&quot;&gt; ，(上面没有加一，第一次访问这个分支的时候应该要特殊处理一下)。&lt;/p&gt;&lt;p&gt;那么完整的公式的常数应该是什么呢？这是一个超参数，记为 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=c_%7Bpuct%7D\&quot; alt=\&quot;c_{puct}\&quot; eeimg=\&quot;1\&quot;&gt; ，这样完整的式子就是：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=U%3Dc_%7Bpuct%7DP%7B%7B%5Csqrt%7B%5Csum%7BN%27%7D%7D%7D%5Cover%7B1%2BN%7D%7D\&quot; alt=\&quot;U=c_{puct}P{{\\sqrt{\\sum{N&#x27;}}}\\over{1+N}}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;注意到，由于 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=U\&quot; alt=\&quot;U\&quot; eeimg=\&quot;1\&quot;&gt; 会导致贬值，所以我们在探索的时候可以采用最贪心的方式：&lt;b&gt;直接选择最大的 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=Q%2BU\&quot; alt=\&quot;Q+U\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/b&gt; ，反正随着 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=U\&quot; alt=\&quot;U\&quot; eeimg=\&quot;1\&quot;&gt; 的贬值会导致探索其他的Game Tree上的路径。&lt;/p&gt;&lt;p&gt;那么最后一个问题：Q是价值的平均，那么这些“价值”怎么来？——很简单，搜索到一定深度时直接用估值函数得到一个价值 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=V\&quot; alt=\&quot;V\&quot; eeimg=\&quot;1\&quot;&gt; 即可， 然后使用 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=V\&quot; alt=\&quot;V\&quot; eeimg=\&quot;1\&quot;&gt; 更新上面所有节点的 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=Q\&quot; alt=\&quot;Q\&quot; eeimg=\&quot;1\&quot;&gt; 值，同时 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=N\&quot; alt=\&quot;N\&quot; eeimg=\&quot;1\&quot;&gt; 增加1。&lt;/p&gt;&lt;p&gt;我们整理一下思路，就有了整个算法：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;选择 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=Q%2BU\&quot; alt=\&quot;Q+U\&quot; eeimg=\&quot;1\&quot;&gt; 最大的走法，一直往下走，直到碰到还没有计算 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=Q\&quot; alt=\&quot;Q\&quot; eeimg=\&quot;1\&quot;&gt; 和 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=U\&quot; alt=\&quot;U\&quot; eeimg=\&quot;1\&quot;&gt; 值的节点。（称为Select）&lt;/li&gt;&lt;li&gt;遇到还没有计算 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=Q\&quot; alt=\&quot;Q\&quot; eeimg=\&quot;1\&quot;&gt; 和 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=U\&quot; alt=\&quot;U\&quot; eeimg=\&quot;1\&quot;&gt; 值的节点，设置 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=Q\&quot; alt=\&quot;Q\&quot; eeimg=\&quot;1\&quot;&gt; 和 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=N\&quot; alt=\&quot;N\&quot; eeimg=\&quot;1\&quot;&gt; 为0，并计算这个节点的盘面下的先验概率 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=P\&quot; alt=\&quot;P\&quot; eeimg=\&quot;1\&quot;&gt; ，这样 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=U\&quot; alt=\&quot;U\&quot; eeimg=\&quot;1\&quot;&gt; 就有了值。（称为 Expand ）&lt;/li&gt;&lt;li&gt;直到到限定深度 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=L\&quot; alt=\&quot;L\&quot; eeimg=\&quot;1\&quot;&gt; ，用估值函数/Rollout直接得出该节点的 Minimax 值 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=V\&quot; alt=\&quot;V\&quot; eeimg=\&quot;1\&quot;&gt; ，这个节点是此次树搜索中的叶节点。（称为 Evaluate）&lt;/li&gt;&lt;li&gt;通过回溯，更新从叶节点到根节点路径所有节点的 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=N\&quot; alt=\&quot;N\&quot; eeimg=\&quot;1\&quot;&gt; (全部加1)和 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=Q\&quot; alt=\&quot;Q\&quot; eeimg=\&quot;1\&quot;&gt; (更新平均值)。（称为 Backup）&lt;/li&gt;&lt;/ol&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-26a4b3c936501988ae60a20cff45a7fe_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2176\&quot; data-rawheight=\&quot;752\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2176\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-26a4b3c936501988ae60a20cff45a7fe_r.jpg\&quot;&gt;&lt;figcaption&gt;AlphaGo中 MCTS 算法流程（来源：DeepMind论文）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;通过若干次这样的迭代（迭代搜索次数也是个超参数），根节点的各个选择的利用次数 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=N\&quot; alt=\&quot;N\&quot; eeimg=\&quot;1\&quot;&gt; 就有了不同的值。我们选择最大的值对应的选择作为我们下一步的走棋。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;“胜天半目”&lt;/h2&gt;&lt;p&gt;看完 MCTS 后，你或许就可以理解为什么 AlphaGo 下棋时常常有半目胜，以及下到接近赢或者接近输的时候，常常各种自损。&lt;/p&gt;&lt;p&gt;最开始人们以为是AlphaGo和人类差距不大，或者 AlphaGo 官子能力很差，所以才常常半目胜。但是到了 Master 版本后，从各种对战中可以发现，即使发生了沧海桑田的大转换后，AlphaGo 无论对人还是对己，大多数棋局依然半目胜。鉴于 AlphaGo Master 从来没有直接输给人类，特别是有些时候能够将半目胜从中盘持续到官子，这基本否认了前面的看法。&lt;/p&gt;&lt;p&gt;其实 “胜天半目” 的理由很简单，在围棋中，&lt;b&gt;赢棋和赢多少比分并没有特别的关联，甚至赢少的目数的情形下，对赢棋更加有利&lt;/b&gt;（显然要求你至少半目赢，和要求你至少7目赢，前者简单很多）。&lt;/p&gt;&lt;p&gt;举个例子。试想一下搜索树中有2个可选择分支A和B，而它们的后续分支的输赢目数如下：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-7ef4b0c8d2ae9c0b5f2646b771f521a7_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1022\&quot; data-rawheight=\&quot;594\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1022\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-7ef4b0c8d2ae9c0b5f2646b771f521a7_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;如果下面4个分支到达的概率相同，那么显然A分支的赢的目数的期望更高，为1.75；相应的右边的期望为0.5。也就是希望赢得目数多，应该选择A分支。&lt;/p&gt;&lt;p&gt;而按照胜率而言，A分支胜率50%，B分支胜率100%，尽管都是半目胜。&lt;/p&gt;&lt;p&gt;在实战中，人们往往被A分支巨大的期望吸引，而因为算力不足，无法发现导致轻微输的 k 分支，所以大幅胜出是常见的；而面对AlphaGo这种算力极深的软件，就会无情的被带入 k 分支，因而觉得形势大好，但是莫名其妙输了，而对于AlphaGo而言，很多和人的对局到中盘就已经半目胜了。&lt;/p&gt;&lt;h2&gt;Alpha-beta 剪枝 vs 蒙特卡洛树搜索（MCTS）&lt;/h2&gt;&lt;p&gt;在这一小节，我希望读者能够对这两种减少分支因子 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=b\&quot; alt=\&quot;b\&quot; eeimg=\&quot;1\&quot;&gt; 的方法有个比较。&lt;/p&gt;&lt;p&gt;Alpha-beta 剪枝是非常简洁高效、很“硬”的算法，在理论上有着很好的保证（不会出现忽视某个重要分支的情况，除非人给的估值函数太糟），不依赖超参数。Alpha-beta 剪枝不进行特意优化时每一步都要重新计算搜索树，因为其缺乏持续更新的性质，到下一步棋时搜索树底层的估值函数得到的值发生变化，之前所有的结果都需要更新，这会增大计算开销。（当然有支持持续搜索的变种算法，不过肯定要比当前算法复杂很多，或者不能保持原来所有的优良性质，比如 aspiration windows）。&lt;/p&gt;&lt;p&gt;而 MCTS 显然复杂的多，它的“剪枝”力度大很多（由迭代搜索次数这个超参数限定，和棋类无关），从而使得其更加适用于围棋之类分支因子 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=b\&quot; alt=\&quot;b\&quot; eeimg=\&quot;1\&quot;&gt; 特别大的棋类；但是这也使得它性能的保证却不是绝对的（毕竟又要少又要准这种免费午餐是没有的）；同时它有很多超参数，比如显式的是 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=c_%7Bpuct%7D\&quot; alt=\&quot;c_{puct}\&quot; eeimg=\&quot;1\&quot;&gt; 和迭代搜索次数，隐式的是相关公式的形式（比如上面取根号还是对数，是否在公式某处加一，又应该加在什么地方，总之变种非常多）；另外 MCTS 是可以很方便地“复用”搜索树的，因为虽然下一步棋时搜索树底层的估值函数得到的值发生变化，但是我们可以通过迭代来修正这种变化，这样之前的结果都可以重复使用。&lt;/p&gt;&lt;p&gt;我们可以进一步对比一下在国际象棋中 MCTS 算法和 Alpha-beta 算法的搜索的节点数：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;AlphaZero 使用上文介绍的 MCTS 每步搜索了 80000 个节点&lt;/li&gt;&lt;li&gt;Stockfish(目前最强开源国际象棋软件) 使用改进的 Alpha-beta 每步搜索了 70000000 个节点&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;后者是前者的 875 倍。这就意味着 AlphaZero 中的 MCTS 要在仅有千分之一的值的情况下得到更好的结果。由此可见，MCTS 的有效性强烈依赖于其概率分布生成和估值函数。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;其他的剪枝策略&lt;/h2&gt;&lt;p&gt;这些策略来自 Stockfish，它是当今最强的开源国际象棋软件。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Quiescence Search（”静态搜索“）：其对于初始子数比较固定，且存在吃子的棋类比较适用（比如国际象棋）。搜索到一定深度后，其只选择造成吃子或者将军等结果的分支。这是因为吃子或者将军后，盘面变得简单，且明显向终局接近（分支因子和搜索深度都会减小）；而且很多情况下会出现兑子，这又大大约束了选择。Quiescence Search 某种意义上就是我们棋理上常说的”简明的下法“。&lt;/li&gt;&lt;li&gt;Null move pruning ：很多棋类都有”不走棋“这个选项，这个剪枝假定一般情况下”不走棋“是很糟的策略，如果检测没有出现”迫移“的情形, 就剪去”不走棋“的分支。&lt;/li&gt;&lt;li&gt;Futility pruning： 当我们知道估值的最大可能的变动范围后，可以剪去一些无效的分支（比如超出变动范围的）。可以认为是某种精细化的 alpha-beta 剪枝。&lt;/li&gt;&lt;li&gt;Aspiration windows：其试图复用 alpha-beta 的剪枝结果，避免每次到下一步棋都要重新搜索。&lt;/li&gt;&lt;li&gt;Principal variation search：其可以被认为是 alpha-beta 的一个启发式改进。如果我们能够经常猜中最好的选择，那么 principal variation search 可以大大提高速度；否则其会带来很高的代价。&lt;/li&gt;&lt;li&gt;其他一些领域相关的剪枝：比如根据被吃棋子的重要程度进行剪枝，这在国际象棋等各个棋子价值差异很大的游戏中常见。&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;blockquote&gt;下面几小节是关于上文提及的几种减少搜索深度的机制&lt;/blockquote&gt;&lt;h2&gt;Rollout&lt;/h2&gt;&lt;p&gt;Rollout 的思想在于用较简单的策略快速走到终局，用这个分值辅助估计当前局面的 Minimax 值。&lt;/p&gt;&lt;p&gt;显然 rollout 需要消耗大量的运算资源。使用 Rollout 的 AlphaGo-Fan 版本使用了 40 个搜索线程, 1202 个 CPU 和 176 个 GPU 才达到 3140 的 Elo (职业3-5段水平)；而后来仅使用估值函数的 AlphaGo-Master 和 AlphaGo-Zero 使用1个计算节点（4个TPUv1+2个CPU*）直接对局职业9段从来没有输过。&lt;/p&gt;&lt;p&gt;由此可见估值函数相对于Rollout高效得多。AlphaGo-Fan 和 AlphaGo-Lee 使用 Rollout 的原因一个是因为 Rollout 在 MCTS 中比较常见，另外一个原因是当时的估值函数很弱，所以他们平均 Rollout 和估值函数的结果来提升效果。AlphaGo-Master 以后 DeepMind 得到了更强的估值函数，于是就放弃了 Rollout*。&lt;/p&gt;&lt;blockquote&gt;*注：具体的CPU信息没有公开，但是一般一个高性能计算节点双路的居多，很少超过4路CPU&lt;br&gt;DeepMind也没有具体透露Master版本的算法，但是说了“Master版本的算法有了很大的改进，效率明显提高，对战时可以在单个节点上使用4个TPU运行，而不需要分布式版本”，这和AlphaGo Zero的配置完全相同，显然是删掉了 Rollout，并改进了估值函数。&lt;/blockquote&gt;&lt;h2&gt;估值函数（Evaluation function）及其设计&lt;/h2&gt;&lt;p&gt;AlphaGo 系列突破点之一就在于使用神经网络作为估值函数，虽然早先 GNU-Go 等围棋已经将神经网络应用到了围棋中，但是 AlphaGo 系列使用了更深更复杂的网络，并且使用足够的算力证实了神经网络作为估值函数的极大优势。&lt;/p&gt;&lt;p&gt;我么先看看经典的估值函数设计，比如 Stockfish，它是当今最强的开源国际象棋软件。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;首先人工选取一些特征，比如剩余可活动的棋子数，被卡住的棋子，最靠前的棋子的攻击态势，国王的潜在威胁，双象的交互，以及各种人工经验得到的表，比如残局状态表，中局评估表，棋子走位表，等等等等。（AlphaZero 论文中给的叙述是：midgame/endgame-specific material point values, material imbalance tables, piece-square tables, mobility and trapped pieces, pawn structure, king safety, outposts, bishop pair, and other miscellaneous evaluation patterns）&lt;/li&gt;&lt;li&gt;给每个特征进行评分（人工设计评分规则），并加权求和（权重是可调节和学习的参数）。得到的结果作为估值结果。&lt;/li&gt;&lt;li&gt;引入 Quiescence Search（上文提到的），在原搜索树的底部尝试继续搜索吃子或者将军的分支，但是这个时候会额外使用一些人工设计的战术以及其他调整，并更新原先的估值结果；如果没有吃子等情形，就直接采用原先的估值结果。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;但是这些估值方式，对于围棋是基本无效的。围棋中棋子就黑白两类，因此没有办法设计针对某种棋子的特征设计特别的估值方式；中局和残局(收官)状态非常多，很难打表，而且甚至人本身都很难估计中局的局势，围棋中难以预料的逆转是很常见的事；围棋很难判断”卡住的棋子“，对应于围棋中的死活问题，即使对于职业选手，这也一直是个难题；围棋中吃子并不明确意味着带来巨大的优势，或者把局面变得更简单，甚至吃子造成的劫争会把局面变得更加复杂；围棋的终局目标也很复杂，并不是象棋中”将死“这个非常简单直接的条件，对于初学者而言判断何时已经可以分出胜负也不是一个简单的问题，计算机一般只用 Tromp–Taylor 计分法来判断终局，而这要求一直进行到底才比较准确。&lt;/p&gt;&lt;p&gt;可以说围棋的关键在于&lt;b&gt;整体结构之间那些复杂的，从局部到全局的耦合&lt;/b&gt;，而非棋子本身。这导致长期人们难以设计出一个优秀的估值函数，人们估计20年内围棋软件都不是职业选手的对手。&lt;/p&gt;&lt;p&gt;但是”&lt;b&gt;整体结构之间那些复杂的，从局部到全局的耦合&lt;/b&gt;“，似乎恰恰对应了另外一类问题的结构？——对，图像。&lt;/p&gt;&lt;p&gt;围棋最小的单位是棋子，对应于图像的像素；而围棋的小局部（靠，扳，断，飞，跳，挂），对应了图像中的简单结构（边缘，角，线条）；而围棋的大局部，对应了图像的复杂结构，（窗子，门）；而这些复杂的结构以复杂的方式进行作用，形成了整体。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-e9ca1bdf1a2ed99bb9e6072e0a225143_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2070\&quot; data-rawheight=\&quot;1134\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2070\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-e9ca1bdf1a2ed99bb9e6072e0a225143_r.jpg\&quot;&gt;&lt;figcaption&gt;围棋到图像中的从局部到整体&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;更大的特征，都是由更小的部分有机结合起来的，而这些复杂的结合方式组成了围棋的大局面，或者图像中的主体。&lt;/p&gt;&lt;p&gt;而在图像识别和分析方面，自2012年以来，CNN（卷积神经网络）在 ImageNet 等比赛上一举成名，成为了现在主流方法之一。所以将CNN应用到围棋上也是很自然的想法。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;卷积神经网络作为估值函数&lt;/h2&gt;&lt;p&gt;如果你并不是特别了解卷积神经网络，那么只需要记住它是一个强大的多层非线性变换函数，并且对于图像等的处理非常有效，因此下面我们将它表示为一个函数。&lt;/p&gt;&lt;p&gt;如果棋盘的当前状态记为 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=s\&quot; alt=\&quot;s\&quot; eeimg=\&quot;1\&quot;&gt; ，神经网络记为 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=F_%5Ctheta\&quot; alt=\&quot;F_\\theta\&quot; eeimg=\&quot;1\&quot;&gt; ( &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Ctheta\&quot; alt=\&quot;\\theta\&quot; eeimg=\&quot;1\&quot;&gt; 是它的参数)，当前状态作为 Game Tree 的一个节点，其 Minimax 值为 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=V%5E%2A_%7Bs%7D\&quot; alt=\&quot;V^*_{s}\&quot; eeimg=\&quot;1\&quot;&gt; ，我么需要做的是，寻找这个特定的 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Ctheta%5E%2A\&quot; alt=\&quot;\\theta^*\&quot; eeimg=\&quot;1\&quot;&gt; ，使得&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=F_%7B%5Ctheta%5E%2A%7D%28s%29%5Capprox+V%5E%2A_s\&quot; alt=\&quot;F_{\\theta^*}(s)\\approx V^*_s\&quot; eeimg=\&quot;1\&quot;&gt; ，并且越近似越好。实际中我们使用均方误差描述近似性，即求解以下最优化问题 ：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmin_%7B%5Ctheta%7D%5Cmathbb%7BE%7D_s%5C%7CF_%5Ctheta%28s%29-V%5E%2A_s%5C%7C%5E2\&quot; alt=\&quot;\\min_{\\theta}\\mathbb{E}_s\\|F_\\theta(s)-V^*_s\\|^2\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;这实质上就是一个非常复杂的拟合问题，拟合的目标是让 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=F_%7B%5Ctheta%5E%2A%7D\&quot; alt=\&quot;F_{\\theta^*}\&quot; eeimg=\&quot;1\&quot;&gt; 近似于 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=V%5E%2A\&quot; alt=\&quot;V^*\&quot; eeimg=\&quot;1\&quot;&gt; ，足够近似后，这个神经网络就能够足够好地估计当前局面的 Minimax 值，也就是一个很好的估值函数了（&lt;b&gt;这个网络又被称为”价值网络“&lt;/b&gt;）。&lt;/p&gt;&lt;p&gt;不过，一般而言，卷积神经网络还要分为两个部分，前面的“主体部分”是卷积层（所以叫卷积神经网络），能够抽取“对输入的良好的表示”；而后面的“头”对这个表示进行简单的变换，得到最终的输入。一般而言，“主体部分”越深，神经网络的表示能力越强（这也是“深度学习”的含义之一），因而作为估值函数越接近最有解。从AlphaGo-Lee 到后面版本的最主要区别之一就是网络的加深：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-96b765ae364c915cb4df0627389abba9_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1434\&quot; data-rawheight=\&quot;962\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1434\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-96b765ae364c915cb4df0627389abba9_r.jpg\&quot;&gt;&lt;figcaption&gt;不同版本 AlphaGo 的网络主体部分的深度（以CNN层数计）等比例缩放示意图，其中猜测 Master 版本可能使用了 AlphaGo-Zero (Block20) 的网络&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;AlphaGo-Lee 使用了较浅的网络用来估值，显然出现了类似“欠拟合”的问题，需要 Rollout 辅助估值；而之后的 Master 和 Zero 就直接扔掉了 Rollout，因为深网络本身足以估值。&lt;/p&gt;&lt;p&gt;除了网络主体外，我们说过还需要一个“头”用来将中间特征转化为值，对于估值而言，这个“头“长这样(以AlphaGo-Zero为例)：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-91eb23c11584ad5bfec506a29b3965d6_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1046\&quot; data-rawheight=\&quot;1178\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1046\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-91eb23c11584ad5bfec506a29b3965d6_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;其将上面卷积层的输出”压扁“，然后通过两个全连接层变换后通过 Tanh 得到一个-1到1之间的值，这就是最终的估值。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;卷积神经网络作为策略函数&lt;/h2&gt;&lt;p&gt;上面我们说过，为了减少 MCTS 的选择，我们在选择分支的时候会考虑到一个先验概率分布。这个先验分布告诉我们走每步棋的先验概率，而求解这个这个概率的函数被称为 ”策略函数“。&lt;/p&gt;&lt;p&gt;我们当然可以把每一步都试试，然后用估值函数估计每步走后的 Minimax 值，然后反推出每一步的先验概率。但是这样问题很多：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;效率极低。对于围棋这种一步走法很多的，需要数百次估值。&lt;/li&gt;&lt;li&gt;固然更高的 Minimax 值对应了更大的先验概率，但是具体怎么对应不清楚。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;所以说我们不妨再搞一个神经网络单独用于估计概率分布（在一个局面下一次直接输出整个分布），这个网络又称为 ”&lt;b&gt;策略网络&lt;/b&gt;“。&lt;/p&gt;&lt;p&gt;AlphaGo-Fan 和 Lee 都是使用了两个网络（价值网络+策略网络）。&lt;/p&gt;&lt;p&gt;但是按照”表示学习“的思想，围棋局面的”高级表示“是可以复用的，既可以用来判断价值，也可以用来作为策略，所以，为什么我们不共享一个主体呢？&lt;/p&gt;&lt;p&gt;所以我们给策略网络一个单独的头（AlphaGo-Zero中）：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-bc0c13f20a0eb1e03d292f4b577c4fa1_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1024\&quot; data-rawheight=\&quot;1064\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1024\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-bc0c13f20a0eb1e03d292f4b577c4fa1_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;这个头先将前面的”高级特征“压扁，然后通过一个全连接层，直接得到概率分布（注意，直接输出的是Logit分布，变成一般意义上的概率分布需要加一个Softmax层。Logit分布主要是方便神经网络优化，提高数值稳定性并减少计算量）&lt;/p&gt;&lt;p&gt;整个网络结构看上去就是这样的：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-8287cc96be21910225ce7699e15477aa_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1190\&quot; data-rawheight=\&quot;1030\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1190\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-8287cc96be21910225ce7699e15477aa_r.jpg\&quot;&gt;&lt;figcaption&gt;上面是主体部分，下面带两个头&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;此外还需要注意的是，”主体部分“是由一些称为 Residual Block（残差块）的部分组成的，这是由于特别深的神经网络难以优化，一个解决技巧是引入”残差“，形成残差结构。Residual 几乎是深层 CNN 的标配结构之一。AlphaGo 里面使用的 Residual Block 的结构是：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-fbb0db78dfe41feca56eca97f9bf06bc_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2050\&quot; data-rawheight=\&quot;1394\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2050\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-fbb0db78dfe41feca56eca97f9bf06bc_r.jpg\&quot;&gt;&lt;figcaption&gt;可以通过控制 Residual block 的数量来改变网络深度&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;估值函数/策略函数：神经网络vs人工设计&lt;/h2&gt;&lt;p&gt;”估值函数（Evaluation function）及其设计“ 一节中，我们提到了 Stockfish 中复杂的估值函数设计。这些设计基于人工经验，对国际象棋等比较有效，而对围棋就显得很囧。&lt;/p&gt;&lt;p&gt;而通过”卷积神经网络作为估值函数“一节，我们看到，神经网络作为估值函数时，&lt;b&gt;几乎不关心棋本身，而是网络自身的结构，而这种结构都是非常成熟的，不需要太多刻意设计&lt;/b&gt;。通过足够多样本的学习，我们就能够得到一个足够好的估值函数。&lt;b&gt;于是数据和算力取代了设计&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;正是这一点让 DeepMind 意识到，这一套方法不仅适用于围棋，同样适用于国际象棋和日本将棋等多数棋类。于是他们稍微改变了一下 AlphaGo-Zero，得到了一个通用的解决此类问题的版本 AlphaZero。&lt;/p&gt;&lt;p&gt;最初人们觉得国际象棋和将棋并不是特别适合 AlphaGo，因为它们的各个棋子差异很大，而且规则比围棋复杂很多，局面上也缺乏围棋的结构性，且存在长距离的攻击。但是 AlphaZero 依然轻松战胜了 Stockfish 和 Elmo，并且搜索时采用的估值次数只有它们的千分之一，这说明&lt;b&gt;只要足够的数据（无论是人给的，还是自己对弈产生的）和算力，神经网络就可以学到足够好的，远超出人们设计能力的估值函数&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;我想，用数据和算力取代人工设计这件事情，还会持续发生。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;估值，搜索和学习：本质何在？&lt;/h2&gt;&lt;p&gt;再次回顾最早的 Minimax 算法，我们可以发现一个极大的问题：&lt;/p&gt;&lt;p&gt;要得到一个准确的估值，需要 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=b%5Ed\&quot; alt=\&quot;b^d\&quot; eeimg=\&quot;1\&quot;&gt; 量级的搜索次数（因为要准确估计出Minimax值，需要整个Game Tree）；但是一局棋却只要 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=d\&quot; alt=\&quot;d\&quot; eeimg=\&quot;1\&quot;&gt; 次决策。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-0754fd6a2d9ade44579d071492f4ff46_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;600\&quot; data-rawheight=\&quot;351\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;600\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-0754fd6a2d9ade44579d071492f4ff46_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;这说明对于极其复杂的棋类，越&lt;b&gt;在线（online）&lt;/b&gt;的算法，其实是越不利的，因为尽管付出了巨大的搜索代价，最终用到的决策却很少很少。Minimax 可以说是一种极端的在线方案。&lt;/p&gt;&lt;p&gt;于是各种各样的优化，本质上都是进行某种&lt;b&gt;离线（offline）&lt;/b&gt;。这种离线的思想在于压缩搜索树中极大的信息冗余：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;alpha-beta 剪枝：利用 Minimax 中 MIN和MAX函数的单调性造成的冗余，从而进行剪枝&lt;/li&gt;&lt;li&gt;MCTS: 期望有限次数随机搜索的统计结论几乎总是和真实的 Minimax 值一致（这样也是说明遍历整个 Game Tree 是冗余的），从而减少遍历次数&lt;/li&gt;&lt;li&gt;估值函数：Minimax算法的执行过程充满冗余，能够被有限参数和步骤的函数或者经验所近似。&lt;/li&gt;&lt;li&gt;Null move pruning: “不走棋”操作往往是冗余的&lt;/li&gt;&lt;li&gt;Aspiration windows：上一步中Alpha-Beta剪枝得到的alpha-beta值构成的窗口往往能够复用，因而重新进行alpha-beta存在冗余性&lt;/li&gt;&lt;li&gt;Quiescence Search：（象棋中）简明的、消灭对方棋子并造成威胁的局面往往足够有利，可以优先探索；相比那种很多步都完全不吃子到处晃的情况可能是冗余。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;而神经网络作为一个强大的估值函数，可以认为其是&lt;b&gt;整个Game Tree上的Minimax数值的压缩表示&lt;/b&gt;。这点怎么理解呢？&lt;/p&gt;&lt;p&gt;我们不妨换个看法来看 Game Tree 各个节点的 Minimax 值：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-7380b4da9e590a88f2a328dd3a56b9b3_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1242\&quot; data-rawheight=\&quot;1068\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1242\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-7380b4da9e590a88f2a328dd3a56b9b3_r.jpg\&quot;&gt;&lt;figcaption&gt;我们可以把 Game Tree上的 Minimax 值以打表的形式表示&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;可以看到，Game Tree 上的 Minimax 值完全可以表示为一个“映射表”，即由局面状态映射到一个值。&lt;/p&gt;&lt;p&gt;可以从树上把节点“摘”下来打表并不是显然的，这是因为游戏室“完全状态”的，每个树上的节点都代表了所有的信息，所以它们的估值也是互相独立的。这很容易想象，因为无论你用什么方式下到当前局面，都不会因为之前的方式导致当前局面Minimax值不同；而之后的下法也不会影响Minimax值，如果你感觉下到后面似乎影响到了前面的“估值”，是因为你没有考虑到后面的某些情形造成偏差，而Minimax算法遍历了后面所有的情形，因此当前局面无论如何，Minimax值都不会改变。&lt;/p&gt;&lt;p&gt;很多游戏会对残局进行打表，就是这个原理。但是对整个游戏的 Minimax 值进行打表是不现实的，因为这个表和 Game Tree 的节点一样多，是整个宇宙的原子都可能无法存下的存在。但是所幸的是，这个表和树一样，有大量的冗余，比如：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-d3fc6e6a5fcff4dcf32cddecc148d480_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;882\&quot; data-rawheight=\&quot;520\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;882\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-d3fc6e6a5fcff4dcf32cddecc148d480_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;像上面的表，就可以很简单的由一个正比例函数表示，这是一个极端情况，&lt;b&gt;我们把数据量压缩到了0。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;现实情况没有那么简单，我们不能给更复杂的情形找出一个确定的函数打表，但是我们可以给函数一个参数，然后用它代表一个函数系：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-46447cb0ff29b0525c702a5fb3d16e22_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1100\&quot; data-rawheight=\&quot;558\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1100\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-46447cb0ff29b0525c702a5fb3d16e22_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;我们可以处理和上面同样的情形，但是我们同时可以处理所有的源和像成比例的表，代价是我们多了一个参数k，但是我们&lt;b&gt;仍然大幅压缩了数据&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;围棋找出这样一个函数来代替打表更加困难，但是我们可以提供更复杂的，带更多参数的函数，比如卷积神经网络，然后通过学习的方式找到参数的合适的值（后面会慢慢提）：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-0c076500027080fcaff99eaf26a4d22d_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1776\&quot; data-rawheight=\&quot;1120\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1776\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-0c076500027080fcaff99eaf26a4d22d_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;虽然神经网络具有巨量的参数，但是相比于围棋而言可以忽略不计。可以说&lt;b&gt;卷积神经网络通过学习大幅压缩了围棋搜索树中的冗余，同时保证了失真不是很严重&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;同时，神经网络得到任何局面的估值都是常数时间，这和搜索树是非常不同的。这让我想到了李飞飞的得意门生，现任特斯拉人工智能规划师 Andrej Karpathy 在 &lt;i&gt;Medium&lt;/i&gt; 上发的“软件 2.0”这篇blog。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-c850c17163472dcc309406ab89ea1878_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1466\&quot; data-rawheight=\&quot;1310\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1466\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-c850c17163472dcc309406ab89ea1878_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;Blog 中思考了神经网络等技术作为“第二代软件”等问题。神经网络这些算法最有意思的一点是其时间复杂度往往近似为常数（因为只是简单的函数求值），这和人的行为更加接近：人在很多认知问题上都是和输入无关的，时间近乎固定的处理，而不是像现今的大多数人工设计的算法具有显著的时间复杂度特性；人的直觉思维更像函数查表而不是跑算法。&lt;/p&gt;&lt;p&gt;当然“如何让神经网络学到正确的东西”是个很麻烦的事情，这里我们大多说了神经网络的好处，下面一篇中我们会看到更多乌云。&lt;/p&gt;&lt;h2&gt;下面一篇的内容&lt;/h2&gt;&lt;p&gt;由于发现内容多得超乎我的想象，我决定另起第二篇，这样我也可以尽早收到关于本篇的反馈，下面一篇会有更多尖锐的细节和理论，以及一些反思：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;如何迭代数据和神经网络？强化学习是什么？为什么 DeepMind 后来将 Policy Gradient 改为了 Policy Iteration?&lt;/li&gt;&lt;li&gt;在和李世石的比赛中，AlphaGo和李世石都下出了“神之一手”，李世石在第四局凭借他的“神之一手”击败了AlphaGo。那么这些“神之一手”背后的原因是什么？AlphaGo的bug又是什么？为什么后来 Master版本看不到类似的bug？我购买观看了今年 Greg Kohs 的斩获多项奖项和提名的纪录片《AlphaGo》，从背后我们可以推测出很多重要细节。&lt;/li&gt;&lt;li&gt;详细信息不多的 Master 版本采用了怎样的结构？&lt;/li&gt;&lt;li&gt;为什么AlphaZero版本甚至删去了通过比赛选择版本的策略？为什么神经网络在自我对抗训练中没有明显遇到“局部最优”（欠拟合）和“过拟合”的情形？从最近发布的AlphaGo Teach中我们能够推测出哪些重要细节？&lt;/li&gt;&lt;li&gt;为什么选择MCTS+CNN而不是Alpha-Beta剪枝+CNN？MCTS真的比Alpha-Beta剪枝有优势吗？&lt;/li&gt;&lt;li&gt;算法和先验知识：今年NIPS大会之争。NIPS大会上，DeepMind 公布了其围棋程序的最新迭代 AlphaZero。但是 Marcus 激烈地反对 AlphaZero 背后的 “零知识哲学”。又如何评价两方呢？&lt;/li&gt;&lt;li&gt;AlphaZero 和 Stockfish 的比赛“公平”么？如何理解算力差距带来的可能变化？&lt;/li&gt;&lt;li&gt;关于硬件：DeepMind使用的TPU是什么？TPUv1和v2有什么区别？&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;18/01/16 第二篇出来啦：&lt;a href=\&quot;https://zhuanlan.zhihu.com/p/32073374\&quot; class=\&quot;internal\&quot;&gt;浅述：从 Minimax 到 AlphaZero，完全信息博弈之路（2）&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&quot;,&quot;commentCount&quot;:19,&quot;imageUrl&quot;:&quot;https://pic4.zhimg.com/50/v2-e4a377248d6d02e8c11184c3808a63b4_hd.jpg&quot;,&quot;linkbox&quot;:{&quot;url&quot;:&quot;&quot;,&quot;category&quot;:&quot;&quot;,&quot;pic&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;},&quot;excerptNew&quot;:&quot;18/01/16 第二篇出来啦：浅述：从 Minimax 到 AlphaZero，完全信息博弈之路（2） 最近一次修订：17/12/15 19:08，根据@阿修比和@七彩极光夜的建议修改了部分事实陈述，在此表示感谢。 上次修订：17/12/15 14:35，改正了部分错别字和病句，修正了关于 Master 和…&quot;,&quot;excerptTitle&quot;:&quot;&quot;,&quot;previewText&quot;:&quot;&quot;,&quot;voting&quot;:0,&quot;type&quot;:&quot;article&quot;},&quot;32073374&quot;:{&quot;updated&quot;:1516085020,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;SIY.Z&quot;,&quot;headline&quot;:&quot;USTC CS&quot;,&quot;urlToken&quot;:&quot;siyz&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/ccd81296bb40c3d8738e399d380c9015&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/50/55a7d524465d743f084a26328a9759ae_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;ccd81296bb40c3d8738e399d380c9015&quot;},&quot;excerpt&quot;:&quot;此篇是 &lt;a href=\&quot;https://zhuanlan.zhihu.com/p/31809930\&quot; class=\&quot;internal\&quot;&gt;浅述：从 Minimax 到 AlphaZero，完全信息博弈之路（1）&lt;/a&gt;的续篇，为了连贯性我希望读者能够先阅读前篇。可以说前篇介绍的是一些“透明”的问题，其算法和思路都是非常清晰的。但是可惜的是，清晰简单的方式并不能解决实际问题，因为理论相对于实际问题总是过于简化。这一篇我们将更多的面对一些很“脏”的问题，这些问题有些因为没有公开因而需要我们猜测，有些本身就是个谜，但是这些问题是至关重要的，它们或许解释了&lt;b&gt;为…&lt;/b&gt;&quot;,&quot;id&quot;:32073374,&quot;voteupCount&quot;:43,&quot;upvotedFollowees&quot;:[],&quot;created&quot;:1516085020,&quot;url&quot;:&quot;https://api.zhihu.com/articles/32073374&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;title&quot;:&quot;浅述：从 Minimax 到 AlphaZero，完全信息博弈之路（2）&quot;,&quot;previewType&quot;:&quot;default&quot;,&quot;content&quot;:&quot;&lt;p&gt;此篇是 &lt;a href=\&quot;https://zhuanlan.zhihu.com/p/31809930\&quot; class=\&quot;internal\&quot;&gt;浅述：从 Minimax 到 AlphaZero，完全信息博弈之路（1）&lt;/a&gt;的续篇，为了连贯性我希望读者能够先阅读前篇。&lt;/p&gt;&lt;p&gt;可以说前篇介绍的是一些“透明”的问题，其算法和思路都是非常清晰的。但是可惜的是，清晰简单的方式并不能解决实际问题，因为理论相对于实际问题总是过于简化。这一篇我们将更多的面对一些很“脏”的问题，这些问题有些因为没有公开因而需要我们猜测，有些本身就是个谜，但是这些问题是至关重要的，它们或许解释了&lt;b&gt;为什么是 DeepMind 而不是其他团队率先做出优质的 AlphaGo，显然透明的问题对于大家是公平的，所以差距就在于那些“不透明”的地方&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;本章有较多的公式，这里先约定一下符号：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;首先，粗体符号代表向量，正常体表示常量或者参数。&lt;/li&gt;&lt;li&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=s\&quot; alt=\&quot;s\&quot; eeimg=\&quot;1\&quot;&gt; 代表状态（即当前盘面，并隐式包含规则对当前盘面的限制所需的必要信息，比如围棋先后手对贴目的影响等等）&lt;/li&gt;&lt;li&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=a\&quot; alt=\&quot;a\&quot; eeimg=\&quot;1\&quot;&gt; 代表动作，或者策略（即一步走法）&lt;/li&gt;&lt;li&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm%7B%5Cpi%7D\&quot; alt=\&quot;\\bm{\\pi}\&quot; eeimg=\&quot;1\&quot;&gt; 代表当前策略（即 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=a\&quot; alt=\&quot;a\&quot; eeimg=\&quot;1\&quot;&gt; ）的概率分布， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpi%28a%7Cs%29\&quot; alt=\&quot;\\pi(a|s)\&quot; eeimg=\&quot;1\&quot;&gt; 是条件概率函数（策略函数），即 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm%7B%5Cpi%7D%3D%5Cpi%28%5Ccdot%7Cs%29\&quot; alt=\&quot;\\bm{\\pi}=\\pi(\\cdot|s)\&quot; eeimg=\&quot;1\&quot;&gt; 。不引起混淆的情况下，它们又分别记作 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm%7Bp%7D\&quot; alt=\&quot;\\bm{p}\&quot; eeimg=\&quot;1\&quot;&gt; 和 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=P%28a%7Cs%29\&quot; alt=\&quot;P(a|s)\&quot; eeimg=\&quot;1\&quot;&gt; ，代表需要优化的对象（相对地 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm%7B%5Cpi%7D\&quot; alt=\&quot;\\bm{\\pi}\&quot; eeimg=\&quot;1\&quot;&gt; 就是优化的目标）。&lt;/li&gt;&lt;li&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=v\&quot; alt=\&quot;v\&quot; eeimg=\&quot;1\&quot;&gt; 代表当前局面的价值（Minimax值）， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=Z\&quot; alt=\&quot;Z\&quot; eeimg=\&quot;1\&quot;&gt; 为估值函数，即 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=v%3DZ%28s%29\&quot; alt=\&quot;v=Z(s)\&quot; eeimg=\&quot;1\&quot;&gt; 。不引起混淆的情况下，我们又用 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=z\&quot; alt=\&quot;z\&quot; eeimg=\&quot;1\&quot;&gt; 表示优化的目标。&lt;/li&gt;&lt;li&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=r\&quot; alt=\&quot;r\&quot; eeimg=\&quot;1\&quot;&gt; 代表“奖励”， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=R%28a%7Cs%29\&quot; alt=\&quot;R(a|s)\&quot; eeimg=\&quot;1\&quot;&gt; 表示某个局面下采取某个动作获得的奖励。&lt;/li&gt;&lt;li&gt;我们用 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=f\&quot; alt=\&quot;f\&quot; eeimg=\&quot;1\&quot;&gt; 代指神经网络， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Ctheta\&quot; alt=\&quot;\\theta\&quot; eeimg=\&quot;1\&quot;&gt; 代指其参数，且 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=f%3DP%2CZ\&quot; alt=\&quot;f=P,Z\&quot; eeimg=\&quot;1\&quot;&gt; ，即 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm%7Bp%7D%2Cv%3Df%28s%29\&quot; alt=\&quot;\\bm{p},v=f(s)\&quot; eeimg=\&quot;1\&quot;&gt; 。&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;注：上面的符号基本遵循论文中常用的约定。 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=a\&quot; alt=\&quot;a\&quot; eeimg=\&quot;1\&quot;&gt; 来自于 &lt;i&gt;action&lt;/i&gt; 的首字母， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpi\&quot; alt=\&quot;\\pi\&quot; eeimg=\&quot;1\&quot;&gt; 的辅音发音类似 policy， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=v\&quot; alt=\&quot;v\&quot; eeimg=\&quot;1\&quot;&gt; 是 value 的首字母， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=r\&quot; alt=\&quot;r\&quot; eeimg=\&quot;1\&quot;&gt; 是 reward 的首字母。&lt;/blockquote&gt;&lt;p&gt;然后约定一些常见的名词（大多在上面一篇提过）：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;策略网络，policy network&lt;/li&gt;&lt;li&gt;价值网络，value network&lt;/li&gt;&lt;li&gt;探索，exploration&lt;/li&gt;&lt;li&gt;利用，exploitation&lt;/li&gt;&lt;li&gt;增强学习，reinforcement learning&lt;/li&gt;&lt;li&gt;策略梯度，policy iteration&lt;/li&gt;&lt;li&gt;策略下降，policy gradient&lt;/li&gt;&lt;li&gt;损失，loss&lt;/li&gt;&lt;li&gt;蒙特卡洛树搜索，MCTS&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;回顾：优化估值函数&lt;/h2&gt;&lt;p&gt;在上一篇中我们提到了，可以使用均方误差作为损失函数，来优化估值函数 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=Z_%5Ctheta\&quot; alt=\&quot;Z_\\theta\&quot; eeimg=\&quot;1\&quot;&gt; ：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmin_%5Ctheta%7B%5Cmathbb%7BE%7D%28z-v%29%5E2%7D\&quot; alt=\&quot;\\min_\\theta{\\mathbb{E}(z-v)^2}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;其中 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=z\&quot; alt=\&quot;z\&quot; eeimg=\&quot;1\&quot;&gt; 是优化目标， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=v%3DZ_%5Ctheta%28s%29\&quot; alt=\&quot;v=Z_\\theta(s)\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;但是 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=z\&quot; alt=\&quot;z\&quot; eeimg=\&quot;1\&quot;&gt; 如何来呢？我们记一场比赛中的比赛结果 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=r_T\&quot; alt=\&quot;r_T\&quot; eeimg=\&quot;1\&quot;&gt; （胜，平，负）分别为 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%7B%2B1%2C0%2C-1%7D\&quot; alt=\&quot;{+1,0,-1}\&quot; eeimg=\&quot;1\&quot;&gt; ，并使得在整场比赛的局面中， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=z%3Dr_T\&quot; alt=\&quot;z=r_T\&quot; eeimg=\&quot;1\&quot;&gt; 。&lt;/p&gt;&lt;p&gt;在 AlphaGo 刚开始训练时，显然 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=r_T\&quot; alt=\&quot;r_T\&quot; eeimg=\&quot;1\&quot;&gt; 难以代表真实的估值 (因为几乎在乱下棋)。但是随着其不断地增强， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=r_T\&quot; alt=\&quot;r_T\&quot; eeimg=\&quot;1\&quot;&gt; 渐渐地接近正确的估值。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;如何改进策略函数：两种不同的反馈&lt;/h2&gt;&lt;p&gt;之前我们一直在谈估值函数的优化。现在我们开始涉及策略函数的优化。在上一篇中我们提到，策略函数用以提供MCTS中的先验概率分布 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm+p+\&quot; alt=\&quot;\\bm p \&quot; eeimg=\&quot;1\&quot;&gt; ，以指导其优先探索合理的分支。&lt;/p&gt;&lt;p&gt;如何优化策略函数呢？假设我们是一个学生，我们提供的“策略”是我们的一次作业，“场景”是固定的（也就是这里不妨让状态 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=s\&quot; alt=\&quot;s\&quot; eeimg=\&quot;1\&quot;&gt; 固定），而我们得到了两种不同的反馈：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;我们得到了一个关于最终答案的评分，视为一个奖励 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=r\&quot; alt=\&quot;r\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/li&gt;&lt;li&gt;我们得到了思路和参考答案，视为一个标准策略 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm%5Cpi\&quot; alt=\&quot;\\bm\\pi\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;相应的在完全信息博弈中，这两种反馈分布是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;游戏最终的胜负得分 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=z\&quot; alt=\&quot;z\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/li&gt;&lt;li&gt;某一次比赛中选择的策略 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm%5Cpi\&quot; alt=\&quot;\\bm\\pi\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;而两种不同的反馈，也决定了两种不同的目标：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;使得期望奖励最大&lt;/li&gt;&lt;li&gt;使得和标准策略最为接近&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;对于第 1 种，目标为 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmax_%7B%5Ctheta%7D+E_%7Ba%7Cs%7D%5BR%28a%7Cs%29%5D\&quot; alt=\&quot;\\max_{\\theta} E_{a|s}[R(a|s)]\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;我们可以通过求解梯度然后梯度下降解决（使用所谓log-trick推导）：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbegin%7Balign%7D+%5Cnabla_%7B%5Ctheta%7D+E_%7Ba%7Cs%7D%5BR%28a%7Cs%29%5D+%26%3D+%5Cnabla_%7B%5Ctheta%7D+%5Csum_%7Ba%7Cs%7D+P%28a%7Cs%29+R%28a%7Cs%29+%26+%5Ctext%7Bdefinition+of+expectation%7D+%5C%5C+%26+%3D+%5Csum_%7Ba%7Cs%7D+%5Cnabla_%7B%5Ctheta%7D+P%28a%7Cs%29+R%28a%7Cs%29+%26+%5Ctext%7Bswap+sum+and+gradient%7D+%5C%5C+%26+%3D+%5Csum_%7Ba%7Cs%7D+P%28a%7Cs%29+%5Cfrac%7B%5Cnabla_%7B%5Ctheta%7DP%28a%7Cs%29%7D%7BP%28a%7Cs%29%7D+R%28a%7Cs%29+%26+%5Ctext%7Bboth+multiply+and+divide+by+%7D+P%28a%7Cs%29+%5C%5C+%26+%3D+%5Csum_%7Ba%7Cs%7D+P%28a%7Cs%29+%5Cnabla_%7B%5Ctheta%7D+%5Clog+P%28a%7Cs%29+R%28a%7Cs%29+%26+%5Ctext%7Buse+the+fact+that+%7D+%5Cnabla_%7B%5Ctheta%7D+%5Clog%28x%29+%3D+%5Cfrac%7B1%7D%7Bx%7D+%5Cnabla_%7B%5Ctheta%7D+x+%5C%5C+%26+%3D+E_%7Ba%7Cs%7D%5BR%28a%7Cs%29+%5Cnabla_%7B%5Ctheta%7D+%5Clog+P%28a%7Cs%29+%5D+%26+%5Ctext%7Bdefinition+of+expectation%7D%5C%5C+%26+%3D+%5Cmathbb+E%5Bz%5Cnabla_%7B%5Ctheta%7D+%5Clog+P%28a%7Cs%29%5D+%26+%5Ctext%7Blet%7D%5C+R%28a%7Cs%29%3Dz%3Dr_T+%5Cend%7Balign%7D+\&quot; alt=\&quot;\\begin{align} \\nabla_{\\theta} E_{a|s}[R(a|s)] &amp;amp;= \\nabla_{\\theta} \\sum_{a|s} P(a|s) R(a|s) &amp;amp; \\text{definition of expectation} \\\\ &amp;amp; = \\sum_{a|s} \\nabla_{\\theta} P(a|s) R(a|s) &amp;amp; \\text{swap sum and gradient} \\\\ &amp;amp; = \\sum_{a|s} P(a|s) \\frac{\\nabla_{\\theta}P(a|s)}{P(a|s)} R(a|s) &amp;amp; \\text{both multiply and divide by } P(a|s) \\\\ &amp;amp; = \\sum_{a|s} P(a|s) \\nabla_{\\theta} \\log P(a|s) R(a|s) &amp;amp; \\text{use the fact that } \\nabla_{\\theta} \\log(x) = \\frac{1}{x} \\nabla_{\\theta} x \\\\ &amp;amp; = E_{a|s}[R(a|s) \\nabla_{\\theta} \\log P(a|s) ] &amp;amp; \\text{definition of expectation}\\\\ &amp;amp; = \\mathbb E[z\\nabla_{\\theta} \\log P(a|s)] &amp;amp; \\text{let}\\ R(a|s)=z=r_T \\end{align} \&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;对于第二种，我们使用交叉熵表示，目标为 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmax_%5Ctheta+%5Cbm%5Cpi%5E%5Cmathsf%7BT%7D%5Clog%5Cbm%7Bp%7D\&quot; alt=\&quot;\\max_\\theta \\bm\\pi^\\mathsf{T}\\log\\bm{p}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;同样地，我们可以求解梯度：&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbegin%7Balign%7D+%5Cnabla_%7B%5Ctheta%7D+%5Cbm%5Cpi%5E%5Cmathsf%7BT%7D%5Clog%5Cbm%7Bp%7D+%26%3D+%5Cbm%5Cpi%5E%5Cmathsf%7BT%7D%5Cnabla_%7B%5Ctheta%7D+%5Clog%5Cbm%7Bp%7D+%5Cend%7Balign%7D+\&quot; alt=\&quot;\\begin{align} \\nabla_{\\theta} \\bm\\pi^\\mathsf{T}\\log\\bm{p} &amp;amp;= \\bm\\pi^\\mathsf{T}\\nabla_{\\theta} \\log\\bm{p} \\end{align} \&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;敏感的读者可以感到两者的相似之处，我们不妨改写成这样以便比较：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cnabla_%7B%5Ctheta%7D+E_%7Ba%7Cs%7D%5BR%28a%7Cs%29%5D+%3D+%5Csum_%7Ba%7Cs%7D+P%28a%7Cs%29R%28a%7Cs%29+%5Cnabla_%7B%5Ctheta%7D+%5Clog+P%28a%7Cs%29+%3D+%5Csum+pr+%5Cnabla+%5Clog+p\&quot; alt=\&quot;\\nabla_{\\theta} E_{a|s}[R(a|s)] = \\sum_{a|s} P(a|s)R(a|s) \\nabla_{\\theta} \\log P(a|s) = \\sum pr \\nabla \\log p\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cnabla_%7B%5Ctheta%7D+%5Cbm%5Cpi%5E%5Cmathsf%7BT%7D%5Clog%5Cbm%7Bp%7D+%3D%5Csum_%7Ba%7Cs%7D+%5Cpi%28a%7Cs%29%5Cnabla_%7B%5Ctheta%7D%5Clog+P%28a%7Cs%29%3D%5Csum+%5Cpi%5Cnabla%5Clog+p\&quot; alt=\&quot;\\nabla_{\\theta} \\bm\\pi^\\mathsf{T}\\log\\bm{p} =\\sum_{a|s} \\pi(a|s)\\nabla_{\\theta}\\log P(a|s)=\\sum \\pi\\nabla\\log p\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;可以看到它们的形式是非常类似的，这种形式的意义是什么？&lt;/p&gt;&lt;p&gt;稍有基础的同学可以知道， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Clog+p\&quot; alt=\&quot;\\log p\&quot; eeimg=\&quot;1\&quot;&gt; 这种形式一般用在求极大似然（maximum-likelihood），而这些形式就是一个加权的极大似然。特别的，如果权重也是一个概率分布，那么它等价于信息论中的&lt;b&gt;交叉熵&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;这些“权重”正是一个&lt;b&gt;信号&lt;/b&gt;，告诉我们优化的方向。两种不同的反馈，带来了两种不同的“信号”：如果反馈是奖励 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=r\&quot; alt=\&quot;r\&quot; eeimg=\&quot;1\&quot;&gt; ，那么信号是奖励 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=r\&quot; alt=\&quot;r\&quot; eeimg=\&quot;1\&quot;&gt; 和当期选择的概率的乘积 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=pr\&quot; alt=\&quot;pr\&quot; eeimg=\&quot;1\&quot;&gt; ；如果反馈是标准策略，那么信号就是这个策略本身。&lt;/p&gt;&lt;p&gt;这两种不同的反馈带来的不同的更新方式，如果用在自我对抗上，就成为了两种不同的增强学习方法：前者是 Policy Gradient (策略梯度)，后者是 Policy Iteration (策略迭代)。&lt;/p&gt;&lt;p&gt;AlphaGo-Fan 和 AlphaGo-Lee 使用了 Policy Gradient，而后面的版本使用了 Policy Iteration。这是为什么呢？&lt;/p&gt;&lt;p&gt;在回答这个问题之前，我们先复习一下强化学习相关的知识。&lt;/p&gt;&lt;h2&gt;强化学习（reinforcement learning）&lt;/h2&gt;&lt;p&gt;大多数人，特别是才接触这一块的，会觉得在完全信息博弈中，强化学习就是“自我对抗”。这当然无可厚非。这里我们也可以从数学上用另外一个角度看待这个过程。&lt;/p&gt;&lt;p&gt;以目标 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmax_%7B%5Ctheta%7D+E_%7Ba%7Cs%7D%5BR%28a%7Cs%29%5D\&quot; alt=\&quot;\\max_{\\theta} E_{a|s}[R(a|s)]\&quot; eeimg=\&quot;1\&quot;&gt; 为例，之前我们为了方便讨论固定了 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=s\&quot; alt=\&quot;s\&quot; eeimg=\&quot;1\&quot;&gt; ；考虑到不同的 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=s\&quot; alt=\&quot;s\&quot; eeimg=\&quot;1\&quot;&gt; ，其完整表示应加上 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=s\&quot; alt=\&quot;s\&quot; eeimg=\&quot;1\&quot;&gt; 的期望，即为 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmax_%7B%5Ctheta%7DE_s+E_%7Ba%7Cs%7D%5BR%28a%7Cs%29%5D\&quot; alt=\&quot;\\max_{\\theta}E_s E_{a|s}[R(a|s)]\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;按照传统的有监督学习的方法，我们需要均匀的采样训练，其经验损失为：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=-%7B1%5Cover+M%7D%5Csum_%7Bs%5Csim+S%7D%7B1%5Cover+N%7D+%5Csum_%7Ba%7Cs%5Csim+A%7Cs%7D%5BR%28a%7Cs%29%5D\&quot; alt=\&quot;-{1\\over M}\\sum_{s\\sim S}{1\\over N} \\sum_{a|s\\sim A|s}[R(a|s)]\&quot; eeimg=\&quot;1\&quot;&gt; ，这里S和A分别为可行状态和动作的集合。&lt;/p&gt;&lt;p&gt;但是上面的式子要求样本已经存在时，才能显式地写出。于是我们只能“走一步看一步”：先通过自我对战产生数据，然后再用对战产生的数据进行更新训练，如此反复。也就是：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-6a5d28e31cfdeacfe0a257c37dbfd8bc_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1582\&quot; data-rawheight=\&quot;290\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1582\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-6a5d28e31cfdeacfe0a257c37dbfd8bc_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;但是这并没有解决问题：如何从这个过程中得到提高？如果我们不能通过某种方法不断提高策略，那么只是&lt;b&gt;毫无意义地模仿自己&lt;/b&gt;罢了。所以对于强化学习，其核心的问题是找到一条不断提高的轨迹：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-39f303cec0182cf81bbb39df6958ca93_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1410\&quot; data-rawheight=\&quot;932\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1410\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-39f303cec0182cf81bbb39df6958ca93_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;h2&gt;Policy Gradient 和 Policy Iteration&lt;/h2&gt;&lt;p&gt;对策略的提高存在于哪些方面呢？首先一点是 MCTS （上一篇我们重点提到的蒙特卡洛树搜索）：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-9caeb70f1d5343957586b33d24974907_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;784\&quot; data-rawheight=\&quot;798\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;784\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-9caeb70f1d5343957586b33d24974907_r.jpg\&quot;&gt;&lt;figcaption&gt;相对于裸的网络（最左侧），加上MCTS后，AlphaGo 的 Elo 直接增加了2000多点，这至少相当于职业级中20段的差距（如果职业选手有这么多段）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;从图中可以看出，相对于没有 MCTS 的“裸网络”，拥有MCTS的AlphaGo战力有了巨大的提升，从职业1段左右直接提升到了高于 AlphaGo-Master 的水平。这就是 policy iteration 的工作原理：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-eb3fe82a0d5880f53f7d0c253cd98df4_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1596\&quot; data-rawheight=\&quot;380\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1596\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-eb3fe82a0d5880f53f7d0c253cd98df4_r.jpg\&quot;&gt;&lt;figcaption&gt;在 Policy Iteration 中，策略网络生成原始的策略，之后借由MCTS得到最终的提高后的策略。而每次训练策略网络时，我们的样本就是上一轮的提高的策略，由此策略网络有所提高。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;或者形象地用下图表示：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-a332ffcccd0d13fd4dcd2d4b031c808b_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1334\&quot; data-rawheight=\&quot;912\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1334\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-a332ffcccd0d13fd4dcd2d4b031c808b_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;而我们在上节说过，policy gradient 使用奖励 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=r\&quot; alt=\&quot;r\&quot; eeimg=\&quot;1\&quot;&gt; 作为反馈，这其实也是一种提高的方式；而因为动作 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=a\&quot; alt=\&quot;a\&quot; eeimg=\&quot;1\&quot;&gt; 又是通过MCTS搜索得出的，所以实际上 policy gradient 有两种提高方式：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-857be468979db9dc362c39de9c6683e7_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1906\&quot; data-rawheight=\&quot;486\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1906\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-857be468979db9dc362c39de9c6683e7_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;看似 policy gradient 有更多提升方式，因而应当好于 policy iteration。但是这是不正确的。这是因为 MCTS 的提升效果并不能和奖励信号的提升简单相加。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-478283c9d905bffa40a44394aa1bf0b0_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1826\&quot; data-rawheight=\&quot;680\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1826\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-478283c9d905bffa40a44394aa1bf0b0_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;奖励信号的提升在于，&lt;b&gt;肯定赢家的行为，否定输家的行为；&lt;/b&gt;而且在这个算法中，我们只有全盘肯定和全盘否定两个选项。但是问题是，现在是 AlphaGo &lt;b&gt;自战&lt;/b&gt;，输赢双方的能力是相同的，因此全盘否定输掉的一方的行为显然不是完全正确的（输不代表能力弱）。&lt;/p&gt;&lt;p&gt;正如吴清源和本因坊秀哉的“三三、星、天元”那盘棋一样，吴清源之输并不代表他下的每一步都是坏棋。&lt;/p&gt;&lt;p&gt;因此实际情况中，单单 MCTS 的提升要好于奖励回馈。另外奖励回馈存在的一个困难是，平局的处理。按照奖励函数的思想，平局获得的合理的奖励应当是0，这样平局就不会带来提升，这对容易造成平局的国际象棋等来说并不利，这也是 AlphaZero 中继续使用 policy iteration 的原因。&lt;/p&gt;&lt;p&gt;此外，奖励回馈带来的另外一个问题是，反馈的稀疏性：奖励回馈仅仅能够对“最终下出的一步”进行反馈（也就是一个“点”），这从公式可以看出：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmax_%7B%5Ctheta%7D+E_%7Ba%7Cs%7D%5BR%28a%7Cs%29%5D\&quot; alt=\&quot;\\max_{\\theta} E_{a|s}[R(a|s)]\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;而 policy iteration 可以对整个策略分布（是一个“向量”）进行反馈：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmax_%5Ctheta+%5Cbm%5Cpi%5E%5Cmathsf%7BT%7D%5Clog%5Cbm%7Bp%7D\&quot; alt=\&quot;\\max_\\theta \\bm\\pi^\\mathsf{T}\\log\\bm{p}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;显然整个策略分布相比一个具体的策略，拥有更多的反馈信息。并且下面我们可以看到，DeepMind团队利用这一点来阻止进入局部最优。&lt;/p&gt;&lt;p&gt;既然如此，那么为什么 DeepMind 团队一开始会选择 Policy Gradient 呢？这很大程度上是因为延续他们之前训练机器玩 Atari 的时候的经验。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-29b2103f7dd345cc7008aedb31026a0b_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1890\&quot; data-rawheight=\&quot;418\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1890\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-29b2103f7dd345cc7008aedb31026a0b_r.jpg\&quot;&gt;&lt;figcaption&gt;玩Atari时唯一的增强信号来自于奖励&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;玩 Atari 游戏和下围棋非常不同的一点在于，其没有类似 MCTS 这种非常强效的增强手段，也不存在自我对抗这种场景，因此奖励信号是唯一可以利用提升的手段。而 DeepMind 研究围棋的很大动机来自于 Atari 上的成功，因为 Atari 第一次向大家展现了无需任何人类的经验，机器也能学会玩复杂游戏，这点在 DeepMind 的 AlphaGo-Zero 和 AlphaZero 上得到了彻底贯彻。所以 DeepMind 在刚入手围棋的时候，很明显借鉴了 Atari 上的经验，将其变成了一很“正规”的依赖奖励信号的增强学习问题。在后来的版本中 DeepMind 意识到了这些问题并加以改进，棋力才有了质的提高。&lt;/p&gt;&lt;h2&gt;联合优化策略网络和价值网络&lt;/h2&gt;&lt;p&gt;由于 AlphaGo-Lee 之后策略网络和价值网络以共享权值的方式存在，所以在更新的时候也可以联合更新，共同提升网络结果。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-2235ad5748759379ee3d88c416c589d7_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2070\&quot; data-rawheight=\&quot;1550\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2070\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-2235ad5748759379ee3d88c416c589d7_r.jpg\&quot;&gt;&lt;figcaption&gt;AlphaGo-Lee 之后版本的更新流程(原创图片)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;最简单的联合更新模式就是将 policy 和 value的loss直接相加：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=loss%3D%28z-v%29%5E2-%5Cbm%5Cpi%5E%5Cmathsf%7BT%7D%5Clog%7B%5Cbm+p%7D\&quot; alt=\&quot;loss=(z-v)^2-\\bm\\pi^\\mathsf{T}\\log{\\bm p}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;这就是 AlphaGo-Zero自战时使用的 loss 的基本形式。&lt;/p&gt;&lt;p&gt;但是非常有趣的一点是，AlphaGo-Zero 用人类数据训练时，用的loss是：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=loss%3D0.01%28z-v%29%5E2-%5Cbm%5Cpi%5E%5Cmathsf%7BT%7D%5Clog%7B%5Cbm+p%7D\&quot; alt=\&quot;loss=0.01(z-v)^2-\\bm\\pi^\\mathsf{T}\\log{\\bm p}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;也就是&lt;b&gt;使用人类数据时，“价值”需要贬值对待&lt;/b&gt;。这并不是 DeepMind 从 AlphaGo-Zero 才开始注意到的，从 AlphaGo-Fan 开始就使用了类似的方式：在 AlphaGo-Fan 中从人类数据学习的仅仅是 policy network，而 value network 是通过后面自战更新的，这其实已经说明 DeepMind 注意到人类的棋局结果并不是特别适合用来估值。这点仔细一想确实对的：很多人类的棋局都是因为中间偶然的失误导致了全盘覆灭（所谓“一着不慎满盘皆输”），其中的偶然性非常大，盘面的估值瞬息万变，所以棋局的结果离理想的估值差距较大。所以不如让 AlphaGo 培养自己的“感觉”，自己的“大局观”，而不是轻易被人类棋局的胜负所左右。&lt;/p&gt;&lt;h2&gt;AlphaGo 的“五路尖”与李世石的“神之一手”&lt;/h2&gt;&lt;p&gt;AlphaGo 第二盘 37 手的五路尖冲，与李世石第四盘 78 “神之一手”，都是棋局中的点睛之笔。从最新的 《AlphaGo》纪录片中，我们可以看到 DeepMind 团队两次分析实战数据的结果都是“人类棋手几乎不会下的一手”，“人类棋手下这步棋的概率不到万分之一”。&lt;/p&gt;&lt;p&gt;其实 DeepMind 所谓的 “人类棋手” 参考的是 AlphaGo 的 Policy network 产生的先验分布 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm+p\&quot; alt=\&quot;\\bm p\&quot; eeimg=\&quot;1\&quot;&gt; ，这是因为 AlphaGo-Lee 的 Policy network 最初的训练数据来自人类。但是从原论文来看，Policy network 在人类数据集上的训练准确率也只达到59%，所以只是人类棋手下棋概率的近似。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-a69fe6940bc79d9e525d7ddc81bf0281_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1434\&quot; data-rawheight=\&quot;724\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1434\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-a69fe6940bc79d9e525d7ddc81bf0281_r.jpg\&quot;&gt;&lt;figcaption&gt;AlphaGo-Lee的Policy network只是人类棋手的近似&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;所以至今我们也不清楚 Policy network 认为李世石78手的概率小于万分之一是因为确实这一步完全出乎人们的意料（万分之一的概率如果对人类为真，几乎意味着除了李世石以外没有一个人类高段职业棋手能想到这一步），还是 AlphaGo 自身的疏失。&lt;/p&gt;&lt;p&gt;后来 DeepMind 团队更详细的分析指出直接问题是 AlphaGo-Lee 对死活问题的把握有问题。有趣的是，根据纪录片，DeepMind在出发前通过和樊麾的大量内部对战，已经发现了这个问题，只是当时已经来不及解决了，他们心里还是很虚的（比赛出发前几天才搞好了v18版本）。终于第四局李世石发现了这个bug。&lt;/p&gt;&lt;p&gt;这给DeepMind团队另外的一个启示是：一些特殊情况下，如果抓住这万分之一，就能下出传奇（五路尖）；如果失去了这万分之一，就可能一败涂地（李世石“神之一手”）。&lt;/p&gt;&lt;p&gt;那么该如何防止忽视这万分之一？究其本质，这种问题是&lt;b&gt;探索和利用（exploration&amp;amp;exploitation）的天平太偏向利用（忽视小概率的走法）导致的&lt;/b&gt;，所以解决方案是加强探索。&lt;/p&gt;&lt;h2&gt;如何增强探索（1）：加入噪声&lt;/h2&gt;&lt;p&gt;DeepMind 团队使用了一个非常简单粗暴的方式来加强探索：每次搜索时在MCTS搜索树的根节点加噪声（也就是给下一步的策略 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm+p\&quot; alt=\&quot;\\bm p\&quot; eeimg=\&quot;1\&quot;&gt; 加噪声），以基本保证 AlphaGo 至少把下一步棋的每一种可能都试一试。&lt;/p&gt;&lt;p&gt;加入的噪声是特别的，是满足 Dirichlet 分布 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Crm%7BDir%7D%28%5Cbm%5Calpha%29\&quot; alt=\&quot;\\rm{Dir}(\\bm\\alpha)\&quot; eeimg=\&quot;1\&quot;&gt; 的一个向量，其中参数 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm%5Calpha\&quot; alt=\&quot;\\bm\\alpha\&quot; eeimg=\&quot;1\&quot;&gt; 也是一个向量，其每个元素代表了生成的分布的对应元素的性质。&lt;/p&gt;&lt;p&gt;Dirichlet 分布的性质可以由 Pólya 瓮模型刻画：一个瓮中有一些不同颜色的球，每个球的数量对应了参数不同元素的数值，然后重复下面的操作：从瓮中随机取一个球，如果其颜色为 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Calpha_i\&quot; alt=\&quot;\\alpha_i\&quot; eeimg=\&quot;1\&quot;&gt; ，则连同拿出的球再往里面放一个球。操作次数趋向无穷时，瓮里面的不同颜色球数量的归一化分布就是一个采样自 Dirichlet 分布 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Crm%7BDir%7D%28%5Cbm%5Calpha%29\&quot; alt=\&quot;\\rm{Dir}(\\bm\\alpha)\&quot; eeimg=\&quot;1\&quot;&gt;的向量。我们将参数从自然数域向非负实数域延拓（比如将组合数中的阶乘换成 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5CGamma\&quot; alt=\&quot;\\Gamma\&quot; eeimg=\&quot;1\&quot;&gt; 函数），就得到了一般的 Dirichlet 分布函数。&lt;/p&gt;&lt;p&gt;在 AlphaGo 中，对于每一种可能的走法，其 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Calpha_i\&quot; alt=\&quot;\\alpha_i\&quot; eeimg=\&quot;1\&quot;&gt; 均为 0.03：实际上在分布生成的随机向量中， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmathbb+E%5BX_i%5D%3D%5Cfrac%7Ba_i%7D%7B%5Csum_j%7B%5Calpha_j%7D%7D\&quot; alt=\&quot;\\mathbb E[X_i]=\\frac{a_i}{\\sum_j{\\alpha_j}}\&quot; eeimg=\&quot;1\&quot;&gt; ，由于下棋时我们不知道哪个走法更好，所以就让随机向量中每个元素的值得期望相同。在 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Calpha_i\&quot; alt=\&quot;\\alpha_i\&quot; eeimg=\&quot;1\&quot;&gt; 相同时，随机变量每个元素的方差是 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Ctext%7BVar%7D+%5BX_i%5D%3D+%5Cfrac+%7Bn+-+1%7D+%7B+n%5E2+%28n%5Calpha+%2B+1%29%7D\&quot; alt=\&quot;\\text{Var} [X_i]= \\frac {n - 1} { n^2 (n\\alpha + 1)}\&quot; eeimg=\&quot;1\&quot;&gt; (其中n是随机向量元素个数，对于围棋是 362)，由此可见方差近乎和 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Calpha\&quot; alt=\&quot;\\alpha\&quot; eeimg=\&quot;1\&quot;&gt; 成反比。&lt;/p&gt;&lt;p&gt;所以 AlphaGo 每次开始搜索时（仅仅在MCTS的根节点使用一次），需要从 Dirichlet 分布中采样： &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm%5Ceta%5Csim+%5Ctext%7BDir%7D%28%5B%5Calpha%5D%2A362%29\&quot; alt=\&quot;\\bm\\eta\\sim \\text{Dir}([\\alpha]*362)\&quot; eeimg=\&quot;1\&quot;&gt; ，然后通过混入因子 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cvarepsilon\&quot; alt=\&quot;\\varepsilon\&quot; eeimg=\&quot;1\&quot;&gt; 掺入到 Policy network 产生的先验分布中： &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm+p%27%3D%281-%5Cvarepsilon%29%5Cbm+p%2B%5Cvarepsilon%5Cbm%5Ceta\&quot; alt=\&quot;\\bm p&#x27;=(1-\\varepsilon)\\bm p+\\varepsilon\\bm\\eta\&quot; eeimg=\&quot;1\&quot;&gt; 。超参数 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Calpha%3D0.03%EF%BC%8C%5Cvarepsilon%3D0.25\&quot; alt=\&quot;\\alpha=0.03，\\varepsilon=0.25\&quot; eeimg=\&quot;1\&quot;&gt; 。&lt;/p&gt;&lt;h2&gt;如何增强探索（2）：加入退火机制&lt;/h2&gt;&lt;p&gt;上一篇文章我们说过，MCTS的关键点就在于使用采样，使得某个动作的“期望利用价值”与采取这个动作（即走动作对应的路径）的次数正相关。&lt;/p&gt;&lt;p&gt;但是问题在于如何将次数N和最终选择的动作关联起来？在 AlphaGo-Lee 和 Fan 中，DeepMind 直接选择次数N最多的动作，作为最终策略 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpi\&quot; alt=\&quot;\\pi\&quot; eeimg=\&quot;1\&quot;&gt; （也就是最终策略分布其实是one-hot的）；而 AlphaGo-Zero 后使用了 Policy iteration, policy 部分的损失是 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=+-%5Cbm%5Cpi%5E%5Cmathsf%7BT%7D%5Clog%5Cbm%7Bp%7D\&quot; alt=\&quot; -\\bm\\pi^\\mathsf{T}\\log\\bm{p}\&quot; eeimg=\&quot;1\&quot;&gt; ，如果 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cbm%5Cpi\&quot; alt=\&quot;\\bm\\pi\&quot; eeimg=\&quot;1\&quot;&gt; 是one-hot的那就太无聊了，完全没有利用上向量的其他分量，所以我们需要一种“不太贪心”的手段。&lt;/p&gt;&lt;p&gt;DeepMind的方式是被称为“退火”的方式：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cpi%28a%7Cs_0%29%3D%7B%7BN%28s_0%2Ca%29%5E%7B1%2F%5Ctau%7D%7D%5Cover+%7B%5Csum_b%7B+N%28s_0%2Cb%29%5E%7B1%2F%5Ctau%7D%7D%7D%7D\&quot; alt=\&quot;\\pi(a|s_0)={{N(s_0,a)^{1/\\tau}}\\over {\\sum_b{ N(s_0,b)^{1/\\tau}}}}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;这个公式是热力学玻尔兹曼（Boltzmann）分布的一种变形：&lt;/p&gt;&lt;p&gt;&lt;img src=\&quot;http://www.zhihu.com/equation?tex=P%28a%7Cs_0%29%3D+%7B%7Be%5E%7B%7B+%5Ceta%28s_0%2Ca%29+%7D%5Cover%7BkT+%7D+%7D+%7D+%5Cover+%7B%5Csum_b+%7Be%5E%7B%7B%5Ceta%28s_0%2Cb%29+%7D%5Cover%7B+kT+%7D+%7D+%7D+%7D%7D\&quot; alt=\&quot;P(a|s_0)= {{e^{{ \\eta(s_0,a) }\\over{kT } } } \\over {\\sum_b {e^{{\\eta(s_0,b) }\\over{ kT } } } }}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/p&gt;&lt;p&gt;只要把 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=N%28s_0%2Ca%29%5Crightarrow+e%5E%7B%5Ceta%28s_0%2Ca%29%7D%2C%5Ctau%5Crightarrow+kT\&quot; alt=\&quot;N(s_0,a)\\rightarrow e^{\\eta(s_0,a)},\\tau\\rightarrow kT\&quot; eeimg=\&quot;1\&quot;&gt; 它们的形式就是一样的，由于在玻尔兹曼分布中 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=T\&quot; alt=\&quot;T\&quot; eeimg=\&quot;1\&quot;&gt; 是体系温度，所以 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Ctau\&quot; alt=\&quot;\\tau\&quot; eeimg=\&quot;1\&quot;&gt; 这里也称为温度。&lt;/p&gt;&lt;p&gt;温度较高的时候，分布更加“均匀”；温度降低的时候，分布更加“尖锐”。&lt;/p&gt;&lt;p&gt;AlphaGo 自我对抗的前30步时，会使得 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Ctau%3D1\&quot; alt=\&quot;\\tau=1\&quot; eeimg=\&quot;1\&quot;&gt; ,这样一来AlphaGo Zero在开局阶段变化会相对较多；而之后 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Ctau%5Crightarrow0\&quot; alt=\&quot;\\tau\\rightarrow0\&quot; eeimg=\&quot;1\&quot;&gt; ，但是是如何趋向于无穷小的（突然变成0（相当于直接选出N最大的操作），突然变成很小的一个数，还是指数下降，还是倒数下降），论文并没有指明。这个策略或许也会影响实战结果。&lt;/p&gt;&lt;p&gt;而在正式比赛/评估中 AlphaGo Zero 也会使用退火温度，但是使用什么样的方式并不清楚。但是无疑这印证了之前和Master对战中大家发现AlphaGo开局阶段变数较多的印象，应该在 Master版本中就引入了退火机制。&lt;/p&gt;&lt;p&gt;引入退火机制的另一个好处是，使得&lt;b&gt;开局更加多样化&lt;/b&gt;；而在&lt;b&gt;收官时更加谨慎&lt;/b&gt;，尽量避免无谓的损失（因为如果AG估计胜率很高，此时各种走法都会表现出较高的概率，因为这些走法几乎都会赢，这时候就要强制让AG做一些努力，走胜率最高的走法，哪怕胜率只是高了一点点；这样收官的时候会更好看一点）。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;AlphaZero 为何不陷入局部最优&lt;/h2&gt;&lt;p&gt;自 AlphaGo-Zero 疯狂地完全自我学习后，AlphaZero 做了更加过分的一点：整个训练过程只使用一个神经网络。&lt;/p&gt;&lt;p&gt;在 AlphaZero 以前，每更新一个“小版本”后，都要将这个版本和迄今最好的版本对比，如果新的版本胜率超过 55%，才会用来取代以前最好的版本。这样做的显然的好处是防止 AlphaGo 自我博弈得“走火入魔”，陷入局部最优。&lt;/p&gt;&lt;p&gt;所谓陷入局部最优是指，AlphaGo 逐渐放弃更好的策略，比如征子和打劫，转而一头扎入了某些次好的策略，比如互相吃子。这是非常有可能的一件事，因为刚开始的时候AlphaGo征子和打劫的能力一定是很弱的，用这两种策略很难赢；但是相比吃子却是简单有效的。这样 &lt;b&gt;AlphaGo 可能会认为征子和打劫是“坏策略”，而吃子是“好策略”，从而在吃子的道路上一路走到黑&lt;/b&gt;。如果我们要求AlphaGo有 “重大进步” 才能更新，这样就可以避免这种反复优化吃子的情形。&lt;/p&gt;&lt;p&gt;但是这种需要“重大进步”才能更新的策略会显著地增长训练时间。于是我猜测 DeepMind 团队在 AlphaZero 中尝试了一下一直使用一个网络的策略，然后惊讶地发现很成功。这将围棋的训练周期在相同硬件配置下，由天级降到了小时级（而对战李世石的版本训练了几个月）。&lt;/p&gt;&lt;p&gt;那么为什么 AlphaZero 为何不陷入局部最优呢？&lt;/p&gt;&lt;p&gt;敏感的读者可能察觉到，“局部最优”其实可以解释为 Alpha 系列缺乏 exploration （对新技能的探索太弱），也可以解释为“过拟合”。&lt;/p&gt;&lt;p&gt;所以我认为 AlphaZero 上所有提升 exploration 和抗过拟合的机制都能够阻止 AlphaZero 陷入局部最优，而这些机制 AlphaGo-Zero 中其实都有了，万事俱备只欠东风。&lt;/p&gt;&lt;p&gt;提升 exploration 的方式有：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;选择最终策略的时候采用了退火机制，这样的策略向量保留了所有的分量，从而让所有的策略都能够得到学习，而不止是概率最高的策略。这是上文提到的。这样做其实某种意义上也达到了“模拟退火算法”的效应，可以脱离局部最优，而原先只选择最优策略的方式某种意义上是“爬山法”。&lt;/li&gt;&lt;li&gt;每次开始搜索前加入噪声，强制 AlphaZero 探索其他一些选项。这是上文提到的。&lt;/li&gt;&lt;li&gt;使用 Policy Iteration，让最终的棋局结果(reward)不能直接影响策略更新，避免 AlphaZero 因为使用了新招数而“直接挨打”。这在上文也提到过。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;避免过拟合的方式有：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;在 loss 中加入 L2 正则化项， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=loss%3D%28z-v%29%5E2-%5Cbm%5Cpi%5E%5Cmathsf%7BT%7D%5Clog%7B%5Cbm+p%7D%2Bc%5C%7C%5Ctheta%5C%7C%5E2\&quot; alt=\&quot;loss=(z-v)^2-\\bm\\pi^\\mathsf{T}\\log{\\bm p}+c\\|\\theta\\|^2\&quot; eeimg=\&quot;1\&quot;&gt; ，其中参数 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=c%3D1%5Ctimes10%5E%7B-4%7D\&quot; alt=\&quot;c=1\\times10^{-4}\&quot; eeimg=\&quot;1\&quot;&gt; 。这是神经网络非常基本的抗过拟合方式。&lt;/li&gt;&lt;li&gt;每次开始搜索前加入噪声。这个噪声会影响到最终策略，间接地影响到神经网络的训练（所以加噪声是很高明的做法）。神经网络训练中类似的做法是使用 dropout，能够显著地降低过拟合风险。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;值得注意的是，上面提到的很多方法都依赖于 Policy Iteration，而在 Policy gradient 上比较难做，所以使用 Policy Iteration 是很高明的手段（当然了 DeepMind 一开始的时候也不一定想到这么多）。&lt;/p&gt;&lt;h2&gt;插曲：AlphaGo-Master 到底是什么？&lt;/h2&gt;&lt;p&gt;由于 DeepMind 在论文中只揭露了 AlphaGo-Fan, AlphaGo-Zero 和 AlphaZero 的具体细节，同时又声称 AlphaGo-Lee 和 AlphaGo-Fan 算法相同，只是硬件使用了 Google TPU。所以唯一不为人所知的Alpha系列成员就是 AlphaGo-Master了，虽然那几十场网络棋战让它在围棋圈子里相当出名。大师的面纱仍未揭露。&lt;/p&gt;&lt;p&gt;但是我们仍然可以通过各种证据猜测其真面孔。首先其配置和 AlphaGo-Zero 完全相同，所以可以肯定&lt;b&gt;其算法是类似 AlphaGo-Zero&lt;/b&gt; 的。此外非常重要的一点是，在 AlphaGo-Zero 的论文中，有 20-block（3天完虐Lee版本的那个） 和 40-block（最强的 AlphaGo-Zero 版本）两个版本。&lt;/p&gt;&lt;p&gt;如果你写过论文，会知道其中很重要的一点是“连贯性”，也就是你会复用之前的一些扎实的已有工作，而不是每次都完全使用新的。那么这个 20-block 就有点有意思了，在论文中它几乎和 40-block 分开介绍的，虽然结构大致相同，但是评价等等完全不在一个体系中，看上去就像是两个独立的工作，而 20-block 版本似乎明显早于 40-block 版本。&lt;/p&gt;&lt;p&gt;所以非常有可能的一点是， 20-block 的结构就是 Master的结构，也就是 DeepMind 之前的工作。所以 AlphaGo-Zero 的工作很有可能是在 AlphaGo-Master 的基础上的。此外  20-block 版本 100:0 完胜李世石版本，水平也和 DeepMind 自己说的 “可以让 Lee 版本3颗子” 非常类似。&lt;/p&gt;&lt;p&gt;综上，Master 可能使用了 20-block 的结构，同时按照 DeepMind 在乌镇大赛上透露的，其初始训练数据来自于 AlphaGo-Lee，然后自我对弈提升。&lt;/p&gt;&lt;h2&gt;AlphaZero 和 Stockfish 的比赛“公平”么？如何理解算力差距带来的可能变化？&lt;/h2&gt;&lt;p&gt;AlphaZero 处理解决围棋外，还能解决其他问题，比如象棋。在 AlphaZero 的论文中，DeepMind 对比了 AlphaZero 和最强的开源围棋软件 Stockfish ，在100 场比赛中全胜。&lt;/p&gt;&lt;p&gt;但是论文中一幅图值得注意：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-9f9ba8105454b5b7881934edb8e7a640_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;418\&quot; data-rawheight=\&quot;295\&quot; class=\&quot;content_image\&quot; width=\&quot;418\&quot;&gt;&lt;figcaption&gt;不同算力下AlphaZero和Stockfish的Elo对比&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;显然，如果限制两者的算力（通过减少搜索时间），AlphaZero 会逐渐落后于 Stockfish。&lt;/p&gt;&lt;p&gt;所以 AlphaZero 强是否更多是因为算力问题？&lt;/p&gt;&lt;p&gt;我们需要从不同角度理解算力。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;从Flops&lt;/b&gt;。即每秒浮点运算的次数，这是算力的直接衡量。这点 AlphaZero 使用 TPU，其运算数量远远大于 Stockfish，这点上 AlphaZero 非常依赖算力。&lt;/li&gt;&lt;li&gt;&lt;b&gt;从功耗&lt;/b&gt;。AlphaZero 特点是更依赖高度并行的硬件，比如 TPU/GPU，而不是传统的CPU；Stockfish相反。在未来这两者功耗之间不会差太大，TPU这种并行硬件天然地可以在相同功耗的情况下进行更多的运算次数，这点非常类似人脑。&lt;/li&gt;&lt;li&gt;&lt;b&gt;从可扩展性&lt;/b&gt;。AlphaZero 达到顶峰的算力，和 Stockfish 达到相同高度的算力相差多少？这点 AlphaZero 优势较大，可能目前 Stockfish 即使使用推荐的算力的100倍以上的算力也不一定能够追上 AlphaZero。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;此外和将棋冠军软件 Elmo 对战中，不论多少算力，AlphaZero 都显得更强：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-43b4dec2899e12e2d9eed2f3f12fac48_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;415\&quot; data-rawheight=\&quot;295\&quot; class=\&quot;content_image\&quot; width=\&quot;415\&quot;&gt;&lt;/figure&gt;&lt;p&gt;所以还要考虑一点&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;从发展时间&lt;/b&gt;。国际象棋已经被研究多年，技术非常成熟，所以 Stockfish 这种软件本来就接近完美，非常难对付（即使和AlphaZero下也出现大量平局），人类早就在国际象棋上不是软件的对手；极端情形下让AlphaZero去搞一个完全解决的问题的AI，那么AlphaZero必然不会胜利，这本来就对 AlphaZero 不利。而 Elmo 刚打败人类将棋冠军，相对嫩一点。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;所以说从不同角度是可以有不同结论的，实际中需要看需求选择。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;算法和先验知识：NIPS 17大会之争&lt;/h2&gt;&lt;p&gt;NIPS大会上，DeepMind 公布了其围棋程序的最新迭代 AlphaZero。但是 Marcus 和 Tenenbaum 激烈地反对 AlphaZero 背后的 “零知识哲学”。又如何评价两方呢？&lt;/p&gt;&lt;p&gt;相关文章：&lt;a href=\&quot;https://zhuanlan.zhihu.com/p/31896085\&quot; class=\&quot;internal\&quot;&gt;NIPS大会最精彩一日：AlphaZero遭受质疑；史上第一场正式辩论与LeCun激情抗辩；元学习&amp;amp;强化学习亮点复盘&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;Tenenbaum 认为智能不仅仅是将一个公式计算地特别好，而是思考到底解决什么样的问题。他提出了一个非常有意思的想法：建造一个像小孩子一样学习的机器。&lt;br&gt;Tenenbaum 向观众展示了一个视频：一个小孩看到大人双手捧着书，在一个关着门的书橱前踱步，小孩很自觉地走上前把门打开。这样的理解能力和操作能力，是机器做不到的。要建造这样的机器，需要三个步骤：建立一个具备常识的核心；用这个核心学习语言；用语言学习任何东西。&lt;br&gt;&lt;br&gt;Marcus 大声疾呼：在生活中，没有东西是被整齐的预先包装好的（像 Kaggle 里的数据集那样），没有人能保证你昨天的挑战和今天的挑战一样，你希望学习的是可以重复使用的技能和知识，并且可以用在未来的挑战里，而实现这种可重用性才应该是大家关注的重点。&lt;/blockquote&gt;&lt;p&gt;AlphaZero 的提出，可以说是完全信息博弈问题的初步解决。其重要意义在于，我们终于可以用一个简单统一的方法来解决完全信息博弈的绝大多数问题，而不是每个棋类都要耗费大量的人力设计算法；其不足在于，“完全信息博弈问题”仅仅是买上月球的第一步（按照DeepMind团队描述这个项目是“人工智能的阿波罗计划”），而整个地月系即使仅仅相对整个太阳系而言也非常渺小，更何况广袤的宇宙。&lt;/p&gt;&lt;p&gt;不知是有趣还是讽刺，Alpha系列某种意义上确实和阿波罗登月计划有着非常类似的特性：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;非常明确的问题和目标。&lt;/li&gt;&lt;li&gt;非常重大的突破。&lt;/li&gt;&lt;li&gt;非常具有象征意义。&lt;/li&gt;&lt;li&gt;新闻效应非常显著，举世瞩目。&lt;/li&gt;&lt;li&gt;耗费的资金非常多（相对领域内而言）。&lt;/li&gt;&lt;li&gt;解决的问题不能直接转化为效益，贡献（相对领域内其他资金水平相同的项目）有限。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;不过值得庆幸的是，我们总算解决了一个池塘的问题。如果把人类能力比作地貌，而人工智能水平比作上升的水平面，那么这次水总算淹进了完全信息博弈问题的池塘，而不完全信息博弈也初步进水（Libratus德州扑克）。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-dcc562aa6166b96d3a8984068da798f6_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;544\&quot; data-rawheight=\&quot;320\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;544\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-dcc562aa6166b96d3a8984068da798f6_r.jpg\&quot;&gt;&lt;figcaption&gt;Hans Moravec 的 “人类能力景观图”&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;DeepMind 在 NIPS大会上主要受攻击的观点是，他们体现了算法的“通用性”，证据是它们的算法不需要任何人类的数据，只需要规则，就能解决一大类问题。&lt;/p&gt;&lt;p&gt;这个问题可以从两个角度分析：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;从完全信息博弈问题上而言，DeepMind的算法是相当通用成功的。&lt;/li&gt;&lt;li&gt;从整个人工智能领域来看，DeepMind的算法很狭隘。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我们需要再回顾一下下面这张图：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-0c0db7833f385a841b3915f597897920_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1098\&quot; data-rawheight=\&quot;1118\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1098\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-0c0db7833f385a841b3915f597897920_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;可以看到，没有MCTS的神经网络和完整的AlphaGo Zero之间差了2000多的Elo，这已经不是让三个子的问题了。仅仅是MCTS的加入就带来这么大的变化是非常值得注意的，这直接指明了最重要的原因是MCTS+CNN这套方法非常适合完全信息博弈。&lt;/p&gt;&lt;p&gt;DeepMind 的论点的一个直接反例就是他们之前搞的 Atari 游戏。完全信息博弈和Atari游戏都是 well-defined 的问题，都是 DeepMind 迄今最得意之作，然后就这两个问题而言，它们的算法能通用或者迁移吗？比如用DQN或者A3C来训练围棋，或者用MCTS来玩Atari。我们知道用DQN或者A3C来训练围棋，其效果至少不会好于 Raw network，而且很可能陷入局部最优；而Atari问题中都没有地方放MCTS，因为这不是个博弈问题，没有博弈树。&lt;/p&gt;&lt;p&gt;目前已有的另外反例就是星际争霸，我们至少知道Atari那套是搞不定的；而 OpenAI 前些日子搞的 Dota2 AI 一对一被人指出实际的训练不符合 OpenAI 自己声称的完全没有人监督，并且人们很快发现了AI的一些可以重复利用的弱点，完全不像 AlphaGo-Master 那样傲战群雄而不露破绽。&lt;/p&gt;&lt;p&gt;AI 离能够理解下面的一张图真的很远，很远：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-cb7455cca42672432fbf5c3c47b56782_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;675\&quot; data-rawheight=\&quot;450\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;675\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-cb7455cca42672432fbf5c3c47b56782_r.jpg\&quot;&gt;&lt;figcaption&gt;奥巴马内阁，来自karpathy的blog&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;但是仔细一想，不理解上面的图并不一定直接是AI本身的问题。如果这个图出现在上个世纪，人们也会一脸懵逼：这些人是谁啊？一旦你知道这是奥巴马等等信息后，你才有了完全不一样的理解，这点和 DeepMind 所强调的 “零知识” 是相反的。&lt;/p&gt;&lt;p&gt;星际游戏里面同样存在类似的问题：人能够玩的好，很多时候是有些常识，比如知道敌人迫近可能是筹备攻击或者骚扰；比如建筑和障碍物可以阻拦陆地的移动物体，但是天上飞的不一定——当然人也清楚什么样子的像是在天上飞的。AI完全不懂这些，对于目前算法（A3C等）实现的AI而言，一个捕捉事物的游戏就像下图（9根短线是agent的9个“感光元件”）：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-53e5da3a5806bb5980887675f48b0374_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1468\&quot; data-rawheight=\&quot;1546\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1468\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-53e5da3a5806bb5980887675f48b0374_r.jpg\&quot;&gt;&lt;figcaption&gt;同一个问题的等价表达。人类觉得上半部分“意义很明显”，下面WTF？但是对于计算机下面的表示很“自然”，反而是利用上面的图是困难的。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;从这个问题也可以看出，人和AI的差距似乎并不只是“常识”那么简单，很多时候我们觉得给计算机一个知识图谱之类的东西就能赋予其常识，但是在实践中真正的困难在于人和计算机之间的gap太深。一个例子是，某个人想让AI帮其手动洗内衣，但是AI的做法是上网竞价买了一套新的完全一样的内衣，然后把脏的扔了。对于AI而言，后者是显然简单的，即使如今的AI也完全可以做到（网络搜索图片，一瞬间比对大量商家报价，在线支付；甚至你愿意可以写一个检查评论区的插件）；而要让AI学人一样去用机械臂洗衣服，对AI来说是个很麻烦的事情，虽然对人来说显而易见。但是这个AI智能吗？如果说网上购物已经成为了极度便利普及的事情，那么这个AI似乎很智能；反之这个AI确实很傻。这又告诉我们一个事实是，智能似乎并不只是一种內禀属性，而是一种环境属性，不同的环境下，同样的智能体可以表现出完全不同的智能程度。&lt;/p&gt;&lt;p&gt;有趣的是，这种人和机器差异性使得我们在改造环境属性，以方便AI变得智能。现在异军突起的互联网和大数据行业，使得地图导航等应用成为可能——这些APP要是放在1960年代绝对会让人觉得极其智能，只不过我们如今已经非常习惯了而已。这些数据对于人来说是天书，但是机器却能够很方便的处理，完成各种复杂的任务。现在各种基础数据和网络信息的积累，正在冲击各行各业，虽然程序还是程序，其本身并没有怎么变智能，但是随着“机器友好”的环境的建立，程序本身的能力大大变强了，如果我们衡量智能的指标是“完成复杂任务的能力”，那么确实我们只能说现在这些程序变得更加智能了。另外硬件能力的提升也是非常重要的一点。&lt;/p&gt;&lt;p&gt;人也在让机器向人靠齐。至少最近几年的深度学习革命使得感知数据的处理有了长足的进步，机器可以以非常原始的方式得到一些非结构化的感知数据内部蕴含的信息，这使得无人驾驶等领域逐渐成为可能。实际上我们指的AI的进步绝大多数都是指的这一部分，但是我认为环境的改变同样是非常重要的一点，因为智能最终的目的可能还是体现在“完成复杂任务的能力”这个客观指标上，而不是“更接近我们认为的我们的思考方式”，因为我们对自身的智能的认知也并不健全，并且这种情形还会持续很久。&lt;/p&gt;&lt;h2&gt;关于硬件：DeepMind使用的TPU是什么？TPUv1和v2有什么区别？&lt;/h2&gt;&lt;p&gt;参考页面 &lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.nvidia.com/object/accelerate-inference.html\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;NVIDA Tesla Helps Accelerate Deep Learning Inference&lt;/a&gt;&lt;/p&gt;&lt;p&gt;参考论文 &lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//arxiv.org/pdf/1704.04760.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;arxiv.org/pdf/1704.0476&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;0.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;TPU Google搞的一类专用的深度学习加速器(全称Tensor Processing Unit，张量处理单元)，可以较快完成深度学习中的计算任务（主要是各类矩阵乘法）。目前TPU出了2代。与此同时，NVIDIA和AMD等厂家也不甘落后，提出了众多对标产品，即他们的GPU。&lt;/p&gt;&lt;p&gt;大家最熟悉的是 CPU (central processing unit, 中央处理器)，其计算通用性最广，但是对某些特殊的任务（特别是并行度极高的）性能不佳。随着游戏和多媒体的发展，NVIDIA等厂家推出了所谓 GPU（Graphics Processing Unit，图形处理单元），用于加速游戏渲染和视频解码等。&lt;/p&gt;&lt;p&gt;然后一些搞科学计算的人发现，GPU中的各种图形操作实质上是变相的矩阵运算，于是他们开始用GPU搞科学计算，并获得了巨大的加速。NVIDIA等率先意识到了这一点，提出了GPGPU（通用图形处理单元）的概念，使得GPU不止能够做图形学任务，还可以进行自定义的各类向量运算。现在大多数GPU在设计理念上都是GPGPU。&lt;/p&gt;&lt;p&gt;NVIDIA等运气真的很好，正好迎上了深度学习浪潮，深度学习中大部分运算都是张量/矩阵运算，刚巧可以被GPU加速。于是GPU成为了标准的深度学习加速器。&lt;/p&gt;&lt;p&gt;随着深度学习浪潮进一步提高，一些厂家开始想做所谓的深度学习ASIC（领域专用芯片），这类芯片不能做一般意义的科学计算，也不能渲染游戏，整个设计全部都为了跑深度学习应用，其中著名的一个就是Google的TPU。NVIDIA等也不甘心让步，在GPU内部嵌入了一些称为Tensor Core的ASIC元件，以进一步加强GPU在深度学习上的能力。&lt;/p&gt;&lt;p&gt;下面我们我们来评价一下这些硬件的性能。&lt;/p&gt;&lt;p&gt;评价硬件的性能，指标也是多样的。下面的图是对各种指标的性能评价，颜色代表厂家(蓝色Intel，绿色NVIDIA，黄色Google，红色AMD)：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-51443c04ac772ea33ef1343797dffd0d_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1970\&quot; data-rawheight=\&quot;1254\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1970\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-51443c04ac772ea33ef1343797dffd0d_r.jpg\&quot;&gt;&lt;figcaption&gt;各类硬件性能对比（原创图片）&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;关于浮点运算&lt;/b&gt;。浮点运算速度是最直接的运算性能评价指标，以 Flops (Float operations per second) 为基本单位，图中的浮点运算单位都是 TFlops （也会就是 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=10%5E%7B12%7D\&quot; alt=\&quot;10^{12}\&quot; eeimg=\&quot;1\&quot;&gt; Flops）。目前我国的神威-太湖之光超级计算机是浮点运算能力最强的超级计算机，峰值性能接近 100 PFlops（即 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=10%5E%7B17%7D\&quot; alt=\&quot;10^{17}\&quot; eeimg=\&quot;1\&quot;&gt; Flops）。而家用计算机的CPU芯片性能一般以 GFlops 为单位。&lt;/li&gt;&lt;li&gt;&lt;b&gt;关于浮点精度问题&lt;/b&gt;。浮点数的精度越高，硬件代价也越大，功耗也急剧上升，所以不按照精度来评价性能就是耍流氓。高精度的浮点运算总可以代替低精度的浮点运算，所以如果硬件没有低精度硬件的支持，可以用高精度运算代替，并且性能有可能会提升（在图中显示&amp;gt;号）。一般而言，科学计算(微分方程，大气模拟，分子动力学等)需要双精度单元，因此 TPU 等并不能进行科学计算；单精度主要用于图形学和精度不高的数值模拟，以及深度学习的训练；半精度和8bit往往用于深度学习的inference（即使用训练好的模型跑结果），它们数值精度很差训练会不稳定。可以说直接支持半精度和8bit的硬件大多都是给深度学习做了优化的。&lt;/li&gt;&lt;li&gt;&lt;b&gt;关于是否支持训练的问题&lt;/b&gt;。支持深度学习训练的硬件往往比不支持的复杂一些。第一代TPU不支持训练，第二代支持，结果第二代的某些性能反而不如第一代，原因很大程度是因为需要支持训练增加的额外复杂性（比如流水线中要考虑更高精度的运算）。&lt;/li&gt;&lt;li&gt;&lt;b&gt;关于是否含有深度学习ASIC的问题&lt;/b&gt;。深度学习ASIC是给深度学习量身定制的硬件模块，能够极大提升相关的性能。从图表中可以看到含有ASIC模块的硬件的8bit/半精度运算性能都很爆表，且功效比比其他硬件高很多。&lt;/li&gt;&lt;li&gt;&lt;b&gt;内存带宽和HBM2问题&lt;/b&gt;。内存带宽影响着实际的运算性能（前面的浮点运算性能只是浮点运算的理论最高值，差不多就是把所有运算元件性能直接相加）。Google TPUv1相关的报告出来的时候业界普遍质疑其真实性能，最重要的一点是其内存带宽非常捉急，这是因为它使用了DDR3内存，也就是我们笔记本电脑和手机里面用的这种，性能相对很低下。而现在GPU大部分使用GDDR5内存，带宽普遍在DDR3的10倍以上；而现在异军突起的HBM2，正如其名字所称（High bandwidth memory version 2），性能普遍在 DDR3的20-30倍以上。所以当时核弹厂老黄直接喷TPUv1的实际性能只有P40的1/2。并且使用DDR3也使得其功耗偏低（个人笔记本不使用DDR4的一大原因也是功耗过高）。业界还有一种说法是，TPUv2运算性能大幅降低的一大原因是发现v1的运算性能根本发挥不出来，目前这点还未得到证实。&lt;/li&gt;&lt;li&gt;&lt;b&gt;内存容量问题&lt;/b&gt;。内存容量越大，就可以跑越大的模型，越大的batch，否则就需要在多个卡上面跑，而内部运算开销会随着计算卡的数目上升而增大（一个极端的例子是超级计算机，如果处理不当其真实性能往往远低于所有硬件计算性能之和，所以超级计算机不能仅靠堆硬件）。所以内存容量也会间接影响性能，包括对于商家来说是价格比。&lt;/li&gt;&lt;li&gt;&lt;b&gt;制程问题&lt;/b&gt;。制程体现了工艺水平，一般制程越高，性价比越好。TPUv1另一个显著的黑点在于其28nm的制程，要知道15年龙芯制程已经28nm了（当时Intel主流制程22nm，现在已经在冲刺10nm），也就意味着TPUv1的工艺水平还不如国产龙芯，这也是人们怀疑其实际性能的原因。&lt;/li&gt;&lt;li&gt;&lt;b&gt;生态链&lt;/b&gt;。生态链决定了开发者的二次开发难度。最容易的显然是 Intel 的 CPU。NVIDIA的GPU也因为完整的CUDA库和OpenCL，生态链相对完善。AMD家主要是OpenCL环境，近来也开始支持CUDA。Google TPU目前还没有公开的驱动和文档，尚无市场意义的生态链。&lt;/li&gt;&lt;li&gt;&lt;b&gt;价格问题&lt;/b&gt;。NVIDIA家的V100，P100等价格贵的离奇(没记错才发布的时候3000刀一个)，如果不是因为超算比赛用到了这些产品，我可能都没有机会在上面跑程序。而Google TPU似乎目前还没有太多向外面卖的的意思，Google 可能更想那它做云服务。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这里需要注明的是，最新的 AlphaZero 训练的自战阶段使用了5000个TPUv1（因为只需要inference），参数更新部分使用了64个TPUv2，训练完成后在比赛中只需要4个TPUv1。&lt;/p&gt;&quot;,&quot;commentCount&quot;:5,&quot;imageUrl&quot;:&quot;https://pic4.zhimg.com/50/v2-e4a377248d6d02e8c11184c3808a63b4_hd.jpg&quot;,&quot;linkbox&quot;:{&quot;url&quot;:&quot;&quot;,&quot;category&quot;:&quot;&quot;,&quot;pic&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;},&quot;excerptNew&quot;:&quot;此篇是浅述：从 Minimax 到 AlphaZero，完全信息博弈之路（1）的续篇，为了连贯性我希望读者能够先阅读前篇。 可以说前篇介绍的是一些“透明”的问题，其算法和思路都是非常清晰的。但是可惜的是，清晰简单的方式并不能解决实际问题，因为理论相对于实际问题总…&quot;,&quot;excerptTitle&quot;:&quot;&quot;,&quot;previewText&quot;:&quot;&quot;,&quot;voting&quot;:0,&quot;type&quot;:&quot;article&quot;},&quot;46877662&quot;:{&quot;updated&quot;:1539683880,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;孙俊&quot;,&quot;headline&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;sui-bian-qu-ming-37-84&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/fe1c640bed9e20e9da414cd1546ad171&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/da8e974dc_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;fe1c640bed9e20e9da414cd1546ad171&quot;},&quot;excerpt&quot;:&quot;&lt;b&gt;背景&lt;/b&gt;截止今年 8 月，知乎注册用户量已突破 2 亿。对于垃圾信息的治理，我们面临着更大的挑战和考验。过去我们通过不断升级「悟空」的策略引擎，通过在行为、环境、资源、文本等多维度组合应用，已经取得了非常不错的效果。近期我们尝试引入深度学习识别垃圾文本，「悟空」对 Spam 的治理能力又迈上了一个新的台阶。&lt;b&gt;问题分析&lt;/b&gt;我们对当前站内垃圾文本进行了梳理，发现目前主要包括四种形式：导流内容：这类内容大概能占到社区中垃圾…&quot;,&quot;id&quot;:46877662,&quot;voteupCount&quot;:170,&quot;upvotedFollowees&quot;:[],&quot;created&quot;:1539662023,&quot;url&quot;:&quot;https://api.zhihu.com/articles/46877662&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;title&quot;:&quot;知乎反作弊垃圾文本识别&quot;,&quot;previewType&quot;:&quot;default&quot;,&quot;content&quot;:&quot;&lt;p&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-9b759d625ad21df7048e729a81c76efa_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1400\&quot; data-rawheight=\&quot;1080\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1400\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-9b759d625ad21df7048e729a81c76efa_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;背景&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;截止今年 8 月，知乎注册用户量已突破 2 亿。对于垃圾信息的治理，我们面临着更大的挑战和考验。过去我们通过不断升级「悟空」的策略引擎，通过在行为、环境、资源、文本等多维度组合应用，已经取得了非常不错的效果。近期我们尝试引入深度学习识别垃圾文本，「悟空」对 Spam 的治理能力又迈上了一个新的台阶。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;问题分析&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;我们对当前站内垃圾文本进行了梳理，发现目前主要包括四种形式：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;导流内容：这类内容大概能占到社区中垃圾文本的 70%-80%，比较典型的包括培训机构, 美容，保险，代购相关的。导流内容会涉及到 QQ，手机号，微信，url 甚至座机，在一些特殊时间节点还会出现各类的专项垃圾文本，比如说世界杯，双十一，双十二，都是黑产大赚一笔的好时机。&lt;/li&gt;&lt;li&gt;品牌内容：这类内容会具有比较典型的 SEO 特色，一般内容中不会有明显的导流标识，作弊形式以一问一答的方式出现，比如提问中问什么牌子怎么样？哪里的培训学校怎么样？然后在对应的回答里面进行推荐。&lt;/li&gt;&lt;li&gt;诈骗内容：这类内容一般以冒充名人，机构的方式出现，比如单车退款类，在内容中提供虚假的客服电话进行诈骗。&lt;/li&gt;&lt;li&gt;骚扰内容：比如一些诱导类，调查类的批量内容， 非常严重影响知友体验。&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-d6d782797c629362fff5a6226e36b545_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;3068\&quot; data-rawheight=\&quot;1708\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;3068\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-d6d782797c629362fff5a6226e36b545_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;这些垃圾文本的核心获益点一方面是面向站内的传播，另一方面，面向搜索引擎，达到 SEO 的目的。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;算法介绍&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;从算法角度可以把这个问题看作是一个文本分类问题，把站内的内容分为垃圾文本和正常文本两个类别。常用文本分类算法有很多，我们不打算详细介绍每一个分类算法，只是分享我们在处理实际问题中遇到的一些问题。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我们遇到的第一个问题是使用 RNN 还是 CNN。一般来说，CNN 是分层架构，RNN 是连续结构。CNN 适合由一些关键词来决定的任务；RNN适合顺序建模任务 ，例如语言建模任务，要求在了解上下文的基础上灵活建模。这一结论非常明显，但是目前的 NLP 文献中并没有支持性的文章。另外一般来说，CNN 训练速度和预测速度都快于RNN。考虑到上述站内垃圾文本的主要形式，导流和品牌内容中都会出现关键词，同时对于垃圾文本检测的速度要求比较高，我们最终使用 CNN。一个典型的 CNN 文本分类模型如下图所示。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-c65f7f93f90c9c2d403b7b4c32a4b239_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2126\&quot; data-rawheight=\&quot;922\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2126\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-c65f7f93f90c9c2d403b7b4c32a4b239_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;接下来，我们遇到的一个问题是，使用字还是词语作为输入。词语具有比字更高的抽象等级，更丰富的含义。但是导流内容中的 QQ、手机号、微信、url、座机等，通常不会出现在已有词库中，品牌词也具有类似的特点，一般是未登录词。而且，导流内容通常会出现变体词，使用词语作为输入，不能很好地捕捉类似特征。所以，我们最终使用的是字作为输入。&lt;/p&gt;&lt;p&gt;在决定使用字作为输入之后，需要考虑使用在知乎站内语料上预训练的字向量初始化模型的Embedding层，还是直接在分类模型中随机生成初始字向量。这里的考虑是垃圾文本的数据分布和知乎站内文本的数据分布具有比较大的区别，垃圾文本相对于站内正常文本是一个比较特定的领域。因此我们使用随机初始化字向量。&lt;/p&gt;&lt;p&gt;在决定使用字向量之后，我们观察到“有意者加我咨询：2839825539”、“找北京·合·合·天·下”等关键信息，按字来计算通常都很长。因此，CNN需要更大的感受域来提取相关文本特征，如果简单增加卷积核大小，会增加参数数量。我们考虑使用空洞卷积（dilated convolution），来增加卷积的感受域，同时不增加网络参数数量。一个典型的空洞卷积如下图所示。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-29db8216a3439eaadb2cc58c4db7b84b_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;395\&quot; data-rawheight=\&quot;381\&quot; class=\&quot;content_image\&quot; width=\&quot;395\&quot;&gt;&lt;/figure&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;另外我们观察到需要识别的垃圾文本并不都是短文本，还有一部分是长文本。由于文本长度的关系，如果简单将卷积层的输出取平均，输出到全连接层，那么文本能决定是否是垃圾文本的关键特征很可能被其他特征所淹没，导致模型精度难以提升。因此，我们加入了一个 Attention 层，通过它给予关键特征更大的权重。Attention 计算方法如下图所示。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-1066fcbd51c241a8b81893987481cdf0_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1138\&quot; data-rawheight=\&quot;316\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1138\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-1066fcbd51c241a8b81893987481cdf0_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;通过上述分析，我们最终采用的模型结构如下图所示。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-cbf311ee48c81c54e67a8e128109191a_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;600\&quot; data-rawheight=\&quot;337\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;600\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-cbf311ee48c81c54e67a8e128109191a_r.jpg\&quot;&gt;&lt;figcaption&gt;垃圾文本分类算法结构&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;模型效果&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;目前，垃圾文本模型会对知乎站内的所有内容进行评分，输出 0-1 之间的分数，系统会对高分内容进行处理。&lt;/p&gt;&lt;p&gt;模型分数在知乎部分业务线上的表现&lt;/p&gt;&lt;p&gt;                   文本分数        &amp;gt;=0.9准确率      &amp;gt;=0.8准确率       &amp;gt;=0.7准确率&lt;/p&gt;&lt;p&gt;                   回答                    100.0%               99.8%                  95.6%&lt;/p&gt;&lt;p&gt;                   提问                    100.0%               99.1%                   97.7%&lt;/p&gt;&lt;p&gt;                   评论                    100.0%               99.6%                  98.0%&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;当前情况下，模型结合其他反作弊维度，可实现对垃圾评分 0.5 分以上的内容进行删除，同时准确率达到 97% 以上。上线以来，每天删除垃圾内容数千条。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-88c55f88182310ec1cd45687947b3b00_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2760\&quot; data-rawheight=\&quot;1792\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2760\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-88c55f88182310ec1cd45687947b3b00_r.jpg\&quot;&gt;&lt;figcaption&gt;模型实时处理&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;另外值得一提的是端午期间，知乎站内涌现了一波违法违规的 spam，垃圾文本模型覆盖了 98% 以上内容，使得这波攻击大概持续了 1000 条左右就停了。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-2a9b1603ace5031e95fcb1ea14964814_b.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2828\&quot; data-rawheight=\&quot;1644\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2828\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-2a9b1603ace5031e95fcb1ea14964814_r.jpg\&quot;&gt;&lt;figcaption&gt;端午 spam 攻击&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;后续计划&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;垃圾文本识别是一个长期攻防的过程，站内垃圾文本会随着时间不断演变，现有模型的效果也会随之变化。为了应对站内垃圾文本的挑战，我们将一直收集 badcase，进一步优化模型的效果。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;最后&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;由于本人的水平有限，如有错误和疏漏，欢迎各位同学指正。&lt;/p&gt;&quot;,&quot;commentCount&quot;:13,&quot;imageUrl&quot;:&quot;&quot;,&quot;linkbox&quot;:{&quot;url&quot;:&quot;&quot;,&quot;category&quot;:&quot;&quot;,&quot;pic&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;},&quot;excerptNew&quot;:&quot;背景 截止今年 8 月，知乎注册用户量已突破 2 亿。对于垃圾信息的治理，我们面临着更大的挑战和考验。过去我们通过不断升级「悟空」的策略引擎，通过在行为、环境、资源、文本等多维度组合应用，已经取得了非常不错的效果。近期我们尝试引入深度学习识别垃圾文…&quot;,&quot;excerptTitle&quot;:&quot;&quot;,&quot;previewText&quot;:&quot;&quot;,&quot;voting&quot;:0,&quot;type&quot;:&quot;article&quot;}},&quot;columns&quot;:{},&quot;topics&quot;:{},&quot;roundtables&quot;:{},&quot;favlists&quot;:{},&quot;comments&quot;:{},&quot;notifications&quot;:{},&quot;ebooks&quot;:{},&quot;activities&quot;:{&quot;1539756720&quot;:{&quot;verb&quot;:&quot;MEMBER_VOTEUP_ARTICLE&quot;,&quot;target&quot;:{&quot;id&quot;:46877662,&quot;schema&quot;:&quot;article&quot;},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;Richard Xu&quot;,&quot;headline&quot;:&quot;专栏：经济学博士生的日记本&quot;,&quot;urlToken&quot;:&quot;richard-xu-25&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/6808bf0f275d42432d961d5285dc282f&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/92c892d622d4a92d81871b8817b12d9d_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;6808bf0f275d42432d961d5285dc282f&quot;},&quot;actionText&quot;:&quot;赞了文章&quot;,&quot;createdTime&quot;:1539756720,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1539756720&quot;},&quot;1539760839&quot;:{&quot;verb&quot;:&quot;QUESTION_FOLLOW&quot;,&quot;target&quot;:{&quot;id&quot;:298235353,&quot;schema&quot;:&quot;question&quot;},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;Richard Xu&quot;,&quot;headline&quot;:&quot;专栏：经济学博士生的日记本&quot;,&quot;urlToken&quot;:&quot;richard-xu-25&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/6808bf0f275d42432d961d5285dc282f&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/92c892d622d4a92d81871b8817b12d9d_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;6808bf0f275d42432d961d5285dc282f&quot;},&quot;actionText&quot;:&quot;关注了问题&quot;,&quot;createdTime&quot;:1539760839,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1539760839&quot;},&quot;1539935364&quot;:{&quot;verb&quot;:&quot;ANSWER_CREATE&quot;,&quot;target&quot;:{&quot;id&quot;:513992249,&quot;schema&quot;:&quot;answer&quot;},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;Richard Xu&quot;,&quot;headline&quot;:&quot;专栏：经济学博士生的日记本&quot;,&quot;urlToken&quot;:&quot;richard-xu-25&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/6808bf0f275d42432d961d5285dc282f&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/92c892d622d4a92d81871b8817b12d9d_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;6808bf0f275d42432d961d5285dc282f&quot;},&quot;actionText&quot;:&quot;回答了问题&quot;,&quot;createdTime&quot;:1539935364,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1539935364&quot;},&quot;1539936124&quot;:{&quot;verb&quot;:&quot;MEMBER_VOTEUP_ARTICLE&quot;,&quot;target&quot;:{&quot;id&quot;:31809930,&quot;schema&quot;:&quot;article&quot;},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;Richard Xu&quot;,&quot;headline&quot;:&quot;专栏：经济学博士生的日记本&quot;,&quot;urlToken&quot;:&quot;richard-xu-25&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/6808bf0f275d42432d961d5285dc282f&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/92c892d622d4a92d81871b8817b12d9d_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;6808bf0f275d42432d961d5285dc282f&quot;},&quot;actionText&quot;:&quot;赞了文章&quot;,&quot;createdTime&quot;:1539936124,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1539936124&quot;},&quot;1539936131&quot;:{&quot;verb&quot;:&quot;MEMBER_VOTEUP_ARTICLE&quot;,&quot;target&quot;:{&quot;id&quot;:32073374,&quot;schema&quot;:&quot;article&quot;},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;Richard Xu&quot;,&quot;headline&quot;:&quot;专栏：经济学博士生的日记本&quot;,&quot;urlToken&quot;:&quot;richard-xu-25&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/6808bf0f275d42432d961d5285dc282f&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/92c892d622d4a92d81871b8817b12d9d_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;6808bf0f275d42432d961d5285dc282f&quot;},&quot;actionText&quot;:&quot;赞了文章&quot;,&quot;createdTime&quot;:1539936131,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1539936131&quot;},&quot;1539936248&quot;:{&quot;verb&quot;:&quot;ANSWER_VOTE_UP&quot;,&quot;target&quot;:{&quot;id&quot;:21654024,&quot;schema&quot;:&quot;answer&quot;},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;Richard Xu&quot;,&quot;headline&quot;:&quot;专栏：经济学博士生的日记本&quot;,&quot;urlToken&quot;:&quot;richard-xu-25&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/6808bf0f275d42432d961d5285dc282f&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/92c892d622d4a92d81871b8817b12d9d_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;6808bf0f275d42432d961d5285dc282f&quot;},&quot;actionText&quot;:&quot;赞同了回答&quot;,&quot;createdTime&quot;:1539936248,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1539936248&quot;},&quot;1539936355&quot;:{&quot;verb&quot;:&quot;ANSWER_VOTE_UP&quot;,&quot;target&quot;:{&quot;id&quot;:45218281,&quot;schema&quot;:&quot;answer&quot;},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;Richard Xu&quot;,&quot;headline&quot;:&quot;专栏：经济学博士生的日记本&quot;,&quot;urlToken&quot;:&quot;richard-xu-25&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/6808bf0f275d42432d961d5285dc282f&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/92c892d622d4a92d81871b8817b12d9d_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;6808bf0f275d42432d961d5285dc282f&quot;},&quot;actionText&quot;:&quot;赞同了回答&quot;,&quot;createdTime&quot;:1539936355,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1539936355&quot;}},&quot;feeds&quot;:{},&quot;pins&quot;:{},&quot;promotions&quot;:{},&quot;drafts&quot;:{}},&quot;currentUser&quot;:&quot;&quot;,&quot;account&quot;:{&quot;lockLevel&quot;:{},&quot;unlockTicketStatus&quot;:false,&quot;unlockTicket&quot;:null,&quot;challenge&quot;:[],&quot;errorStatus&quot;:false,&quot;message&quot;:&quot;&quot;,&quot;isFetching&quot;:false,&quot;accountInfo&quot;:{},&quot;urlToken&quot;:{&quot;loading&quot;:false}},&quot;settings&quot;:{&quot;socialBind&quot;:null,&quot;inboxMsg&quot;:null,&quot;notification&quot;:{},&quot;email&quot;:{},&quot;privacyFlag&quot;:null,&quot;blockedUsers&quot;:{&quot;isFetching&quot;:false,&quot;paging&quot;:{&quot;pageNo&quot;:1,&quot;pageSize&quot;:6},&quot;data&quot;:[]},&quot;blockedFollowees&quot;:{&quot;isFetching&quot;:false,&quot;paging&quot;:{&quot;pageNo&quot;:1,&quot;pageSize&quot;:6},&quot;data&quot;:[]},&quot;ignoredTopics&quot;:{&quot;isFetching&quot;:false,&quot;paging&quot;:{&quot;pageNo&quot;:1,&quot;pageSize&quot;:6},&quot;data&quot;:[]},&quot;restrictedTopics&quot;:null,&quot;laboratory&quot;:{}},&quot;notification&quot;:{},&quot;people&quot;:{&quot;profileStatus&quot;:{&quot;richard-xu-25&quot;:{&quot;token&quot;:{&quot;id&quot;:&quot;6808bf0f275d42432d961d5285dc282f&quot;,&quot;urlToken&quot;:&quot;richard-xu-25&quot;},&quot;isFetching&quot;:false,&quot;isDrained&quot;:true}},&quot;activitiesByUser&quot;:{&quot;richard-xu-25&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[&quot;1539936355&quot;,&quot;1539936248&quot;,&quot;1539936131&quot;,&quot;1539936124&quot;,&quot;1539935364&quot;,&quot;1539760839&quot;,&quot;1539756720&quot;],&quot;newIds&quot;:[&quot;1539936355&quot;,&quot;1539936248&quot;,&quot;1539936131&quot;,&quot;1539936124&quot;,&quot;1539935364&quot;,&quot;1539760839&quot;,&quot;1539756720&quot;],&quot;previous&quot;:&quot;http://www.zhihu.com/api/v4/members/richard-xu-25/activities?before_id=1539936355&amp;limit=7&amp;desktop=True&quot;,&quot;next&quot;:&quot;http://www.zhihu.com/api/v4/members/richard-xu-25/activities?limit=7&amp;after_id=1539756720&amp;desktop=True&quot;}},&quot;answersByUser&quot;:{},&quot;answersSortByVotesByUser&quot;:{},&quot;answersIncludedByUser&quot;:{},&quot;votedAnswersByUser&quot;:{},&quot;thankedAnswersByUser&quot;:{},&quot;voteAnswersByUser&quot;:{},&quot;thankAnswersByUser&quot;:{},&quot;topicAnswersByUser&quot;:{},&quot;articlesByUser&quot;:{},&quot;articlesSortByVotesByUser&quot;:{},&quot;articlesIncludedByUser&quot;:{},&quot;pinsByUser&quot;:{},&quot;questionsByUser&quot;:{},&quot;commercialQuestionsByUser&quot;:{},&quot;favlistsByUser&quot;:{},&quot;followingByUser&quot;:{},&quot;followersByUser&quot;:{},&quot;mutualsByUser&quot;:{},&quot;followingColumnsByUser&quot;:{},&quot;followingQuestionsByUser&quot;:{},&quot;followingFavlistsByUser&quot;:{},&quot;followingTopicsByUser&quot;:{},&quot;publicationsByUser&quot;:{},&quot;columnsByUser&quot;:{},&quot;allFavlistsByUser&quot;:{},&quot;brands&quot;:null},&quot;env&quot;:{&quot;ab&quot;:{&quot;config&quot;:{&quot;experiments&quot;:[{&quot;expId&quot;:&quot;launch-ad_ios_lans-2&quot;,&quot;expPrefix&quot;:&quot;ad_ios_lans&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:true,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_adr_dkts-9&quot;,&quot;expPrefix&quot;:&quot;gw_adr_dkts&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_adr_mini-2&quot;,&quot;expPrefix&quot;:&quot;gw_adr_mini&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_adr_wbtp-2&quot;,&quot;expPrefix&quot;:&quot;gw_adr_wbtp&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_adr_wxfb-2&quot;,&quot;expPrefix&quot;:&quot;gw_adr_wxfb&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_anr_wxbk-2&quot;,&quot;expPrefix&quot;:&quot;gw_anr_wxbk&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_ios_dkts-8&quot;,&quot;expPrefix&quot;:&quot;gw_ios_dkts&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_ios_mini-2&quot;,&quot;expPrefix&quot;:&quot;gw_ios_mini&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_ios_wxb-2&quot;,&quot;expPrefix&quot;:&quot;gw_ios_wxb&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_ios_wxfb-1&quot;,&quot;expPrefix&quot;:&quot;gw_ios_wxfb&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_wbtp-2&quot;,&quot;expPrefix&quot;:&quot;gw_wbtp&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-mp_amap_ios-1&quot;,&quot;expPrefix&quot;:&quot;mp_amap_ios&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-mp_apm-1&quot;,&quot;expPrefix&quot;:&quot;mp_apm&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-mp_hb_si-3&quot;,&quot;expPrefix&quot;:&quot;mp_hb_si&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-mp_ios_webp-2&quot;,&quot;expPrefix&quot;:&quot;mp_ios_webp&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-mp_video_feed-2&quot;,&quot;expPrefix&quot;:&quot;mp_video_feed&quot;,&quot;isDynamicallyUpdated&quot;:false,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-se_ios_topsearch-2&quot;,&quot;expPrefix&quot;:&quot;se_ios_topsearch&quot;,&quot;isDynamicallyUpdated&quot;:false,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-top_dtmt-10&quot;,&quot;expPrefix&quot;:&quot;top_dtmt&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-top_feed_card-1&quot;,&quot;expPrefix&quot;:&quot;top_feed_card&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-vd_adrupload_cdn-2&quot;,&quot;expPrefix&quot;:&quot;vd_adrupload_cdn&quot;,&quot;isDynamicallyUpdated&quot;:false,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-vd_upload_cdn-2&quot;,&quot;expPrefix&quot;:&quot;vd_upload_cdn&quot;,&quot;isDynamicallyUpdated&quot;:false,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;top_ftc-22&quot;,&quot;expPrefix&quot;:&quot;top_ftc&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false}],&quot;params&quot;:[{&quot;id&quot;:&quot;adr_next_answer_btn&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_ad_skip_pos&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;up&quot;},{&quot;id&quot;:&quot;ios_db_n_e&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_input_image&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_roundtable&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;A&quot;},{&quot;id&quot;:&quot;top_billupdate1&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_v_album&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_new_hybrid&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_entity&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;on&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_feedre_cpt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;101&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_follow_reason&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_sdk_data_switch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_grow_guide_login_4&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;adr_medal&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_tagore&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_book_is_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;hb_major_onebox&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_hybrid_intercepting&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_dtmt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_nucc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_anp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;android_answer_pager_off&quot;},{&quot;id&quot;:&quot;ios_article_recommend_column&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_pdf&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;},{&quot;id&quot;:&quot;ios_question_new_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_login_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_root&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_sjre&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_uit&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;hb_unfollow_reason&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_q_bar&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;NO&quot;},{&quot;id&quot;:&quot;adr_wxfb&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_mlssq&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_daxuechuisou&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;old&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_promo&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_ps&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_hweb&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_keywordab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_alt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;hb_consulting_price&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;np&quot;},{&quot;id&quot;:&quot;top_ad_slot&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_newfollowans&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;web_column_auto_invite&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_question_invite_v2&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_mbv&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;adr_rlp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_unif&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;off&quot;},{&quot;id&quot;:&quot;hb_report&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_answer_hybrid_preload&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_answer_preload&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_merger&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_liguangi_test&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;web_ask_flow&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;exp_a&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_guest_login&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_dt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_slot_ad_pos&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_consult&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;tp_sft&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;a&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;web_heifetz_column_api2&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_correct_ab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_feedre_itemcf&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;31&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_is_gr&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_medal_badge_view&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;ios_asp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;off&quot;},{&quot;id&quot;:&quot;ios_magitab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_major_onebox&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;major&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_feedre_rtt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;41&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_prt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;se_wiki_box&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recall_tb_follow&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;71&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_ad_cta&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_lans&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;close&quot;},{&quot;id&quot;:&quot;top_recall_follow_user&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;91&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_traffic_threshold&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;314572800&quot;},{&quot;id&quot;:&quot;ios_searchbox&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_quill_editor&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_manual_tag&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_raf&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_cta&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_spic&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_consulting_price&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;tp_write_pin_guide&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_ge4&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;tp_ios_topic_write_pin_guide&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_x_z_c0&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;adr_task_statistics&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;hb_stream_render&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_gif&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_mlt_model&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_local_server_enable&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_use_cashier&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;new&quot;},{&quot;id&quot;:&quot;hb_live_btn_color&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;default_color&quot;},{&quot;id&quot;:&quot;ios_video_upload_cdn&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_follow_question_hybrid&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_quality&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_android_gdt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;open&quot;},{&quot;id&quot;:&quot;se_tf&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_feedre&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;web_new_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_pay_view&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;new&quot;},{&quot;id&quot;:&quot;se_new_market_search&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;off&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_vd_score_new&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_ans_video&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;N&quot;},{&quot;id&quot;:&quot;ios_wbtp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_billab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_nuc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_lssq&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_video_feed&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;ls_new_video&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_fqa&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_vdio_rew&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_ps&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_le_nav&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_billread&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recall_core_interest&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;81&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_comment_new_editor&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_adr_vid_vol&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_keyword&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recall_tb_long&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;51&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_sqtc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;adr_anr_watch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;adr_launch_ad_new_strategy&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;open&quot;},{&quot;id&quot;:&quot;adr_traffic_monitor&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;top_free_content&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;-1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recommend_topic_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_tr&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_vd_op&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_android_video_continuous&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_dkts&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;20&quot;},{&quot;id&quot;:&quot;top_cc_at&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_retag&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_more_hyb_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_billvideo&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_7324&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_real_time_launch_http&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;http_off&quot;},{&quot;id&quot;:&quot;ls_play_continuous_order&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_edit_question&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_video_topic_volume_control&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_mini&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;ios_wxfb&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_nszt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_root_mg&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_video_fix_position&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_real_time_launch_http&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;http_off&quot;},{&quot;id&quot;:&quot;adr_wxbk&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_adpar&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_followtop&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_spec_promo&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_traffic_leak&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;ios_ios_launch_mp4&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;se_auto_syn&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;se_refactored_search_index&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_bill&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_pfq&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recall_tb&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_user_gift&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_dkts&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;200&quot;},{&quot;id&quot;:&quot;web_stream_render&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_video_continuous&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_gr_topic_reweight&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_videos_priority&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;-1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;web_card_style&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;b&quot;},{&quot;id&quot;:&quot;ios_invite_ans&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;A&quot;},{&quot;id&quot;:&quot;top_gr_auto_model&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_ntr&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_bugly&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;},{&quot;id&quot;:&quot;ios_qtoc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_billpic&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recall_deep_user&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_test_4_liguangyi&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;hb_active_answerer&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_amap&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;y&quot;},{&quot;id&quot;:&quot;ios_hybrid_editor_v3&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_webp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_recall&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;hb_liguangyi_test&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;adr_perm&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_gemini_service&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;content&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;adr_new_roundtable&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;adr_pdf&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;},{&quot;id&quot;:&quot;adr_video_upload_cdn&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;pin_efs&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;orig&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_new_answer_pager&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;ios_more_editcard&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;id&quot;:&quot;hb_best_answerer&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_profile_badge&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;id&quot;:&quot;ios_profile_sig&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;id&quot;:&quot;se_minor_onebox&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;d&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_tag_isolation&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;tp_discussion_feed_card_type&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_article_new_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_recommend_column&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_topsearch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_newfollow&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;web_logoc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;blue&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_cashier_color&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_ad_web_cache&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_ff_cardtype&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;A&quot;},{&quot;id&quot;:&quot;top_new_user_gift&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_tffrt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_ques_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_use_gd&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;},{&quot;id&quot;:&quot;ios_1752&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_lowup&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_test_delete&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_km_center&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_launch_timeout&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;-1&quot;},{&quot;id&quot;:&quot;top_feedtopiccard&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_yc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_unfollow_reason&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_next_ans&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;N&quot;},{&quot;id&quot;:&quot;top_root_few_topic&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_roundtable&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_wbtp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;adr_mqtt_5_24_0&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_pre_load_html&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_gi&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;se_relevant_query&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;old&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_f_r_nb&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_topic_feedre&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;21&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_universalebook&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_android_medal_badge_view&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;web_question_invite&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;N&quot;},{&quot;id&quot;:&quot;hb_billboard&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_memberfree&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_nad&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_nmt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_invite&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;se_rescore&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_multi_model&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_retagg&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_profile_label&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;ios_article_new_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_cashier_color&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;-1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_video_rew&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_member_switch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;hb_recommend_column&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_30&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_distinction&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_gr_model&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_mini&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;ios_q_bar&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;NO&quot;},{&quot;id&quot;:&quot;adr_feed_video_continuous&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_editor_version&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;V2&quot;},{&quot;id&quot;:&quot;adr_spic&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_consultation&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_nid&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_mqtt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_book_is_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_vid_home&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;pin_ef&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;orig&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_hca&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_no_weighing&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_rank&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_yhgc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_topsearch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;ios_psn&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;},{&quot;id&quot;:&quot;ios_vid_qt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_billboard_count&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_notif_new_invite&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;off&quot;},{&quot;id&quot;:&quot;adr_profile_medal&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_question_invite_v2&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_hqt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_root_web&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_vds_alb_pos&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_android_launch_ad_mp4&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;open&quot;},{&quot;id&quot;:&quot;zr_ans_rec&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;gbrank&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_q_a_c&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_video_agent_4_22&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;top_sj&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_consultation&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_wxbk&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_recall_tb_short&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;61&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_root_ac&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_apm&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_ebook&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_tmt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_video_score&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_an&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;se_consulting_switch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;off&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;se_ingress&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;off&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;}],&quot;chains&quot;:[{&quot;chainId&quot;:&quot;_all_&quot;}]},&quot;triggers&quot;:{}},&quot;userAgent&quot;:{&quot;Edge&quot;:false,&quot;Wechat&quot;:false,&quot;Weibo&quot;:false,&quot;QQ&quot;:false,&quot;Mobile&quot;:false,&quot;Android&quot;:false,&quot;iOS&quot;:false,&quot;isAppleDevice&quot;:false,&quot;Zhihu&quot;:false,&quot;ZhihuHybrid&quot;:false,&quot;isBot&quot;:false,&quot;Tablet&quot;:false,&quot;UC&quot;:false,&quot;Sogou&quot;:false,&quot;Qihoo&quot;:false,&quot;Baidu&quot;:false,&quot;isWebView&quot;:false,&quot;origin&quot;:&quot;Custom User Agent&quot;},&quot;trafficSource&quot;:&quot;production&quot;,&quot;edition&quot;:{&quot;baidu&quot;:false,&quot;sogou&quot;:false,&quot;baiduBeijing&quot;:false,&quot;yidianzixun&quot;:false},&quot;theme&quot;:&quot;light&quot;,&quot;referer&quot;:&quot;&quot;,&quot;conf&quot;:{},&quot;ipInfo&quot;:{},&quot;logged&quot;:false,&quot;tdkInfo&quot;:{}},&quot;me&quot;:{&quot;accountInfoLoadStatus&quot;:{},&quot;organizationProfileStatus&quot;:{},&quot;columnContributions&quot;:[]},&quot;comments&quot;:{&quot;stickers&quot;:[],&quot;commentWithPicPermission&quot;:{},&quot;notificationsComments&quot;:{},&quot;pagination&quot;:{},&quot;collapsed&quot;:{},&quot;reverse&quot;:{},&quot;reviewing&quot;:{},&quot;conversation&quot;:{},&quot;conversationMore&quot;:{},&quot;parent&quot;:{}},&quot;pushNotifications&quot;:{&quot;default&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;follow&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;vote_thank&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;currentTab&quot;:&quot;default&quot;,&quot;notificationsCount&quot;:{&quot;default&quot;:0,&quot;follow&quot;:0,&quot;vote_thank&quot;:0}},&quot;messages&quot;:{&quot;data&quot;:{},&quot;currentTab&quot;:&quot;common&quot;,&quot;messageCount&quot;:0},&quot;register&quot;:{&quot;registerValidateSucceeded&quot;:null,&quot;registerValidateErrors&quot;:{},&quot;registerConfirmError&quot;:null,&quot;sendDigitsError&quot;:null,&quot;registerConfirmSucceeded&quot;:null},&quot;login&quot;:{&quot;loginUnregisteredError&quot;:false,&quot;loginBindWechatError&quot;:false,&quot;loginConfirmError&quot;:null,&quot;sendDigitsError&quot;:null,&quot;validateDigitsError&quot;:false,&quot;loginConfirmSucceeded&quot;:null,&quot;qrcodeLoginToken&quot;:&quot;&quot;,&quot;qrcodeLoginScanStatus&quot;:0,&quot;qrcodeLoginError&quot;:null,&quot;qrcodeLoginReturnNewToken&quot;:false},&quot;active&quot;:{&quot;sendDigitsError&quot;:null,&quot;activeConfirmSucceeded&quot;:null,&quot;activeConfirmError&quot;:null},&quot;switches&quot;:{},&quot;captcha&quot;:{&quot;captchaNeeded&quot;:false,&quot;captchaValidated&quot;:false,&quot;captchaBase64String&quot;:null,&quot;captchaValidationMessage&quot;:null,&quot;loginCaptchaExpires&quot;:false},&quot;sms&quot;:{&quot;supportedCountries&quot;:[]},&quot;coupon&quot;:{&quot;isRedeemingCoupon&quot;:false},&quot;question&quot;:{&quot;followers&quot;:{},&quot;concernedFollowers&quot;:{},&quot;answers&quot;:{},&quot;hiddenAnswers&quot;:{},&quot;createdAnswers&quot;:{},&quot;collapsedAnswers&quot;:{},&quot;notificationAnswers&quot;:{},&quot;invitationCandidates&quot;:{},&quot;inviters&quot;:{},&quot;invitees&quot;:{},&quot;similarQuestions&quot;:{},&quot;relatedCommodities&quot;:{},&quot;recommendReadings&quot;:{},&quot;bio&quot;:{},&quot;brand&quot;:{},&quot;permission&quot;:{},&quot;advancedStyle&quot;:{},&quot;commonAnswerCount&quot;:0,&quot;hiddenAnswerCount&quot;:0,&quot;meta&quot;:{},&quot;autoInvitation&quot;:{},&quot;simpleConcernedFollowers&quot;:{}},&quot;shareTexts&quot;:{},&quot;answers&quot;:{&quot;voters&quot;:{},&quot;copyrightApplicants&quot;:{},&quot;favlists&quot;:{},&quot;newAnswer&quot;:{},&quot;concernedUpvoters&quot;:{},&quot;simpleConcernedUpvoters&quot;:{}},&quot;banner&quot;:{},&quot;topic&quot;:{&quot;bios&quot;:{},&quot;hot&quot;:{},&quot;newest&quot;:{},&quot;top&quot;:{},&quot;unanswered&quot;:{},&quot;questions&quot;:{},&quot;followers&quot;:{},&quot;contributors&quot;:{},&quot;parent&quot;:{},&quot;children&quot;:{},&quot;bestAnswerers&quot;:{},&quot;wikiMeta&quot;:{},&quot;index&quot;:{},&quot;intro&quot;:{},&quot;meta&quot;:{},&quot;schema&quot;:{}},&quot;explore&quot;:{&quot;recommendations&quot;:{}},&quot;articles&quot;:{&quot;voters&quot;:{}},&quot;favlists&quot;:{&quot;relations&quot;:{}},&quot;pins&quot;:{&quot;voters&quot;:{}},&quot;topstory&quot;:{&quot;topstorys&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;recommend&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;follow&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;followWonderful&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;sidebar&quot;:null,&quot;announcement&quot;:{},&quot;hotList&quot;:[],&quot;guestFeeds&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;followExtra&quot;:{&quot;isNewUser&quot;:null,&quot;isFetched&quot;:false,&quot;followCount&quot;:0,&quot;followers&quot;:[]}},&quot;upload&quot;:{},&quot;video&quot;:{&quot;data&quot;:{}},&quot;guide&quot;:{&quot;guide&quot;:{&quot;isFetching&quot;:false,&quot;isShowGuide&quot;:false}},&quot;reward&quot;:{&quot;answer&quot;:{},&quot;article&quot;:{},&quot;question&quot;:{}},&quot;search&quot;:{&quot;recommendSearch&quot;:[],&quot;topSearch&quot;:{},&quot;attachedInfo&quot;:{},&quot;nextOffset&quot;:{},&quot;generalByQuery&quot;:{},&quot;generalByQueryInADay&quot;:{},&quot;generalByQueryInAWeek&quot;:{},&quot;generalByQueryInThreeMonths&quot;:{},&quot;peopleByQuery&quot;:{},&quot;topicByQuery&quot;:{},&quot;columnByQuery&quot;:{},&quot;liveByQuery&quot;:{},&quot;albumByQuery&quot;:{},&quot;eBookByQuery&quot;:{}},&quot;creator&quot;:{&quot;tools&quot;:{&quot;question&quot;:{&quot;invitationCount&quot;:{&quot;questionFolloweeCount&quot;:0,&quot;questionTotalCount&quot;:0},&quot;goodatTopics&quot;:[]},&quot;customPromotion&quot;:{&quot;itemLists&quot;:{}}},&quot;explore&quot;:{&quot;academy&quot;:{&quot;tabs&quot;:[],&quot;article&quot;:{}}},&quot;rights&quot;:[],&quot;rightsStatus&quot;:{},&quot;levelUpperLimit&quot;:10,&quot;account&quot;:{&quot;growthLevel&quot;:{}}},&quot;publicEditPermission&quot;:{}}" data-config="false" data-useragent="{&quot;os&quot;:{},&quot;browser&quot;:{}}"></div><script src="https://static.zhihu.com/heifetz/vendor.7c9abc3e398528f8abf1.js"></script><script src="https://static.zhihu.com/heifetz/main.raven.20ecf75e0f2667f5d28a.js" defer=""></script><script src="https://static.zhihu.com/heifetz/main.app.88963c0c1a59d5eb2ece.js"></script><script src="https://static.zhihu.com/heifetz/main.people-routes.b6887e7d44fa143faf31.js"></script></body></html>