<!doctype html>
<html lang="zh" data-hairline="true" data-theme="light"><head><meta charSet="utf-8"/><title data-react-helmet="true">鱼画 - 知乎</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"/><meta name="renderer" content="webkit"/><meta name="force-rendering" content="webkit"/><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"/><title>知乎 - 有问题上知乎</title><meta name="description" content="有问题，上知乎。知乎是中文互联网知名知识分享平台，以「知识连接一切」为愿景，致力于构建一个人人都可以便捷接入的知识分享网络，让人们便捷地与世界分享知识、经验和见解，发现更大的世界。"/><link data-react-helmet="true" rel="prefetch" href="https://pic4.zhimg.com/80/v2-15145655e98f1ea985e05fddfd09bb37_r.jpg"/><link rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/static/favicon.ico"/><link rel="search" type="application/opensearchdescription+xml" href="https://static.zhihu.com/static/search.xml" title="知乎"/><link rel="dns-prefetch" href="//static.zhimg.com"/><link rel="dns-prefetch" href="//pic1.zhimg.com"/><link rel="dns-prefetch" href="//pic2.zhimg.com"/><link rel="dns-prefetch" href="//pic3.zhimg.com"/><link rel="dns-prefetch" href="//pic4.zhimg.com"/><link href="https://static.zhihu.com/heifetz/main.app.ae5f819ea51859c3afe0.css" rel="stylesheet"/></head><body class="Entry-body"><div id="root"><div data-zop-usertoken="{}" data-reactroot=""><div class="LoadingBar"></div><div><header role="banner" class="Sticky AppHeader" data-za-module="TopNavBar"><div class="AppHeader-inner"><a href="//www.zhihu.com" aria-label="知乎"><svg viewBox="0 0 200 91" class="Icon ZhihuLogo ZhihuLogo--blue Icon--logo" style="height:30px;width:64px" width="64" height="30" aria-hidden="true"><title></title><g><path d="M53.29 80.035l7.32.002 2.41 8.24 13.128-8.24h15.477v-67.98H53.29v67.978zm7.79-60.598h22.756v53.22h-8.73l-8.718 5.473-1.587-5.46-3.72-.012v-53.22zM46.818 43.162h-16.35c.545-8.467.687-16.12.687-22.955h15.987s.615-7.05-2.68-6.97H16.807c1.09-4.1 2.46-8.332 4.1-12.708 0 0-7.523 0-10.085 6.74-1.06 2.78-4.128 13.48-9.592 24.41 1.84-.2 7.927-.37 11.512-6.94.66-1.84.785-2.08 1.605-4.54h9.02c0 3.28-.374 20.9-.526 22.95H6.51c-3.67 0-4.863 7.38-4.863 7.38H22.14C20.765 66.11 13.385 79.24 0 89.62c6.403 1.828 12.784-.29 15.937-3.094 0 0 7.182-6.53 11.12-21.64L43.92 85.18s2.473-8.402-.388-12.496c-2.37-2.788-8.768-10.33-11.496-13.064l-4.57 3.627c1.363-4.368 2.183-8.61 2.46-12.71H49.19s-.027-7.38-2.372-7.38zm128.752-.502c6.51-8.013 14.054-18.302 14.054-18.302s-5.827-4.625-8.556-1.27c-1.874 2.548-11.51 15.063-11.51 15.063l6.012 4.51zm-46.903-18.462c-2.814-2.577-8.096.667-8.096.667s12.35 17.2 12.85 17.953l6.08-4.29s-8.02-11.752-10.83-14.33zM199.99 46.5c-6.18 0-40.908.292-40.953.292v-31.56c1.503 0 3.882-.124 7.14-.376 12.773-.753 21.914-1.25 27.427-1.504 0 0 3.817-8.496-.185-10.45-.96-.37-7.24 1.43-7.24 1.43s-51.63 5.153-72.61 5.64c.5 2.756 2.38 5.336 4.93 6.11 4.16 1.087 7.09.53 15.36.277 7.76-.5 13.65-.76 17.66-.76v31.19h-41.71s.88 6.97 7.97 7.14h33.73v22.16c0 4.364-3.498 6.87-7.65 6.6-4.4.034-8.15-.36-13.027-.566.623 1.24 1.977 4.496 6.035 6.824 3.087 1.502 5.054 2.053 8.13 2.053 9.237 0 14.27-5.4 14.027-14.16V53.93h38.235c3.026 0 2.72-7.432 2.72-7.432z" fill-rule="evenodd"/></g></svg></a><nav role="navigation" class="AppHeader-nav"><a class="AppHeader-navItem" href="//www.zhihu.com/" data-za-not-track-link="true">首页</a><a class="AppHeader-navItem" href="//www.zhihu.com/explore" data-za-not-track-link="true">发现</a><a href="//www.zhihu.com/topic" class="AppHeader-navItem" data-za-not-track-link="true">话题</a></nav><div class="SearchBar" role="search" data-za-module="PresetWordItem"><div class="SearchBar-toolWrapper"><form class="SearchBar-tool"><div><div class="Popover"><div class="SearchBar-input Input-wrapper Input-wrapper--grey"><input type="text" maxLength="100" value="" autoComplete="off" role="combobox" aria-expanded="false" aria-autocomplete="list" aria-activedescendant="null--1" id="null-toggle" aria-haspopup="true" aria-owns="null-content" class="Input" placeholder=""/><div class="Input-after"><button aria-label="搜索" type="button" class="Button SearchBar-searchIcon Button--primary"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Search" fill="currentColor" viewBox="0 0 24 24" width="18" height="18"><path d="M17.068 15.58a8.377 8.377 0 0 0 1.774-5.159 8.421 8.421 0 1 0-8.42 8.421 8.38 8.38 0 0 0 5.158-1.774l3.879 3.88c.957.573 2.131-.464 1.488-1.49l-3.879-3.878zm-6.647 1.157a6.323 6.323 0 0 1-6.316-6.316 6.323 6.323 0 0 1 6.316-6.316 6.323 6.323 0 0 1 6.316 6.316 6.323 6.323 0 0 1-6.316 6.316z" fill-rule="evenodd"></path></svg></span></button></div></div></div></div></form></div></div><div class="AppHeader-userInfo"><div class="AppHeader-profile"><div><button type="button" class="Button AppHeader-login Button--blue">登录</button><button type="button" class="Button Button--primary Button--blue">加入知乎</button></div></div></div></div></header></div><main role="main" class="App-main"><div itemProp="people" itemType="http://schema.org/Person" itemscope=""><meta itemProp="url" content="https://www.zhihu.com/people/ceng-yu-wei-36-33"/><meta itemProp="gender" content="Male"/><meta itemProp="image" content="https://pic2.zhimg.com/v2-84dfbbb4cfbc1f16f82fb7404f6eeab9_is.jpg"/><meta itemProp="zhihu:voteupCount" content="36"/><meta itemProp="zhihu:thankedCount" content="3"/><meta itemProp="zhihu:followerCount" content="14"/><meta itemProp="zhihu:answerCount" content="10"/><meta itemProp="zhihu:articlesCount" content="0"/><div id="ProfileHeader" class="ProfileHeader"><div class="Card"><div class="ProfileHeader-userCover"><div class="UserCover"><div class="VagueImage UserCover-image" data-src="https://pic4.zhimg.com/80/v2-15145655e98f1ea985e05fddfd09bb37_r.jpg"><div class="VagueImage-mask is-active"></div></div></div></div><div class="ProfileHeader-wrapper"><div class="ProfileHeader-main"><div class="UserAvatar ProfileHeader-avatar" style="top:-57px"><img class="Avatar Avatar--large UserAvatar-inner" width="160" height="160" src="https://pic2.zhimg.com/v2-84dfbbb4cfbc1f16f82fb7404f6eeab9_xl.jpg" srcSet="https://pic2.zhimg.com/v2-84dfbbb4cfbc1f16f82fb7404f6eeab9_xll.jpg 2x"/></div><div class="ProfileHeader-content"><div class="ProfileHeader-contentHead"><h1 class="ProfileHeader-title"><span class="ProfileHeader-name">鱼画</span><span class="RichText ztext ProfileHeader-headline"></span></h1></div><div style="overflow:hidden;transition:height 300ms ease-out" class="ProfileHeader-contentBody"><div><div class="ProfileHeader-info"><div class="ProfileHeader-infoItem"><div class="ProfileHeader-iconWrapper"><svg width="14" height="16" viewBox="0 0 14 14" class="Icon Icon--male" style="height:16px;width:14px" aria-hidden="true"><title></title><g><path d="M3.025 10.64c-1.367-1.366-1.367-3.582 0-4.95 1.367-1.366 3.583-1.366 4.95 0 1.367 1.368 1.367 3.584 0 4.95-1.367 1.368-3.583 1.368-4.95 0zm10.122-9.368c-.002-.414-.34-.75-.753-.753L8.322 0c-.413-.002-.746.33-.744.744.002.413.338.75.75.752l2.128.313c-.95.953-1.832 1.828-1.832 1.828-2.14-1.482-5.104-1.27-7.013.64-2.147 2.147-2.147 5.63 0 7.777 2.15 2.148 5.63 2.148 7.78 0 1.908-1.91 2.12-4.873.636-7.016l1.842-1.82.303 2.116c.003.414.34.75.753.753.413.002.746-.332.744-.745l-.52-4.073z" fill-rule="evenodd"/></g></svg></div></div></div></div></div><div class="ProfileHeader-contentFooter"><button type="button" class="Button ProfileHeader-expandButton Button--plain"><svg viewBox="0 0 10 6" class="Icon ProfileHeader-arrowIcon Icon--arrow" style="height:16px;width:10px" width="10" height="16" aria-hidden="true"><title></title><g><path d="M8.716.217L5.002 4 1.285.218C.99-.072.514-.072.22.218c-.294.29-.294.76 0 1.052l4.25 4.512c.292.29.77.29 1.063 0L9.78 1.27c.293-.29.293-.76 0-1.052-.295-.29-.77-.29-1.063 0z"/></g></svg>查看详细资料</button><div class="MemberButtonGroup ProfileButtonGroup ProfileHeader-buttons"><button type="button" class="Button FollowButton Button--primary Button--blue"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Plus FollowButton-icon" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M13.491 10.488s-.012-5.387 0-5.998c-.037-1.987-3.035-1.987-2.997 0-.038 1.912 0 5.998 0 5.998H4.499c-1.999.01-1.999 3.009 0 3.009s5.995-.01 5.995-.01v5.999c0 2.019 3.006 2.019 2.997 0-.01-2.019 0-5.998 0-5.998s3.996.009 6.004.009c2.008 0 2.008-3-.01-3.009h-5.994z" fill-rule="evenodd"></path></svg></span>关注他</button><button type="button" class="Button Button--grey Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Comments Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M11 2c5.571 0 9 4.335 9 8 0 6-6.475 9.764-11.481 8.022-.315-.07-.379-.124-.78.078-1.455.54-2.413.921-3.525 1.122-.483.087-.916-.25-.588-.581 0 0 .677-.417.842-1.904.064-.351-.14-.879-.454-1.171A8.833 8.833 0 0 1 2 10c0-3.87 3.394-8 9-8zm10.14 9.628c.758.988.86 2.009.86 3.15 0 1.195-.619 3.11-1.368 3.938-.209.23-.354.467-.308.722.12 1.073.614 1.501.614 1.501.237.239-.188.562-.537.5-.803-.146-1.495-.42-2.546-.811-.29-.146-.336-.106-.563-.057-2.043.711-4.398.475-6.083-.927 5.965-.524 8.727-3.03 9.93-8.016z" fill-rule="evenodd"></path></svg></span>发私信</button></div></div></div></div></div></div></div><div class="Profile-main"><div class="Profile-mainColumn"><div class="Card ProfileMain" id="ProfileMain"><div class="ProfileMain-header"><ul role="tablist" class="Tabs ProfileMain-tabs"><li role="tab" class="Tabs-item Tabs-item--noMeta" aria-controls="Profile-activities"><a class="Tabs-link" href="/people/ceng-yu-wei-36-33/activities">动态</a></li><li role="tab" class="Tabs-item" aria-controls="Profile-answers"><a class="Tabs-link" href="/people/ceng-yu-wei-36-33/answers">回答<span class="Tabs-meta">10</span></a></li><li role="tab" class="Tabs-item" aria-controls="Profile-asks"><a class="Tabs-link" href="/people/ceng-yu-wei-36-33/asks">提问<span class="Tabs-meta">8</span></a></li><li role="tab" class="Tabs-item" aria-controls="Profile-posts"><a class="Tabs-link" href="/people/ceng-yu-wei-36-33/posts">文章<span class="Tabs-meta">0</span></a></li><li role="tab" class="Tabs-item" aria-controls="Profile-columns"><a class="Tabs-link" href="/people/ceng-yu-wei-36-33/columns">专栏<span class="Tabs-meta">0</span></a></li><li role="tab" class="Tabs-item" aria-controls="Profile-pins"><a meta="0" class="Tabs-link" href="/people/ceng-yu-wei-36-33/pins">想法<span class="Tabs-meta">0</span></a></li><li role="tab" class="Tabs-item Tabs-item--noMeta"><div class="Popover Tabs-link"><button type="button" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" class="Button ProfileMain-menuToggler Button--plain">更多<svg viewBox="0 0 10 6" class="Icon ProfileMain-tabIcon Icon--arrow" style="height:16px;width:10px" width="10" height="16" aria-hidden="true"><title></title><g><path d="M8.716.217L5.002 4 1.285.218C.99-.072.514-.072.22.218c-.294.29-.294.76 0 1.052l4.25 4.512c.292.29.77.29 1.063 0L9.78 1.27c.293-.29.293-.76 0-1.052-.295-.29-.77-.29-1.063 0z"/></g></svg></button></div></li></ul></div><div class="List ProfileActivities" id="Profile-activities" data-zop-feedlistfather="1"><div class="List-header"><h4 class="List-headerText"><span>他<!-- -->的动态</span></h4><div class="List-headerOptions"></div></div><div class=""><div class="List-item"><div class="List-itemMeta"><div class="ActivityItem-meta"><span class="ActivityItem-metaTitle">赞同了回答</span><span>1 小时前</span></div></div><div class="ContentItem AnswerItem" data-zop="{&quot;authorName&quot;:&quot;钻石太太Caroline&quot;,&quot;itemId&quot;:514311114,&quot;title&quot;:&quot;30岁左右的人，来谈谈你犯了哪些错误？&quot;,&quot;type&quot;:&quot;answer&quot;}" name="514311114" itemProp="answer" itemType="http://schema.org/Answer" itemscope=""><h2 class="ContentItem-title"><div itemProp="zhihu:question" itemType="http://schema.org/Question" itemscope=""><meta itemProp="url" content="https://www.zhihu.com/question/279387872"/><meta itemProp="name" content="30岁左右的人，来谈谈你犯了哪些错误？"/><a target="_blank" data-za-detail-view-element_name="Title" href="/question/279387872/answer/514311114">30岁左右的人，来谈谈你犯了哪些错误？</a></div></h2><div class="ContentItem-meta"><div class="AuthorInfo AnswerItem-authorInfo" itemProp="author" itemscope="" itemType="http://schema.org/Person"><meta itemProp="name" content="钻石太太Caroline"/><meta itemProp="image" content="https://pic4.zhimg.com/50/v2-f5fbf487b92d61e5f70e1c2e33e99a27_s.jpg"/><meta itemProp="url" content="https://www.zhihu.com/people/caroline257"/><meta itemProp="zhihu:followerCount"/><span class="UserLink AuthorInfo-avatarWrapper"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="//www.zhihu.com/people/caroline257"><img class="Avatar AuthorInfo-avatar" width="38" height="38" src="https://pic4.zhimg.com/50/v2-f5fbf487b92d61e5f70e1c2e33e99a27_xs.jpg" srcSet="https://pic4.zhimg.com/50/v2-f5fbf487b92d61e5f70e1c2e33e99a27_l.jpg 2x" alt="钻石太太Caroline"/></a></div></div></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="//www.zhihu.com/people/caroline257">钻石太太Caroline</a></div></div></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"><div class="RichText ztext AuthorInfo-badgeText">拍卖行珠宝部主管，公众号“钻石太太”</div></div></div></div></div><div class="AnswerItem-extraInfo"><span class="Voters"><button type="button" class="Button Button--plain">272 人<!-- -->赞同了该回答</button></span></div></div><meta itemProp="image" content=""/><meta itemProp="upvoteCount" content="272"/><meta itemProp="url" content="https://www.zhihu.com/question/279387872/answer/514311114"/><meta itemProp="dateCreated" content="2018-10-19T16:54:15.000Z"/><meta itemProp="dateModified" content="2018-10-20T01:28:59.000Z"/><meta itemProp="commentCount" content="41"/><div class="RichContent is-collapsed"><div class="RichContent-inner"><span class="RichText ztext CopyrightRichText-richText" itemProp="text">助手看我停留在这个页面上，已经好几天了。她忍不住问我，老板你干什么呢，我说，我想好好回答一个问题。 说来也巧，上上个月，我刚满30，如果让我回忆一下目前的状态，可能就是：想实现的都实现了，没想实现的也实现了。 我曾经做梦梦见回到了中学时代，最后醒来的时候觉得还是现实更好一些，很多人都想人生重来，总是后悔当初，唾骂失败，但我从不回头，一路向前。 很简单，有什么可后悔，<b>人生就是一个不断试错的过程。</b> 现在回…</span><button type="button" class="Button ContentItem-more Button--plain">阅读全文<span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--ArrowDown ContentItem-arrowIcon" fill="currentColor" viewBox="0 0 24 24" width="24" height="24"><path d="M12 13L8.285 9.218a.758.758 0 0 0-1.064 0 .738.738 0 0 0 0 1.052l4.249 4.512a.758.758 0 0 0 1.064 0l4.246-4.512a.738.738 0 0 0 0-1.052.757.757 0 0 0-1.063 0L12.002 13z" fill-rule="evenodd"></path></svg></span></button></div><div class="ContentItem-actions"><span><button aria-label="赞同" type="button" class="Button VoteButton VoteButton--up"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--TriangleUp VoteButton-TriangleUp" fill="currentColor" viewBox="0 0 24 24" width="10" height="10"><path d="M2 18.242c0-.326.088-.532.237-.896l7.98-13.203C10.572 3.57 11.086 3 12 3c.915 0 1.429.571 1.784 1.143l7.98 13.203c.15.364.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H3.955c-1.08 0-1.955-.517-1.955-1.9z" fill-rule="evenodd"></path></svg></span>赞同 <!-- -->272</button><button aria-label="反对" type="button" class="Button VoteButton VoteButton--down"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--TriangleDown" fill="currentColor" viewBox="0 0 24 24" width="10" height="10"><path d="M20.044 3H3.956C2.876 3 2 3.517 2 4.9c0 .326.087.533.236.896L10.216 19c.355.571.87 1.143 1.784 1.143s1.429-.572 1.784-1.143l7.98-13.204c.149-.363.236-.57.236-.896 0-1.386-.876-1.9-1.956-1.9z" fill-rule="evenodd"></path></svg></span></button></span><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd"></path></svg></span>41 条评论</button><div class="Popover ShareMenu ContentItem-action"><div class="" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd"></path></svg></span>分享</button></div></div><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd"></path></svg></span>收藏</button><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Heart Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M2 8.437C2 5.505 4.294 3.094 7.207 3 9.243 3 11.092 4.19 12 6c.823-1.758 2.649-3 4.651-3C19.545 3 22 5.507 22 8.432 22 16.24 13.842 21 12 21 10.158 21 2 16.24 2 8.437z" fill-rule="evenodd"></path></svg></span>感谢</button></div></div></div></div><div class="List-item"><div class="List-itemMeta"><div class="ActivityItem-meta"><span class="ActivityItem-metaTitle">赞同了回答</span><span>6 小时前</span></div></div><div class="ContentItem AnswerItem" data-zop="{&quot;authorName&quot;:&quot;徐辰&quot;,&quot;itemId&quot;:513201067,&quot;title&quot;:&quot;有哪些程序员容易片面理解的英文多义词？&quot;,&quot;type&quot;:&quot;answer&quot;}" name="513201067" itemProp="answer" itemType="http://schema.org/Answer" itemscope=""><h2 class="ContentItem-title"><div itemProp="zhihu:question" itemType="http://schema.org/Question" itemscope=""><meta itemProp="url" content="https://www.zhihu.com/question/298951376"/><meta itemProp="name" content="有哪些程序员容易片面理解的英文多义词？"/><a target="_blank" data-za-detail-view-element_name="Title" href="/question/298951376/answer/513201067">有哪些程序员容易片面理解的英文多义词？</a></div></h2><div class="ContentItem-meta"><div class="AuthorInfo AnswerItem-authorInfo" itemProp="author" itemscope="" itemType="http://schema.org/Person"><meta itemProp="name" content="徐辰"/><meta itemProp="image" content="https://pic4.zhimg.com/50/b7b47a8e1_s.jpg"/><meta itemProp="url" content="https://www.zhihu.com/people/windoze"/><meta itemProp="zhihu:followerCount"/><span class="UserLink AuthorInfo-avatarWrapper"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="//www.zhihu.com/people/windoze"><img class="Avatar AuthorInfo-avatar" width="38" height="38" src="https://pic4.zhimg.com/50/b7b47a8e1_xs.jpg" srcSet="https://pic4.zhimg.com/50/b7b47a8e1_l.jpg 2x" alt="徐辰"/></a></div></div></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="//www.zhihu.com/people/windoze">徐辰</a></div></div></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"><div class="RichText ztext AuthorInfo-badgeText">GOP GHOP SOOP Coder</div></div></div></div></div><div class="AnswerItem-extraInfo"><span class="Voters"><button type="button" class="Button Button--plain">260 人<!-- -->赞同了该回答</button></span></div></div><meta itemProp="image" content=""/><meta itemProp="upvoteCount" content="260"/><meta itemProp="url" content="https://www.zhihu.com/question/298951376/answer/513201067"/><meta itemProp="dateCreated" content="2018-10-18T05:08:07.000Z"/><meta itemProp="dateModified" content="2018-10-18T06:46:02.000Z"/><meta itemProp="commentCount" content="23"/><div class="RichContent is-collapsed"><div class="RichContent-inner"><span class="RichText ztext CopyrightRichText-richText" itemProp="text">Order的意思其实是顺序，然而程序员都用sort，Sort的意思其实是分类，然而程序员都用classify。Classify的意思其实是保密，然而程序员都用encrypt。Encrypt的意思其实是编码，然而程序员都用encode。Encode的意思其实是编译，然而程序员都用compile。Compile的意思其实是汇总，然而程序员都用collect。Collect的意思其实是募捐，然而程序员并没有钱去募捐，只能捡垃圾。随手写着玩的，有些词解释的比较牵强，不要太纠结准确度。</span><button type="button" class="Button ContentItem-more Button--plain">阅读全文<span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--ArrowDown ContentItem-arrowIcon" fill="currentColor" viewBox="0 0 24 24" width="24" height="24"><path d="M12 13L8.285 9.218a.758.758 0 0 0-1.064 0 .738.738 0 0 0 0 1.052l4.249 4.512a.758.758 0 0 0 1.064 0l4.246-4.512a.738.738 0 0 0 0-1.052.757.757 0 0 0-1.063 0L12.002 13z" fill-rule="evenodd"></path></svg></span></button></div><div class="ContentItem-actions"><span><button aria-label="赞同" type="button" class="Button VoteButton VoteButton--up"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--TriangleUp VoteButton-TriangleUp" fill="currentColor" viewBox="0 0 24 24" width="10" height="10"><path d="M2 18.242c0-.326.088-.532.237-.896l7.98-13.203C10.572 3.57 11.086 3 12 3c.915 0 1.429.571 1.784 1.143l7.98 13.203c.15.364.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H3.955c-1.08 0-1.955-.517-1.955-1.9z" fill-rule="evenodd"></path></svg></span>赞同 <!-- -->260</button><button aria-label="反对" type="button" class="Button VoteButton VoteButton--down"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--TriangleDown" fill="currentColor" viewBox="0 0 24 24" width="10" height="10"><path d="M20.044 3H3.956C2.876 3 2 3.517 2 4.9c0 .326.087.533.236.896L10.216 19c.355.571.87 1.143 1.784 1.143s1.429-.572 1.784-1.143l7.98-13.204c.149-.363.236-.57.236-.896 0-1.386-.876-1.9-1.956-1.9z" fill-rule="evenodd"></path></svg></span></button></span><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd"></path></svg></span>23 条评论</button><div class="Popover ShareMenu ContentItem-action"><div class="" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd"></path></svg></span>分享</button></div></div><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd"></path></svg></span>收藏</button><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Heart Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M2 8.437C2 5.505 4.294 3.094 7.207 3 9.243 3 11.092 4.19 12 6c.823-1.758 2.649-3 4.651-3C19.545 3 22 5.507 22 8.432 22 16.24 13.842 21 12 21 10.158 21 2 16.24 2 8.437z" fill-rule="evenodd"></path></svg></span>感谢</button></div></div></div></div><div></div></div></div></div></div><div class="Profile-sideColumn" data-za-module="RightSideBar"><div class="Card"><div class="Card-header Profile-sideColumnTitle"><div class="Card-headerText">个人成就</div></div><div class="Profile-sideColumnItems"><div class="Profile-sideColumnItem"><div class="IconGraf"><div class="IconGraf-iconWrapper"><svg viewBox="0 0 20 18" xmlns="http://www.w3.org/2000/svg" class="Icon IconGraf-icon Icon--like" style="height:16px;width:16px" width="16" height="16" aria-hidden="true"><title></title><g><path d="M.718 7.024c-.718 0-.718.63-.718.63l.996 9.693c0 .703.718.65.718.65h1.45c.916 0 .847-.65.847-.65V7.793c-.09-.88-.853-.79-.846-.79l-2.446.02zm11.727-.05S13.2 5.396 13.6 2.89C13.765.03 11.55-.6 10.565.53c-1.014 1.232 0 2.056-4.45 5.83C5.336 6.965 5 8.01 5 8.997v6.998c-.016 1.104.49 2 1.99 2h7.586c2.097 0 2.86-1.416 2.86-1.416s2.178-5.402 2.346-5.91c1.047-3.516-1.95-3.704-1.95-3.704l-5.387.007z"/></g></svg></div>获得 <!-- -->36<!-- --> 次赞同</div><div class="Profile-sideColumnItemValue">获得 3 次感谢
                ，
                6 次收藏</div></div><div class="Profile-sideColumnItem"><div class="IconGraf"><div class="IconGraf-iconWrapper"><svg width="16" height="16" viewBox="0 0 16 16" class="Icon IconGraf-icon Icon--commonEdit" style="height:16px;width:16px" aria-hidden="true"><title></title><g><path d="M8 15.5C3.858 15.5.5 12.142.5 8 .5 3.858 3.858.5 8 .5c4.142 0 7.5 3.358 7.5 7.5 0 4.142-3.358 7.5-7.5 7.5zm3.032-11.643c-.22-.214-.574-.208-.79.013L5.1 9.173 6.778 10.8l5.142-5.303c.215-.222.21-.575-.01-.79l-.878-.85zm-6.77 7.107L4 12l1.028-.293.955-.27L4.503 10l-.242.964z" fill-rule="evenodd"/></g></svg></div><a class="Profile-sideColumnItemLink" href="/people/ceng-yu-wei-36-33/logs" target="_blank">参与 <!-- -->69<!-- --> 次公共编辑</a></div><div class="Profile-sideColumnItemValue"></div></div></div></div><div class="Card FollowshipCard"><div class="NumberBoard FollowshipCard-counts NumberBoard--divider"><a type="button" class="Button NumberBoard-item Button--plain" href="/people/ceng-yu-wei-36-33/following"><div class="NumberBoard-itemInner"><div class="NumberBoard-itemName">关注了</div><strong class="NumberBoard-itemValue" title="284">284</strong></div></a><a type="button" class="Button NumberBoard-item Button--plain" href="/people/ceng-yu-wei-36-33/followers"><div class="NumberBoard-itemInner"><div class="NumberBoard-itemName">关注者</div><strong class="NumberBoard-itemValue" title="14">14</strong></div></a></div></div><div class="Profile-lightList"><a class="Profile-lightItem" href="/people/ceng-yu-wei-36-33/following/topics"><span class="Profile-lightItemName">关注的话题</span><span class="Profile-lightItemValue">249</span></a><a class="Profile-lightItem" href="/people/ceng-yu-wei-36-33/following/columns"><span class="Profile-lightItemName">关注的专栏</span><span class="Profile-lightItemValue">19</span></a><a class="Profile-lightItem" href="/people/ceng-yu-wei-36-33/following/questions"><span class="Profile-lightItemName">关注的问题</span><span class="Profile-lightItemValue">905</span></a><a class="Profile-lightItem" href="/people/ceng-yu-wei-36-33/following/collections"><span class="Profile-lightItemName">关注的收藏夹</span><span class="Profile-lightItemValue">12</span></a></div></div></div></div></main></div></div><div id="data" style="display:none" data-state="{&quot;common&quot;:{&quot;ask&quot;:{}},&quot;privacy&quot;:{&quot;showPrivacy&quot;:false},&quot;loading&quot;:{&quot;global&quot;:{&quot;count&quot;:0},&quot;local&quot;:{&quot;people/get/&quot;:false,&quot;people/getActivities/ceng-yu-wei-36-33&quot;:false}},&quot;entities&quot;:{&quot;users&quot;:{&quot;ceng-yu-wei-36-33&quot;:{&quot;isFollowed&quot;:false,&quot;educations&quot;:[],&quot;followingCount&quot;:284,&quot;voteFromCount&quot;:0,&quot;locations&quot;:[{&quot;introduction&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic1.zhimg.com/e82bab09c_is.jpg&quot;,&quot;name&quot;:&quot;江西省&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/topics/&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;&quot;,&quot;id&quot;:&quot;&quot;}],&quot;includedText&quot;:&quot;&quot;,&quot;pinsCount&quot;:0,&quot;isFollowing&quot;:false,&quot;isPrivacyProtected&quot;:false,&quot;accountStatus&quot;:[],&quot;includedArticlesCount&quot;:0,&quot;isForceRenamed&quot;:false,&quot;id&quot;:&quot;893b16856ce17265646c6d653d39f3a9&quot;,&quot;favoriteCount&quot;:3,&quot;voteupCount&quot;:36,&quot;commercialQuestionCount&quot;:0,&quot;isBlocking&quot;:false,&quot;followingColumnsCount&quot;:19,&quot;headline&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;ceng-yu-wei-36-33&quot;,&quot;participatedLiveCount&quot;:0,&quot;isAdvertiser&quot;:false,&quot;followingFavlistsCount&quot;:12,&quot;favoritedCount&quot;:6,&quot;isOrg&quot;:false,&quot;followerCount&quot;:14,&quot;employments&quot;:[],&quot;type&quot;:&quot;people&quot;,&quot;avatarHue&quot;:&quot;&quot;,&quot;avatarUrlTemplate&quot;:&quot;https://pic2.zhimg.com/v2-84dfbbb4cfbc1f16f82fb7404f6eeab9_{size}.jpg&quot;,&quot;followingTopicCount&quot;:249,&quot;description&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/v2-84dfbbb4cfbc1f16f82fb7404f6eeab9_is.jpg&quot;,&quot;columnsCount&quot;:0,&quot;hostedLiveCount&quot;:0,&quot;isActive&quot;:1479866454,&quot;thankToCount&quot;:0,&quot;mutualFolloweesCount&quot;:0,&quot;coverUrl&quot;:&quot;https://pic4.zhimg.com/v2-15145655e98f1ea985e05fddfd09bb37_r.jpg&quot;,&quot;thankFromCount&quot;:0,&quot;voteToCount&quot;:0,&quot;isBlocked&quot;:false,&quot;answerCount&quot;:10,&quot;allowMessage&quot;:false,&quot;articlesCount&quot;:0,&quot;name&quot;:&quot;鱼画&quot;,&quot;questionCount&quot;:8,&quot;userType&quot;:&quot;people&quot;,&quot;badge&quot;:[],&quot;includedAnswersCount&quot;:0,&quot;url&quot;:&quot;http://www.zhihu.com/people/893b16856ce17265646c6d653d39f3a9&quot;,&quot;messageThreadToken&quot;:&quot;0899370210&quot;,&quot;logsCount&quot;:69,&quot;followingQuestionCount&quot;:905,&quot;thankedCount&quot;:3,&quot;gender&quot;:1}},&quot;questions&quot;:{},&quot;answers&quot;:{&quot;484454218&quot;:{&quot;relationship&quot;:{&quot;isAuthor&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false,&quot;isNothelp&quot;:false,&quot;upvotedFolloweeIds&quot;:[]},&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;字节跳动人工智能实验室研究员一枚，入职工作一年，看到这个问题几乎从不在知乎上回答问题的我打算手动吹一波我司[笑哭]。入职的感受有很多，包括宽松的氛围，工程师文化，数据驱动，初创公司有活力等，上面的回答已经说了很多了，在此不再赘述。我想强调我感受最大的一点就是扁平，以及扁平给我带来的各种附加值。公司的扁平的本意可能是希望让大家畅所欲言，不要把精力都花在各种各样奇怪的事情上，业务上也确实如此。但是在我…&quot;,&quot;collection&quot;:{&quot;title&quot;:&quot;实习&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/collections/191439643&quot;,&quot;answerCount&quot;:148,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:1,&quot;isPublic&quot;:true,&quot;type&quot;:&quot;collection&quot;,&quot;id&quot;:191439643},&quot;createdTime&quot;:1535952761,&quot;previewType&quot;:&quot;default&quot;,&quot;id&quot;:484454218,&quot;isCopyable&quot;:true,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;WAZWY&quot;,&quot;headline&quot;:&quot;如切如磋 如琢如磨&quot;,&quot;urlToken&quot;:&quot;wazwy&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/19a00d29efa1a43704d25465c8200087&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/9eb33ab759444ca4a44a63809c9bd27d_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;19a00d29efa1a43704d25465c8200087&quot;},&quot;url&quot;:&quot;https://api.zhihu.com/answers/484454218&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;question&quot;:{&quot;author&quot;:{&quot;headline&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/aadd7b895_s.jpg&quot;,&quot;name&quot;:&quot;匿名用户&quot;,&quot;url&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;&quot;,&quot;type&quot;:&quot;people&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;id&quot;:&quot;0&quot;},&quot;created&quot;:1531886190,&quot;url&quot;:&quot;https://api.zhihu.com/questions/285747864&quot;,&quot;title&quot;:&quot;在字节跳动/抖音工作是种什么体验？&quot;,&quot;excerpt&quot;:&quot;毕业想去互联网公司工作，自己平时爱刷抖音，有咩大佬能说下在抖音工作是怎么样的？ 查了一下发现和今日头条、西瓜、火山是一家公司的，字节跳动其他部门的员工介绍下也可以。 谢谢！&quot;,&quot;answerCount&quot;:40,&quot;boundTopicIds&quot;:[99,368,1354,4908,209209],&quot;commentCount&quot;:0,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:1441,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:285747864},&quot;updatedTime&quot;:1535952761,&quot;content&quot;:&quot;&lt;p&gt;字节跳动人工智能实验室研究员一枚，入职工作一年，看到这个问题几乎从不在知乎上回答问题的我打算手动吹一波我司[笑哭]。&lt;/p&gt;&lt;p&gt;入职的感受有很多，包括宽松的氛围，工程师文化，数据驱动，初创公司有活力等，上面的回答已经说了很多了，在此不再赘述。我想强调我感受最大的一点就是扁平，以及扁平给我带来的各种附加值。&lt;/p&gt;&lt;p&gt;公司的扁平的本意可能是希望让大家畅所欲言，不要把精力都花在各种各样奇怪的事情上，业务上也确实如此。但是在我们Lab，扁平带来的又不仅如此。我们lab有很多非常senior的研究员，他们可能已经在这个领域里活跃了很久，经验丰富。正因为我们公司扁平的文化，使得我们这样junior的研究员能够在工作包括工作之余的时间里能够从他们身上学到很多。&lt;/p&gt;&lt;p&gt;比如我工位右边坐的就是少帅李磊，我们每天沟通次数非常多，沟通的内容从业务到学术，他经常能够给我一些非常有远见的建议，感觉每天和他交流大大提高了我的taste，拓宽了我的认知。&lt;/p&gt;&lt;p&gt;开会甚至包括食堂吃饭的时候经常碰到李航老师，吃饭的时候我们什么都聊，从当前的工作内容是否有趣，到讨论最近了解到的一些前沿技术。印象比较深刻的是有一次，我在想论文数量和质量的权衡问题，在当前某一个阶段，是数量更重要，还是质量更重要，李航老师从他的经历开始说起，最后十分肯定地告诉我数量肯定不是一个评价指标的时候让我受益良多。&lt;/p&gt;&lt;p&gt;再到维英，他经常会和我闲聊一些他对当前AI应用以及学术发展的看法，感觉立足点非常高，又充满激情，常能把我从一些琐碎的细节里拉出来，站到一个更高的层次上去观察我现在所做的事情是否真的值得做，以及哪些事情是更加值得做的。&lt;/p&gt;&lt;p&gt;除此之外，扁平也加强了不同方向的同事之间的交流，比如我经常会在吃饭的时候遇到其他方向的同事，也会向他们请教深度学习安全方面的问题，了解现在AI的系统支持的最新进展等。&lt;/p&gt;&lt;p&gt;综上，我感觉我不仅是业务能力，学术能力有了提高，自己对问题的认识，眼界也拓宽了。这一点是我感受最深的。&lt;/p&gt;&quot;,&quot;commentCount&quot;:10,&quot;voteupCount&quot;:61,&quot;reshipmentSettings&quot;:&quot;allowed&quot;,&quot;thanksCount&quot;:4,&quot;excerptNew&quot;:&quot;字节跳动人工智能实验室研究员一枚，入职工作一年，看到这个问题几乎从不在知乎上回答问题的我打算手动吹一波我司[笑哭]。 入职的感受有很多，包括宽松的氛围，工程师文化，数据驱动，初创公司有活力等，上面的回答已经说了很多了，在此不再赘述。我想强调我感…&quot;,&quot;previewText&quot;:&quot;&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;&quot;},&quot;495040539&quot;:{&quot;relationship&quot;:{&quot;isAuthor&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false,&quot;isNothelp&quot;:false,&quot;upvotedFolloweeIds&quot;:[]},&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;今年刚好40岁，目前在一著名外企作技术专家，经历过3次大的并购，2次大的裁员，我可以非常负责任的说：你是否被裁员和你是否努力，是否优秀没有半点关系。我经历过的三次并购，普通员工都是在最后一刻才知道消息，基本和公开新闻同步。然后就是剧烈部门重组，裁员。而且很多裁员都是战略级的，整个部门被裁，上到经理，下到行政无一幸免。可能昨天你还和隔壁Tom为部门经理的位置明争暗斗，但今天你俩可能就得双双领钱走人，活脱…&quot;,&quot;createdTime&quot;:1537417817,&quot;previewType&quot;:&quot;default&quot;,&quot;id&quot;:495040539,&quot;isCopyable&quot;:true,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;沈世钧&quot;,&quot;headline&quot;:&quot;架构师，软件开发专家&quot;,&quot;urlToken&quot;:&quot;zhang-xu-guang-21&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/d069b25d6ca84652cb81ab3109572d90&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-6ddc0295186138ed6a41b12bd3bd400c_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;d069b25d6ca84652cb81ab3109572d90&quot;},&quot;url&quot;:&quot;https://api.zhihu.com/answers/495040539&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;question&quot;:{&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;离海近了&quot;,&quot;headline&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;zhi-hu-zhe-ye-52-81-72&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/b6a8d31db6fea6285e613f49f89b25ca&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-2104b6e3faef1953509b8a828dba505c_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;b6a8d31db6fea6285e613f49f89b25ca&quot;},&quot;created&quot;:1536641251,&quot;url&quot;:&quot;https://api.zhihu.com/questions/294198631&quot;,&quot;title&quot;:&quot;为华为工作几年之后华为会卸磨杀驴是真的吗？&quot;,&quot;excerpt&quot;:&quot;末流985研二小硕一枚，专业为机械设计及理论，有意向去华为做结构工程师。 最近师兄师姐都在找工作，听他们对华为的评价都不是太高，想知道真的如他们说的一样用几年之后华为会清理人吗？&quot;,&quot;answerCount&quot;:227,&quot;boundTopicIds&quot;:[5263,180065],&quot;commentCount&quot;:22,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:2523,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:294198631},&quot;updatedTime&quot;:1538009257,&quot;content&quot;:&quot;&lt;p&gt;今年刚好40岁，目前在一著名外企作技术专家，经历过3次大的并购，2次大的裁员，我可以非常负责任的说：你是否被裁员和你是否努力，是否优秀没有半点关系。&lt;/p&gt;&lt;p&gt;我经历过的三次并购，普通员工都是在最后一刻才知道消息，基本和公开新闻同步。然后就是剧烈部门重组，裁员。而且很多裁员都是战略级的，整个部门被裁，上到经理，下到行政无一幸免。可能昨天你还和隔壁Tom为部门经理的位置明争暗斗，但今天你俩可能就得双双领钱走人，活脱脱一场荒诞剧。&lt;/p&gt;&lt;p&gt;可怜很多人都是在公司奋斗了十几年，踩着无数人的失败才坐上经理的位置，可是凳子还没坐热，随着整个部门就被裁，照样也得今天领钱，明天走人，你能说这些人不努力，不优秀？&lt;/p&gt;&lt;p&gt;就企业来说，裁员的原因绝往往非常简单：不挣钱！但就个人来说，不管你是一个部门经理也好，还是一个技术专家也好，你所在的business是否赚钱，很多时候都在于大势，普通员工在其中的作用基本可以忽略不记。&lt;/p&gt;&lt;p&gt;我特不爱听那些所谓的“成功人士”给别人灌鸡汤，教别人要努力，要奋斗，否则做了loser就别怪别人。这种人要么是蠢（缺少基本的统计学常识），要么是被猪油蒙了心的坏（自己成功了，就洋洋得意的俯瞰众生）！&lt;/p&gt;&lt;p&gt;但我最恨的还是那些坐歪屁股的奋斗逼们，一个打工的却操着资本家的心，认为企业就该裁掉老人，就该给年轻人让位。全世界劳动者，100年来用眼泪和汗水换来的8小时工作制、年龄平等、性别平等就是被这些奋斗逼们给毁了。说句不好听的，这些无良企业之所以敢明目张胆践踏劳动法（例如996），明目张胆的年龄歧视，性别歧视，就是被你们这些奋斗逼们惯的。&lt;/p&gt;&lt;p&gt;这些奋斗逼们还缺少基本的系统思维能力，那些无良企业为啥要裁掉老员工？是因为老员工智力跟不上了吗？34岁可以说正是人生经验和智力的巅峰！根本原因还是老员工人到中年，上有老下有小，精力跟不上了，不能适应高强度的加班了（例如996）。但是如果所有的企业都奉公守法，都遵守8小时工作制，我看谁敢说老员工的生产力不如年轻人？&lt;/p&gt;&lt;p&gt;有些人已经病态到这种程度，他们不去反思畸形的劳动关系，反而去妖魔化中年人，给中年人扣上奸滑、油腻的帽子。去怂恿不明世事的职场年轻人去排挤，去斗争老员工，好像他们就会永远年轻一样？&lt;/p&gt;&lt;p&gt;骚年们，请记住，是人就不会永远年轻，但年轻人却永远有。等你老了（34岁），你一定也会被更年轻的人收割，而只有那些无良资本家躲在阴影中，操手看这场人间悲喜剧反复上演！！&lt;/p&gt;&lt;p&gt;--------------------------------------------------&lt;/p&gt;&lt;p&gt;上面是原答案，不过评论区有人怼我，既然这样，我就一不做二不休，再多说几句，权当送佛送到西吧：&lt;/p&gt;&lt;p&gt;1.按照劳动法规定，工作日加班工资是平时的1.5倍，双休日2倍，法定假日3倍，因此如果你的工作时长为996，员工只有拿到市场工资的2.25倍，在经济帐上才不吃亏。所以我劝告那些因为加班而多挣了3、5斗的奋斗逼们，就凭你那点眼界还想占资本家的便宜，naive，真是被别人卖了，还替别人数钱的主！&lt;/p&gt;&lt;p&gt;2.人的一生是一个漫长而完整的过程，幸福与否，不仅要看你年轻的时候能飞的多高，更要看年老的时候能否平安降落？年轻的时候在血汗工厂挣些辛苦钱，然后人到中年，年老色衰，加不动班的时候被人家扫地出门，生活出现断崖式下降。此情此景让你想起什么？没错，就是妓女，不过在我看来，奋斗逼们的下场往往连妓女都不如。妓女们年老色衰了至少还有机会从良，还能找个小白兔嫁了，你一个被人用废的奋斗逼能有什么好下场？&lt;/p&gt;&lt;p&gt;3.奋斗逼的一个愚蠢逻辑就是：把奋斗和加班等同起来。难道正确的操作不应该是站稳自己的阶级立场，争取8小时工作制，然后在此基础上提高工作效率，提高创新水平，然后在这种良性竞争中，脱颖而出，成为一个体面的，有尊严的精英分子，而不是无底线加班，做什么狗屁“奋斗者”。&lt;/p&gt;&lt;p&gt;4.人一生最精彩的时光恰恰是你年轻的时候。年轻的时候，你想爱，想吃，想玩，而且有能力（身体好），有条件（合法）去爱，去吃，去玩！等到人到中年的，身体每况愈下的时候，纵然小有积蓄，但你会吃惊的发现，那些年轻时候你想做而没有做的事情，现在绝大多数都做不了，要么不健康，要么不合法！于是，暮年回首，你说你这一生过的叫什么劲？所谓的奋斗也不过是用你的青春成就了别人的富豪梦！&lt;/p&gt;&lt;p&gt;所以，骚年们，在“奋斗”的路上，抽空喘口气，挤一点时间思考，别只顾着低头拉车，丢失了灵魂，迷失了人生！&lt;/p&gt;&lt;a data-draft-node=\&quot;block\&quot; data-draft-type=\&quot;link-card\&quot; href=\&quot;https://www.zhihu.com/question/283474944/answer/485146851\&quot; class=\&quot;internal\&quot;&gt;找工作时单位普遍要求 35 岁以下，那 35 岁以上的人都干嘛去了？&lt;/a&gt;&lt;a data-draft-node=\&quot;block\&quot; data-draft-type=\&quot;link-card\&quot; href=\&quot;https://www.zhihu.com/question/291511878/answer/478117672\&quot; class=\&quot;internal\&quot;&gt;为什么现在的国内企业压榨员工更严重，反倒外企的企业管理很人性化？&lt;/a&gt;&lt;p&gt;&lt;/p&gt;&quot;,&quot;commentCount&quot;:1130,&quot;voteupCount&quot;:16848,&quot;reshipmentSettings&quot;:&quot;allowed&quot;,&quot;thanksCount&quot;:1571,&quot;excerptNew&quot;:&quot;今年刚好40岁，目前在一著名外企作技术专家，经历过3次大的并购，2次大的裁员，我可以非常负责任的说：你是否被裁员和你是否努力，是否优秀没有半点关系。 我经历过的三次并购，普通员工都是在最后一刻才知道消息，基本和公开新闻同步。然后就是剧烈部门重组，…&quot;,&quot;previewText&quot;:&quot;&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;&quot;},&quot;513201067&quot;:{&quot;relationship&quot;:{&quot;isAuthor&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false,&quot;isNothelp&quot;:false,&quot;upvotedFolloweeIds&quot;:[]},&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;Order的意思其实是顺序，然而程序员都用sort，Sort的意思其实是分类，然而程序员都用classify。Classify的意思其实是保密，然而程序员都用encrypt。Encrypt的意思其实是编码，然而程序员都用encode。Encode的意思其实是编译，然而程序员都用compile。Compile的意思其实是汇总，然而程序员都用collect。Collect的意思其实是募捐，然而程序员并没有钱去募捐，只能捡垃圾。随手写着玩的，有些词解释的比较牵强，不要太纠结准确度。&quot;,&quot;createdTime&quot;:1539839287,&quot;previewType&quot;:&quot;expand&quot;,&quot;id&quot;:513201067,&quot;isCopyable&quot;:true,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;徐辰&quot;,&quot;headline&quot;:&quot;GOP GHOP SOOP Coder&quot;,&quot;urlToken&quot;:&quot;windoze&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/630612ff80641e9ec165af192743a792&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/b7b47a8e1_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;630612ff80641e9ec165af192743a792&quot;},&quot;url&quot;:&quot;https://api.zhihu.com/answers/513201067&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;question&quot;:{&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;邱宇驰&quot;,&quot;headline&quot;:&quot;今日も、生涯の1日になり&quot;,&quot;urlToken&quot;:&quot;qiuyuchi&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/83ce84b1a22edc990678b1c7a93ba49b&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/50/2fcee525b_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;83ce84b1a22edc990678b1c7a93ba49b&quot;},&quot;created&quot;:1539789789,&quot;url&quot;:&quot;https://api.zhihu.com/questions/298951376&quot;,&quot;title&quot;:&quot;有哪些程序员容易片面理解的英文多义词？&quot;,&quot;excerpt&quot;:&quot;比如著名的string，除了字符串之外还拥有诸如\&quot;弦\&quot;之类的很多意思。 我在阅读中意外地发现，「发电机」在英文中是generator，对于一个中国程序员来说这个词再熟悉不过，但是对于更多英语母语者来说，可能「发电机」才是其更高频的含义吧。 《CLR via C#》的作者Jeffrey Richter的妻子也在Jeffrey的书的第四版序言中，举了enumerator的「人口普查员」含义，以及thread的「针头线脑」等。 希望大家补充更多好玩的例子。&quot;,&quot;answerCount&quot;:55,&quot;boundTopicIds&quot;:[707,1100,1354,1771,5397],&quot;commentCount&quot;:4,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:575,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:298951376},&quot;updatedTime&quot;:1539845162,&quot;content&quot;:&quot;&lt;p&gt;Order的意思其实是顺序，然而程序员都用sort，&lt;/p&gt;&lt;p&gt;Sort的意思其实是分类，然而程序员都用classify。&lt;/p&gt;&lt;p&gt;Classify的意思其实是保密，然而程序员都用encrypt。&lt;/p&gt;&lt;p&gt;Encrypt的意思其实是编码，然而程序员都用encode。&lt;/p&gt;&lt;p&gt;Encode的意思其实是编译，然而程序员都用compile。&lt;/p&gt;&lt;p&gt;Compile的意思其实是汇总，然而程序员都用collect。&lt;/p&gt;&lt;p&gt;Collect的意思其实是募捐，然而程序员并没有钱去募捐，只能捡垃圾。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;随手写着玩的，有些词解释的比较牵强，不要太纠结准确度。&lt;/p&gt;&quot;,&quot;commentCount&quot;:23,&quot;voteupCount&quot;:260,&quot;reshipmentSettings&quot;:&quot;allowed&quot;,&quot;thanksCount&quot;:12,&quot;excerptNew&quot;:&quot;Order的意思其实是顺序，然而程序员都用sort， Sort的意思其实是分类，然而程序员都用classify。 Classify的意思其实是保密，然而程序员都用encrypt。 Encrypt的意思其实是编码，然而程序员都用encode。 Encode的意思其实是编译，然而程序员都用compile。 Comp…&quot;,&quot;previewText&quot;:&quot;Order的意思其实是顺序，然而程序员都用sort，\nSort的意思其实是分类，然而程序员都用classify。\nClassify的意思其实是保密，然而程序员都用encrypt。\nEncrypt的意思其实是编码，然而程序员都用encode。\nEncode的意思其实是编译，然而程序员都用compile。\nCompile的意思其实是汇总，然而程序员都用collect。\nCollect的意思其实是募捐，然而程序员并没有钱去募捐，只能捡垃圾。\n随手写着玩的，有些词解释的比较牵强，不要太纠结准确度。&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;&quot;},&quot;514288865&quot;:{&quot;relationship&quot;:{&quot;isAuthor&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false,&quot;isNothelp&quot;:false,&quot;upvotedFolloweeIds&quot;:[]},&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;register file：寄存器堆（生活中常用的 register 是注册，file 是文件/发稿/提出控告）mean：均值（日常还有吝啬、刻薄的意思，以及意思的意思）variable：变量（日常有形容词的意思：可变的）die：芯片裸片（日常意思是死/骰子）bus：数据总线（日常意思是公交车）CART：分类与回归树，一种决策树模型（日常意思是购物车）swift：苹果新编程语言（日常意思：快的）git：一种版本控制工具（原意是讨厌的人，英国俚语）stage：在…&quot;,&quot;createdTime&quot;:1539964875,&quot;previewType&quot;:&quot;expand&quot;,&quot;id&quot;:514288865,&quot;isCopyable&quot;:true,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;Towser&quot;,&quot;headline&quot;:&quot;今までありがとう&quot;,&quot;urlToken&quot;:&quot;SeptEnds&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/157deec64cc5e062b2207aeece42f50f&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/50/v2-f2784a2993b8c44f0c78e5e507bb79be_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:0,&quot;badge&quot;:[],&quot;id&quot;:&quot;157deec64cc5e062b2207aeece42f50f&quot;},&quot;url&quot;:&quot;https://api.zhihu.com/answers/514288865&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;question&quot;:{&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;邱宇驰&quot;,&quot;headline&quot;:&quot;今日も、生涯の1日になり&quot;,&quot;urlToken&quot;:&quot;qiuyuchi&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/83ce84b1a22edc990678b1c7a93ba49b&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/50/2fcee525b_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;83ce84b1a22edc990678b1c7a93ba49b&quot;},&quot;created&quot;:1539789789,&quot;url&quot;:&quot;https://api.zhihu.com/questions/298951376&quot;,&quot;title&quot;:&quot;有哪些程序员容易片面理解的英文多义词？&quot;,&quot;excerpt&quot;:&quot;比如著名的string，除了字符串之外还拥有诸如\&quot;弦\&quot;之类的很多意思。 我在阅读中意外地发现，「发电机」在英文中是generator，对于一个中国程序员来说这个词再熟悉不过，但是对于更多英语母语者来说，可能「发电机」才是其更高频的含义吧。 《CLR via C#》的作者Jeffrey Richter的妻子也在Jeffrey的书的第四版序言中，举了enumerator的「人口普查员」含义，以及thread的「针头线脑」等。 希望大家补充更多好玩的例子。&quot;,&quot;answerCount&quot;:55,&quot;boundTopicIds&quot;:[707,1100,1354,1771,5397],&quot;commentCount&quot;:4,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:575,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:298951376},&quot;updatedTime&quot;:1540005895,&quot;content&quot;:&quot;&lt;p&gt;register file：寄存器堆（生活中常用的 register 是注册，file 是文件/发稿/提出控告）&lt;/p&gt;&lt;p&gt;mean：均值（日常还有吝啬、刻薄的意思，以及意思的意思）&lt;/p&gt;&lt;p&gt;variable：变量（日常有形容词的意思：可变的）&lt;/p&gt;&lt;p&gt;die：芯片裸片（日常意思是死/骰子）&lt;/p&gt;&lt;p&gt;bus：数据总线（日常意思是公交车）&lt;/p&gt;&lt;p&gt;CART：分类与回归树，一种决策树模型（日常意思是购物车）&lt;/p&gt;&lt;p&gt;swift：苹果新编程语言（日常意思：快的）&lt;/p&gt;&lt;p&gt;git：一种版本控制工具（原意是讨厌的人，英国俚语）&lt;/p&gt;&lt;p&gt;stage：在 git 中是暂存区的意思（日常多指阶段、舞台）&lt;/p&gt;&lt;p&gt;oracle：甲骨文数据库（日常意思是圣贤/神谕。不过在理论计算机里， Oracle Machine 是神谕机的意思）&lt;/p&gt;&lt;p&gt;=============&lt;/p&gt;&lt;p&gt;感觉好几个都答反了，变成了“哪些计算机术语的英文居然是日常生活中的这个词”……算了就这样吧。&lt;/p&gt;&quot;,&quot;commentCount&quot;:6,&quot;voteupCount&quot;:47,&quot;reshipmentSettings&quot;:&quot;allowed&quot;,&quot;thanksCount&quot;:6,&quot;excerptNew&quot;:&quot;register file：寄存器堆（生活中常用的 register 是注册，file 是文件/发稿/提出控告） mean：均值（日常还有吝啬、刻薄的意思，以及意思的意思） variable：变量（日常有形容词的意思：可变的） die：芯片裸片（日常意思是死/骰子） bus：数据总线（日常意思…&quot;,&quot;previewText&quot;:&quot;register file：寄存器堆（生活中常用的 register 是注册，file 是文件/发稿/提出控告）\nmean：均值（日常还有吝啬、刻薄的意思，以及意思的意思）\nvariable：变量（日常有形容词的意思：可变的）\ndie：芯片裸片（日常意思是死/骰子）\nbus：数据总线（日常意思是公交车）\nCART：分类与回归树，一种决策树模型（日常意思是购物车）\nswift：苹果新编程语言（日常意思：快的）\ngit：一种版本控制工具（原意是讨厌的人，英国俚语）\nstage：在 git 中是暂存区的意思（日常多指阶段、舞台）\noracle：甲骨文数据库（日常意思是圣贤/神谕。不过在理论计算机里， Oracle Machine 是神谕机的意思）\n=============\n感觉好几个都答反了，变成了“哪些计算机术语的英文居然是日常生活中的这个词”……算了就这样吧。&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;&quot;},&quot;514311114&quot;:{&quot;relationship&quot;:{&quot;isAuthor&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false,&quot;isNothelp&quot;:false,&quot;upvotedFolloweeIds&quot;:[]},&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;助手看我停留在这个页面上，已经好几天了。她忍不住问我，老板你干什么呢，我说，我想好好回答一个问题。 说来也巧，上上个月，我刚满30，如果让我回忆一下目前的状态，可能就是：想实现的都实现了，没想实现的也实现了。 我曾经做梦梦见回到了中学时代，最后醒来的时候觉得还是现实更好一些，很多人都想人生重来，总是后悔当初，唾骂失败，但我从不回头，一路向前。 很简单，有什么可后悔，&lt;b&gt;人生就是一个不断试错的过程。&lt;/b&gt; 现在回…&quot;,&quot;createdTime&quot;:1539968055,&quot;previewType&quot;:&quot;default&quot;,&quot;id&quot;:514311114,&quot;isCopyable&quot;:false,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;钻石太太Caroline&quot;,&quot;headline&quot;:&quot;拍卖行珠宝部主管，公众号“钻石太太”&quot;,&quot;urlToken&quot;:&quot;caroline257&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/eb427a2f36f0805f1a2d27849c9c0fa5&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/v2-f5fbf487b92d61e5f70e1c2e33e99a27_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:0,&quot;badge&quot;:[],&quot;id&quot;:&quot;eb427a2f36f0805f1a2d27849c9c0fa5&quot;},&quot;url&quot;:&quot;https://api.zhihu.com/answers/514311114&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;question&quot;:{&quot;author&quot;:{&quot;headline&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/aadd7b895_s.jpg&quot;,&quot;name&quot;:&quot;匿名用户&quot;,&quot;url&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;&quot;,&quot;type&quot;:&quot;people&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;id&quot;:&quot;0&quot;},&quot;created&quot;:1527774627,&quot;url&quot;:&quot;https://api.zhihu.com/questions/279387872&quot;,&quot;title&quot;:&quot;30岁左右的人，来谈谈你犯了哪些错误？&quot;,&quot;excerpt&quot;:&quot;吾日三省吾身。人生走了快半个康波，是时候来个大复盘，想想这场80后竞速中你犯过的错误了。&quot;,&quot;answerCount&quot;:3505,&quot;boundTopicIds&quot;:[395,3820,25064,139599,171942],&quot;commentCount&quot;:38,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:90870,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:279387872},&quot;updatedTime&quot;:1539998939,&quot;content&quot;:&quot;&lt;p&gt;助手看我停留在这个页面上，已经好几天了。&lt;/p&gt;&lt;p&gt;她忍不住问我，老板你干什么呢，&lt;/p&gt;&lt;p&gt;我说，我想好好回答一个问题。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;说来也巧，上上个月，我刚满30，&lt;/p&gt;&lt;p&gt;如果让我回忆一下目前的状态，&lt;/p&gt;&lt;p&gt;可能就是：想实现的都实现了，&lt;/p&gt;&lt;p&gt;没想实现的也实现了。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我曾经做梦梦见回到了中学时代，&lt;/p&gt;&lt;p&gt;最后醒来的时候觉得还是现实更好一些，&lt;/p&gt;&lt;p&gt;很多人都想人生重来，&lt;/p&gt;&lt;p&gt;总是后悔当初，唾骂失败，&lt;/p&gt;&lt;p&gt;但我从不回头，一路向前。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;很简单，有什么可后悔，&lt;/p&gt;&lt;p&gt;&lt;b&gt;人生就是一个不断试错的过程。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;现在回想起来，&lt;/p&gt;&lt;p&gt;每一个我犯下的错误，&lt;/p&gt;&lt;p&gt;搁在任何一个人身上都很有可能压垮他/她，&lt;/p&gt;&lt;p&gt;但如果熬过那段时间，学习反省后，&lt;/p&gt;&lt;p&gt;反而会得到惊天的成长。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;事实上，不如说我现在的人生，&lt;/p&gt;&lt;p&gt;全是一次次犯错后再调整选择的成果。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;一、人性是把刀&lt;/h2&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前两天我在微博上发了一段感慨，&lt;/p&gt;&lt;p&gt;“直到30岁我才知道，&lt;/p&gt;&lt;p&gt;什么是学院教育系统最缺失却最重要的一门课？&lt;/p&gt;&lt;p&gt;&lt;b&gt;人性&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;&lt;b&gt;就算你一路读到研究生博士博士后，&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;如果对人性认知不够，人间道依然艰涩难行&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;这门课需要实践也需要悟性，这就不难解释，&lt;/p&gt;&lt;p&gt;为什么很多饱经“社会大学”磨砺的人，&lt;/p&gt;&lt;p&gt;比长期受学校教育的人，&lt;/p&gt;&lt;p&gt;更容易做成一件事。“&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;世界上99%的事情，都与人性有关。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;在我是个20 something的时候，&lt;/p&gt;&lt;p&gt;我觉得这些与我无关，&lt;/p&gt;&lt;p&gt;把自己的事情做好，专业精通不就行了吗？&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我也的确是这么做的，&lt;/p&gt;&lt;p&gt;当时以本专业第一的成绩考上研究生之后，&lt;/p&gt;&lt;p&gt;阴差阳错开了个小考研班，&lt;/p&gt;&lt;p&gt;因为授课质量不错，生源爆满，&lt;/p&gt;&lt;p&gt;很快租的教室就不够大了。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;与我关系不错的同学看到这个情况，&lt;/p&gt;&lt;p&gt;主动提出把自己的空画室租给我，&lt;/p&gt;&lt;p&gt;按行价一天1000，&lt;/p&gt;&lt;p&gt;刚好能够容纳几十个学生。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;这真是太好了，不用再挤进小教室里上课了。&lt;/p&gt;&lt;p&gt;我非常高兴，当天就给她缴纳了房租，&lt;/p&gt;&lt;p&gt;然后布置好了教室。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;第一天上课很顺利，&lt;/p&gt;&lt;p&gt;休息期间，她问我的学生，&lt;/p&gt;&lt;p&gt;一次课程收学费多少，&lt;/p&gt;&lt;p&gt;然后点了一下学生的数目。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;第二天上课也很顺利，&lt;/p&gt;&lt;p&gt;晚上她让我请她吃饭，&lt;/p&gt;&lt;p&gt;阴阳怪气地说，&lt;/p&gt;&lt;p&gt;C老板原来挣这么多，平时也不显山露水的。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;第三天，第四天...&lt;/p&gt;&lt;p&gt;临近课程一半的时候，&lt;/p&gt;&lt;p&gt;某天清晨学生跟我反映说教室进不去，&lt;/p&gt;&lt;p&gt;门锁了，&lt;/p&gt;&lt;p&gt;我很吃惊，赶过去一看门还真的锁了，&lt;/p&gt;&lt;p&gt;一大堆学生看着我，等着进去上课，&lt;/p&gt;&lt;p&gt;我急忙给她打电话。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我问，你怎么把门锁了？&lt;/p&gt;&lt;p&gt;她慢悠悠的说，我现在觉得收费太低了，&lt;/p&gt;&lt;p&gt;不划算，得涨价。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我脑子嗡得一声，&lt;/p&gt;&lt;p&gt;身边挤在门口的学生越来越多，&lt;/p&gt;&lt;p&gt;迅速想了一下更换教室的可能性，&lt;/p&gt;&lt;p&gt;几乎为0，教具都还在里面呢，&lt;/p&gt;&lt;p&gt;于是我避开学生，问她，你要涨价多少。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;她说，3倍吧，一天3000，&lt;/p&gt;&lt;p&gt;你得把差价现在转给我。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;当时气得已经说不出来话了，但只能服软，&lt;/p&gt;&lt;p&gt;我说，我给你支付宝先打一天的差价，&lt;/p&gt;&lt;p&gt;你快来开门吧。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;幸好那时候已经不用我亲自上课，&lt;/p&gt;&lt;p&gt;我坐在教室后面，一时间都是天旋地转的。&lt;/p&gt;&lt;p&gt;心里只盘旋着两句话，怎么会，怎么可能？&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;第二天，我立马带着学生搬回了旧教室，&lt;/p&gt;&lt;p&gt;这件事上，我不仅亏损了双倍租金，&lt;/p&gt;&lt;p&gt;还耽误了学生上课，&lt;/p&gt;&lt;p&gt;更意外地失去了一个“朋友”。&lt;/p&gt;&lt;p&gt;在我搬走后，听说她还去学校告发检举我在校学生办课外班，&lt;/p&gt;&lt;p&gt;导致教务处不停地打电话找我去喝茶。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;从此，我认识到，&lt;/p&gt;&lt;p&gt;&lt;b&gt;人性是脆弱的，在金钱面前更是，&lt;/b&gt;&lt;/p&gt;&lt;p&gt;“气人有，笑人无”这句话，恐怕是真的。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;怎么办呢，从这个事件中，&lt;/p&gt;&lt;p&gt;我学习到的经验就是：&lt;/p&gt;&lt;p&gt;1.做任何事一定要有备案，&lt;/p&gt;&lt;p&gt;应变各种突发事件；&lt;/p&gt;&lt;p&gt;2.以法律制约人性，事前签订相关合约；&lt;/p&gt;&lt;p&gt;3.离爱嫉妒的人远一点；&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;也就萎靡了几天，&lt;/p&gt;&lt;p&gt;之后我很快找到了靠谱的长租教室，&lt;/p&gt;&lt;p&gt;在更加努力的经营下，&lt;/p&gt;&lt;p&gt;连续三年的官方录取名单里，&lt;/p&gt;&lt;p&gt;有超过1/3都是我的学生。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;现在，我见到了更多人性，&lt;/p&gt;&lt;p&gt;早已对这些司空见惯，&lt;/p&gt;&lt;p&gt;只不过，在20岁的时候，&lt;/p&gt;&lt;p&gt;我自觉是一个“好人”，一个非黑即白的人，&lt;/p&gt;&lt;p&gt;当听到一些“坏人”“坏事”的时候，&lt;/p&gt;&lt;p&gt;会产生批判，并坚决抗拒与之产生联系。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;现在30岁了，我觉得自己“不好”也“不坏”，&lt;/p&gt;&lt;p&gt;是一个灰色的人。&lt;/p&gt;&lt;p&gt;“白色”和我合作，那会很顺畅；&lt;/p&gt;&lt;p&gt;“黑色”发出邀请，&lt;/p&gt;&lt;p&gt;如果有用得上的地方，我也会愿意接纳，&lt;/p&gt;&lt;p&gt;但会格外注意用法律制约。&lt;/p&gt;&lt;h2&gt;&lt;br&gt;&lt;/h2&gt;&lt;h2&gt;二、金钱是面镜&lt;/h2&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;当你一夜亏了50万，会不会涕泪横流？&lt;/p&gt;&lt;p&gt;我是最早被p2p雷了50万的人，&lt;/p&gt;&lt;p&gt;当得知已经“延期”的时候，&lt;/p&gt;&lt;p&gt;心里感觉就有些不对，&lt;/p&gt;&lt;p&gt;后来群里的人围堵那个公司，&lt;/p&gt;&lt;p&gt;老板在门口发声明，我看着他的双眼，&lt;/p&gt;&lt;p&gt;顷刻明白什么叫作“财产已经转移”的底气。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;被雷了之后，群里的有些小投资人会哭诉，&lt;/p&gt;&lt;p&gt;说倾家荡产，要跟老板玩命，&lt;/p&gt;&lt;p&gt;这时候大投资人会站出来保老板，&lt;/p&gt;&lt;p&gt;说没命了怎么还钱，一团吵闹。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;这个时候我先去找了律师朋友，&lt;/p&gt;&lt;p&gt;付费咨询一两个小时之后，&lt;/p&gt;&lt;p&gt;明白法律途径可以胜诉，但回钱基本没戏。&lt;/p&gt;&lt;p&gt;然后请人介绍了要债公司，&lt;/p&gt;&lt;p&gt;见老大喝茶咨询了一两个小时，&lt;/p&gt;&lt;p&gt;明白这种事情需要第一时间处理，能吐点是点，可惜当时对方已经跑路了。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;确定这个事情无解之后，也挺心疼，&lt;/p&gt;&lt;p&gt;但知道已经是沉没成本，&lt;/p&gt;&lt;p&gt;就制定了计划怎么提升技能，尽快赚回这些钱。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;后来没几个月，群里还在吵吵抱怨后悔，&lt;/p&gt;&lt;p&gt;我已经差不多把沉没成本挣了回来，&lt;/p&gt;&lt;p&gt;再加上一些其他的钱，&lt;/p&gt;&lt;p&gt;投资了一套东京公寓。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;这个错误总结起来就是...&lt;/p&gt;&lt;p&gt;投资本来就是风险，&lt;/p&gt;&lt;p&gt;&lt;b&gt;金钱不是最重要的，重要的是人。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;它能很好地帮你看清自己，&lt;/p&gt;&lt;p&gt;看清市场，看清他人。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;如果不是学金融的或是股神，&lt;/p&gt;&lt;p&gt;应该把更多的资本，&lt;/p&gt;&lt;p&gt;投资在自己本行业或者不动产上。&lt;/p&gt;&lt;p&gt;涨了跌了，至少还留个实物在。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;关于 年轻人，越早知道金钱的重要性，&lt;/p&gt;&lt;p&gt;甚至越早赔过钱，越好，&lt;/p&gt;&lt;p&gt;这样你才会知道清高自傲避讳不谈钱的，&lt;/p&gt;&lt;p&gt;鄙视人家挣钱天天骂营销号的，&lt;/p&gt;&lt;p&gt;可能多年过后，还是在原地叫骂，&lt;/p&gt;&lt;p&gt;而如果你要往前走，&lt;/p&gt;&lt;p&gt;让家人过上更好的生活，&lt;/p&gt;&lt;p&gt;就要和金钱做朋友。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;三、原则是堵墙&lt;/h2&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;每一个错误，&lt;/p&gt;&lt;p&gt;其实都是在不断考验你的底线。&lt;/p&gt;&lt;p&gt;我的一个朋友，&lt;/p&gt;&lt;p&gt;本是高圆圆本圆，大美女一枚，&lt;/p&gt;&lt;p&gt;但情路却十分坎坷，&lt;/p&gt;&lt;p&gt;每一个男生与她交往后，&lt;/p&gt;&lt;p&gt;都能显露出自己最糟糕的一面。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;后来我发现，&lt;/p&gt;&lt;p&gt;可能是因为她实在太没有原则了，&lt;/p&gt;&lt;p&gt;你做饭，好，你不做饭，也好；&lt;/p&gt;&lt;p&gt;你赌博，好，你不赌博，也好；&lt;/p&gt;&lt;p&gt;你爱我，好，你爱别人，也好。&lt;/p&gt;&lt;p&gt;无论对方怎么样，她都不会离开，&lt;/p&gt;&lt;p&gt;最后剧情就好像《被嫌弃的松子的一生》一般。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;事业上也是同理，&lt;/p&gt;&lt;p&gt;我曾经非常希望满足每一个客户的需求，&lt;/p&gt;&lt;p&gt;后来发现有些要求，会不断挑战你的底线，&lt;/p&gt;&lt;p&gt;而当你退让一步后，对方反而会得寸进尺。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;在这个事情上我吃过很多亏，&lt;/p&gt;&lt;p&gt;甚至很多时候会为了面子，&lt;/p&gt;&lt;p&gt;为了情分，退让很多。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;直到我认识了一个客人，&lt;/p&gt;&lt;p&gt;以前是南方有名的黑道大佬，&lt;/p&gt;&lt;p&gt;后来为了女儿上学举家搬到北京，&lt;/p&gt;&lt;p&gt;60岁的人保养得像周润发。&lt;/p&gt;&lt;p&gt;一次吃饭的时候，&lt;/p&gt;&lt;p&gt;他说，其实黑道是最讲原则的，&lt;/p&gt;&lt;p&gt;谁借钱，都要打欠条，&lt;/p&gt;&lt;p&gt;谁取货，都要写收单。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;后来我和他做了几次生意，&lt;/p&gt;&lt;p&gt;发现真是清清楚楚，明明白白，&lt;/p&gt;&lt;p&gt;没有人会因为这些手续繁琐而看不起你，&lt;/p&gt;&lt;p&gt;相反还会很尊敬这个设立原则的人。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;他找我办事也是，&lt;/p&gt;&lt;p&gt;绝不会逾越我去接触我的资源，&lt;/p&gt;&lt;p&gt;每次都会和我强调：&lt;/p&gt;&lt;p&gt;“你是我永远的朋友，一切由你来安排。”&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;人生，其实通过试错不断在设定自己的原则，&lt;/p&gt;&lt;p&gt;筛选自己的同路人，&lt;/p&gt;&lt;p&gt;原则一旦建立好，&lt;/p&gt;&lt;p&gt;这堵墙就能把日后可能引发更大祸患的人，&lt;/p&gt;&lt;p&gt;挡在你的生活之外。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;接纳志同，排除异己，更换朋友圈，&lt;/p&gt;&lt;p&gt;这就是一条不断得到和失去的路。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;四、信念是道光&lt;/h2&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;这个明天再写吧，太晚了。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;其实，错误是一个包装的很糟糕的礼物，&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;打开它，你会发现里面写着：&lt;/b&gt;&lt;/p&gt;&lt;p&gt;“我只是为了让你变得更好。”&lt;/p&gt;&lt;p&gt;没有一个个犯过的错，&lt;/p&gt;&lt;p&gt;你不会知道自己是什么样的人，&lt;/p&gt;&lt;p&gt;想要什么样的人生。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;每个挫折都在为了捶打你的心智，&lt;/p&gt;&lt;p&gt;终日懊悔抱怨的人，自此一蹶不振。&lt;/p&gt;&lt;p&gt;越快振作的人，越快到达终点。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;感谢之前的所有磨难，&lt;/p&gt;&lt;p&gt;是它们成就了百折不挠，&lt;/p&gt;&lt;p&gt;如今坚韧如钻的我。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最后，谈谈30岁，&lt;/p&gt;&lt;p&gt;这个阶段最佳的状态应该是：&lt;/p&gt;&lt;p&gt;&lt;b&gt;上有大佬支撑，&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;下有小弟冲锋。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;意为，&lt;/p&gt;&lt;p&gt;有为自己打拼的团队，&lt;/p&gt;&lt;p&gt;也有支持自己的贵人，&lt;/p&gt;&lt;p&gt;这样的强大燃料，保证冲到40岁衣食无忧。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;愿每个有缘看到这个回答的年轻人，&lt;/p&gt;&lt;p&gt;都能避开雷区，一往无前。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;想要更了解我？&lt;/p&gt;&lt;p&gt;微博@&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//weibo.com/u/1647871350\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;钻石太太Caroline&lt;/a&gt;&lt;/p&gt;&quot;,&quot;commentCount&quot;:41,&quot;voteupCount&quot;:272,&quot;reshipmentSettings&quot;:&quot;disallowed&quot;,&quot;thanksCount&quot;:49,&quot;excerptNew&quot;:&quot;助手看我停留在这个页面上，已经好几天了。 她忍不住问我，老板你干什么呢， 我说，我想好好回答一个问题。 说来也巧，上上个月，我刚满30， 如果让我回忆一下目前的状态， 可能就是：想实现的都实现了， 没想实现的也实现了。 我曾经做梦梦见回到了中学时代，…&quot;,&quot;previewText&quot;:&quot;&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;&quot;}},&quot;articles&quot;:{&quot;38296950&quot;:{&quot;updated&quot;:1538638866,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;黄冠&quot;,&quot;headline&quot;:&quot;五迷；机器学习算法工程师&quot;,&quot;urlToken&quot;:&quot;huang-guan-34&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/f07c78448bc4f4f6c3761fa4509390d2&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-7bdeb7f0c3356ba2eda1028e6d6686f3_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;f07c78448bc4f4f6c3761fa4509390d2&quot;},&quot;excerpt&quot;:&quot;讲真，很久没看过能让我这么兴奋的资料了，这个tutorial &lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//www.comp.nus.edu.sg/%7Exiangnan/sigir18-deep.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;comp.nus.edu.sg/~xiangn&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;an/sigir18-deep.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt; 简直就像一个博士论文，能让我对这个方向有足够深入的了解。而我最近又恰好从事这个方向，恰好也是落地到搜索引擎和推荐系统中，刚看到这个tutorial的时候，简直开心得不要不要的。 &lt;b&gt;本篇blog的纲要：&lt;/b&gt;&lt;b&gt;part-1 搜索和推荐的概述&lt;/b&gt;&lt;b&gt;part-2 什么是语义匹配&lt;/b&gt;&lt;b&gt;part-3 匹配问题的重要性&lt;/b&gt;&lt;b&gt;part-4 搜索的query和doc匹配的核心因素&lt;/b&gt;&lt;b&gt;part-5 搜索中的传统匹配模型&lt;/b&gt;&lt;b&gt;part-6 …&lt;/b&gt;&quot;,&quot;collection&quot;:{&quot;title&quot;:&quot;AI-&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/collections/259538072&quot;,&quot;answerCount&quot;:413,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:1,&quot;isPublic&quot;:true,&quot;type&quot;:&quot;collection&quot;,&quot;id&quot;:259538072},&quot;id&quot;:38296950,&quot;voteupCount&quot;:97,&quot;upvotedFollowees&quot;:[],&quot;created&quot;:1529494835,&quot;url&quot;:&quot;https://api.zhihu.com/articles/38296950&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;title&quot;:&quot;《搜索与推荐中的深度学习匹配》之搜索篇&quot;,&quot;previewType&quot;:&quot;default&quot;,&quot;content&quot;:&quot;&lt;p&gt;讲真，很久没看过能让我这么兴奋的资料了，这个tutorial &lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//www.comp.nus.edu.sg/%7Exiangnan/sigir18-deep.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;comp.nus.edu.sg/~xiangn&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;an/sigir18-deep.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt; 简直就像一个博士论文，能让我对这个方向有足够深入的了解。而我最近又恰好从事这个方向，恰好也是落地到搜索引擎和推荐系统中，刚看到这个tutorial的时候，简直开心得不要不要的。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;本篇blog的纲要：&lt;/b&gt;&lt;/h2&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;part-1 搜索和推荐的概述&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;part-2 什么是语义匹配&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;part-3 匹配问题的重要性&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;part-4 搜索的query和doc匹配的核心因素&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;part-5 搜索中的传统匹配模型&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;part-6 搜索里的深度学习语义匹配的方法分类&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;part-6.1 Representation based的一些方法介绍&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;part-6.2 Interaction based的一些方法介绍&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;part-6.3 representation-based 和interaction-based方法的融合&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;part-7 搜索里的query和doc的相关性匹配 &lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;part-7.1 based on Global Distribution of Matching Strengths的一些方法介绍&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;part-7.2 based on Local Context of Matched Terms的一些方法介绍&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;part-8 short summary&lt;/b&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h2&gt;&lt;b&gt;part-1 搜索和推荐的概述&lt;/b&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;搜索&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;搜索是一个用户主动输入query，用query比较明确的表达自己需求，然后从搜索引擎的网页库中获取自己想要的信息的过程。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-844ac693b71a2473bfbbc2ab9b6537f1_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1196\&quot; data-rawheight=\&quot;357\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1196\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-844ac693b71a2473bfbbc2ab9b6537f1_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-e7d1bf93aa8cc687e32699ef8dd400e0_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1145\&quot; data-rawheight=\&quot;682\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1145\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-e7d1bf93aa8cc687e32699ef8dd400e0_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;推荐&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;推荐一般是非主动触发的，一般没有用户输入的query，用户的兴趣由他过去的行为、用户的一些属性（例如职业、年龄、性别等）、以及当前的上下文来隐式地表达，推荐的实体可以是电商的宝贝、电影、标签、好友等。推荐里的两大实体：user和item，他们是不同类型的东西，不像搜索里的query和doc都是文本。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-60fdc8b055eddf88a963f545a8742faa_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1221\&quot; data-rawheight=\&quot;346\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1221\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-60fdc8b055eddf88a963f545a8742faa_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;举个例子，在下述的特征体系中，用户和item字面（表面）上的匹配没有任何的重叠。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-274eef4bbbfcd4af42246fbf8aea2350_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1088\&quot; data-rawheight=\&quot;700\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1088\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-274eef4bbbfcd4af42246fbf8aea2350_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;part-2 什么是语义匹配&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;例如在搜索中，同样想知道iPhone手机的价格，两个query:“iphone多少钱”和“苹果什么价格”，这两个query的意思是完全一样的，但是字面上没有任何的重叠，用bm25和tfidf来计算，他们的相似度都是0。语义匹配就是要解决这种字面上不一定重叠，但是语义层面是相似的文本匹配问题。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;part-3 匹配问题的重要性&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;大部分的机器学习所应用的系统，例如搜索、推荐、广告，其实都可以分为召回和排序两个阶段，召回是一个拉取候选集的过程，往往就是一个匹配问题，而且很多匹配特征会是排序阶段的重要依据。再进一步说，搜索、推荐、广告本身其实就是一个匹配问题。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;part-4 搜索的query和doc匹配的核心因素&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;例如&lt;/p&gt;&lt;ul&gt;&lt;li&gt;query:    Down the ages noodles and dumplings were famous Chinese food&lt;/li&gt;&lt;li&gt;doc:   ... down the ages dumplings and noodles were popular in China …&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;那么要做好query和doc的匹配任务，要从以下几个点入手：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;建立词和词之间的语义匹配：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;精确匹配的词： Down~down，dumplings～dumplings&lt;/li&gt;&lt;li&gt;语义相似的词：famous ~ popular, Chinese ~ China&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;识别词序信息和大粒度匹配：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;N-grams: “down the ages” ~ “down the ages”&lt;/li&gt;&lt;li&gt;N-terms: “noodles and dumplings” ~ “dumplings and noodles”&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;那么到底是词的出现信息更重要，还是词的顺序更重要呢？slide中很好的说明了这个问题，80%由出现信息决定，20%由词的顺序决定：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-2f30cd75319e74736ebedd25c2c0d54b_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1272\&quot; data-rawheight=\&quot;683\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1272\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-2f30cd75319e74736ebedd25c2c0d54b_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;part-5 搜索中的传统匹配模型&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;这里不详细展开，但举几个例子&lt;/p&gt;&lt;ul&gt;&lt;li&gt;tf-idf&lt;/li&gt;&lt;li&gt;bm25&lt;/li&gt;&lt;li&gt;隐式模型：一般是将query、title都映射到同一个空间的向量，然后用向量的距离或者相似度作为匹配分，例如使用主题模型：&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-6b7939609be6d145d86047920f1cfd7a_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;726\&quot; data-rawheight=\&quot;332\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;726\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-6b7939609be6d145d86047920f1cfd7a_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;翻译、转换模型：将doc映射到query空间，然后做匹配；或者计算将doc翻译成query的概率(同语言的翻译问题)。&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-d49cdf00df53b4835357f5f776082987_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;626\&quot; data-rawheight=\&quot;301\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;626\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-d49cdf00df53b4835357f5f776082987_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;part-6 搜索里的深度学习语义匹配的方法分类&lt;/b&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;representation-based&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这类方法是先分别是学习出query和doc的语义向量表示，然后用两个向量做简单的cosine（或者接MLP也可以），重点是&lt;b&gt;学习语义表示(representation learning)。&lt;/b&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-fd3afc34ba95e7442ad5e6396b0d5fee_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;955\&quot; data-rawheight=\&quot;288\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;955\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-fd3afc34ba95e7442ad5e6396b0d5fee_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;这种方法的模型分两个步骤：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-825c502de6f90e1f7db1aa1d5677a402_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1092\&quot; data-rawheight=\&quot;175\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1092\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-825c502de6f90e1f7db1aa1d5677a402_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;interaction based&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这种方法是不直接学习query和doc的语义表示向量，而是在底层，就让query和doc提前交互，建立一些基础的匹配信号，例如term和term的匹配，再想办法把这些基础的匹配信号融合成一个匹配分。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-e027c4763cbdad9f5bda55b46ac9e3a1_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;941\&quot; data-rawheight=\&quot;253\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;941\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-e027c4763cbdad9f5bda55b46ac9e3a1_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;这种方法也分为两个步骤：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-909d582c347fb86c11c7f0e0d5a8345a_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1138\&quot; data-rawheight=\&quot;165\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1138\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-909d582c347fb86c11c7f0e0d5a8345a_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;part-6.1 Representation based的一些方法介绍&lt;/b&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Deep Structured Semantic Model (DSSM)&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;    语义匹配的开山之作。这个模型，用MLP来分别学习query和doc的语义向量表示：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;首先，这是模型使用letter-trigrams，即letter级别的trigram来表示词（即在每个单词前后插入一个#，然后使用每一个letter-trigrams来表示单词）：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;“#candy# #store#” --&amp;gt; #ca can and ndy dy# #st sto tor ore re#&lt;/li&gt;&lt;li&gt;Representation: [0, 1, 0, 0, 1, 1, 0, …, 1]&lt;/li&gt;&lt;li&gt;将每一个letter-trigram映射成一个d维的向量&lt;/li&gt;&lt;li&gt;将query内所有的letter-trigram的向量相加得到一个d维的向量（&lt;b&gt;bag of words，词袋模型&lt;/b&gt;）；因为是相加，所以是词袋模型；相加还有一个作用是，将变长的向量转化为定长&lt;/li&gt;&lt;li&gt;将doc内所有的letter-trigram的向量相加得到一个d维的向量（&lt;b&gt;bag of words，词袋模型&lt;/b&gt;）&lt;/li&gt;&lt;li&gt;后续继续接几个FC来分别学习query和doc的语义向量&lt;/li&gt;&lt;li&gt;然后用query和doc的语义向量的cosine表示它们的相似度打分&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-3547c469aaf271a8042297cdc6c40bf1_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1214\&quot; data-rawheight=\&quot;488\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1214\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-3547c469aaf271a8042297cdc6c40bf1_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;    dssm的loss function：&lt;/p&gt;&lt;p&gt;            point-wise的loss，例如log-loss，即和ctr点击率预估一样，相关的文档的label为1，不相关的文档的label为0&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-7bbe66fa550b40df6f4035cb003293c4_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1151\&quot; data-rawheight=\&quot;364\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1151\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-7bbe66fa550b40df6f4035cb003293c4_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;使用bag of letter-trigrams的好处：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;减少字典的大小，#words 500K -&amp;gt; letter-trigram: 30K&lt;/li&gt;&lt;li&gt;处理out of vocabulary的问题，对于训练数据中没出现的单词也可以处理，提高了泛化性&lt;/li&gt;&lt;li&gt;对于拼写错误也有一定的鲁棒性&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;dssm的缺点：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;词袋模型，失去了词序信息&lt;/li&gt;&lt;li&gt;point-wise的loss，和排序任务match度不够高。可以轻松的扩展到pair-wise的loss，这样和排序任务更相关。&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;那么怎么获取词序信息呢？答案是可以使用CNN和RNN。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;CNN&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;CNN对文本建模的常见操作，以CNN如何获得一个句子的向量为例：&lt;/b&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;假设输入句子是sen=[A B C D E]，每个单词映射成一个100维的向量&lt;/li&gt;&lt;li&gt;假设卷积核窗口大小为k=3，那么每次对3个单词的向量（concat，得到3*100的一个300维的向量）进行卷积，卷积结果得到一个值，类似以下过程：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;out_1 = w_1*x_1 + w_2*x_2+.....w_300*x_300&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;那么依次对ABC、BCD、CDE进行卷积，就会得到三个值：out_1、out_2、out_3&lt;/li&gt;&lt;li&gt;对out_1、out_2、out3取最大值， 即所谓的max-pooling，就会得到一个值，不妨叫max_out_1&lt;/li&gt;&lt;li&gt;上面是只有一个卷积核的情况，如果我们使用128个卷积核，就会得到128个值，这128个值就可以当成句子的向量               &lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;        例如，我们要提取query的句子向量表示，可以表示为下图：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-36b8e3d94c201687dd3bcee2dad6b463_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;675\&quot; data-rawheight=\&quot;360\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;675\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-36b8e3d94c201687dd3bcee2dad6b463_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;        以上的操作中，卷积的时候，就类似抓取trigram信息，这个过程是保持局部的词序信息的（局部统筹）。但是max-pooling的时候，又把次序信息丢失了，max-pooling类似一个全局统筹的操作，抓取最强的语义信息。可以有其它的pooling操作，可以部分的保留次序信息，这里先不展开。另外，pooling还有一个作用，可以将变长的东西，变成定长的，因为神经网络的神经元数目需要预先设定好，所以这个pooling的操作特别巧妙。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;RNN&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;RNN可以很好的对序列进行建模，保留序列信息。每个timestamp喂入一个词的embedding，那么最后一个time_stamp的隐状态就可以当成整个句子的语义表示向量：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-48befc57b9a3e98f4535cd2a8a74a55d_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2036\&quot; data-rawheight=\&quot;794\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2036\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-48befc57b9a3e98f4535cd2a8a74a55d_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;matching function:&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;得到query和doc的向量表示后，可以由以下几种方式得到它们的语义匹配分：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;cosine&lt;/li&gt;&lt;li&gt;内积&lt;/li&gt;&lt;li&gt;接一个或者多个MLP，最后一层的输出层只有一个节点，那么最后一层的输出值就可以表示匹配分&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h2&gt;&lt;b&gt;part-6.2 Interaction based的一些方法介绍&lt;/b&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;ARC-II (Hu et al., NIPS ‘14) &lt;/b&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//hangli-hl.com/uploads/3/4/4/6/34465961/hu-etal-nips2014.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;hangli-hl.com/uploads/3&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/4/4/6/34465961/hu-etal-nips2014.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt; ：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;让两个句子在得到它们各自的句子向量表示之前，提前交互，使用1D conv:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;例如窗口大小为N=3，那么每次从两个句子中分别取1个trigram，然后把两个trigram的向量concat起来，然后使用一个卷积核进行卷积得到一个值&lt;/li&gt;&lt;li&gt;那么每两个trigram进行卷积，就会得到一个矩阵，这个矩阵是两个句子的基础的匹配信号，这个矩阵类似图像，是个2维的向量。&lt;/li&gt;&lt;li&gt;使用多个卷积核，就会得到多个矩阵，即tensor&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;得到多个有关两个句子的基础匹配信号的矩阵后，就可以像处理图像一样，处理每一个矩阵。常见的操作就是使用2D的卷积核。不断的卷积，就会得到一个定长的向量，然后再接MLP，最后一层的输出节点数目只有1，就得到了它们的匹配分。&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-1f41a6c9bae44e1796225e234b71ee2c_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2208\&quot; data-rawheight=\&quot;948\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2208\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-1f41a6c9bae44e1796225e234b71ee2c_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;这个模型的优缺点：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;优点是，有基础的匹配信号矩阵，可解释性强，而且卷积操作是保留次序信息的&lt;/li&gt;&lt;li&gt;缺点是，基于trigram的匹配，没有unigram的匹配信号，不过这个稍微改一下就可以了；另外没有特别区分精确匹配（sim=1.0）和普通匹配信号(sim&amp;lt;1.0)&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;MatchPyramid (Pang et al., AAAI ‘16)  &lt;/b&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//cn.arxiv.org/pdf/1602.06359\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;cn.arxiv.org/pdf/1602.0&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;6359&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;和上文类似，只是这里不是trigram的基础匹配信号，而是使用unigram的匹配信号，即word-level的匹配信号，每两个词的向量算cosine即得到两个词的相似度。那么两个句子中每两个词都计算一遍相似度，就可以得到一个匹配矩阵，然后就可以像处理图像一样处理这个矩阵（用2D-CNN来提取匹配模式，或者更大片段的匹配信号）：&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-7981140ce0a7da3c548c8b7df81b4985_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2192\&quot; data-rawheight=\&quot;754\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2192\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-7981140ce0a7da3c548c8b7df81b4985_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;      同理，这里匹配矩阵是保留词序信息的。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Match-SRNN (Wan et al., IJCAI ‘16)  &lt;/b&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//arxiv.org/pdf/1604.04378.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;arxiv.org/pdf/1604.0437&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;8.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;这篇论文利用了和动态规划类似的思想。假设我们有了基础的word-level(或者说unigram粒度)的匹配信号矩阵后，怎么得到这两个句子最终的匹配分呢？假设query的长度是n，doc的长度是m，f[i][j]表示query的前i个词和doc的前j个词的匹配分，那么f[n][m]就是最终的query和doc的匹配分。那么怎么得到f[i][j]呢？&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;       由动态规划的转移方程，我们可以得知，f[i][j]和以下信息有关：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;f[i-1][j]&lt;/li&gt;&lt;li&gt;f[i][j-1]&lt;/li&gt;&lt;li&gt;f[i-1][j-1]&lt;/li&gt;&lt;li&gt;query[i]和doc[j]的相似度打分，query[i]表示query的第i个词，doc[j]表示doc的第j个词，不妨用s[i][j]表示这个打分。&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;      那么f[i][j] = func(f[i-1][j], f[i][j-1], f[i-1][j-1], s[i][j])，论文中用一个2D的gru拟合这个func。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-b89b0ce72773fb42dcce1e62974775f9_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1460\&quot; data-rawheight=\&quot;740\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1460\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-b89b0ce72773fb42dcce1e62974775f9_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Decomposable Attention Model for Matching (Parikh et al., EMNLP ‘16)&lt;/b&gt; &lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//aclweb.org/anthology/D16-1244\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;aclweb.org/anthology/D1&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;6-1244&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt; ：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;这个论文的主要思路是使用attention：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;假设query的每个词对应的词向量是：query=[a1, a2, a3]，doc的每个词对应的词向量是：doc=[b1, b2, b3]&lt;/li&gt;&lt;li&gt;attention类似一种对齐机制，query的每个词都会去跟doc做attention，例如a1去跟doc去做attention，得到的向量表示是A1。那么query的每个词都去跟doc做一遍attention，就得到[A1,A2,A3]&lt;/li&gt;&lt;li&gt;同理，doc的每个词都去跟query做一遍attention，就得到[B1, B2, B3]&lt;/li&gt;&lt;li&gt;使用一个function，例如一个简单的神经网络，例如一层的FC作用到每个词和它的attention向量上，例如f(a1, A1) = X1，f(b1, B1) = Y1&lt;/li&gt;&lt;li&gt;然后做一个简单的累加，v1=sum(X1, X2, X3)，v2=sum(Y1，Y2，Y3）&lt;/li&gt;&lt;li&gt;然后再在v1、v2上，使用简单的FC层，就可以获得它们的相似度打分&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-ded4c51e8a21a2e453864368710e61dd_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1126\&quot; data-rawheight=\&quot;592\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1126\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-ded4c51e8a21a2e453864368710e61dd_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;part-6.3 representation-based 和interaction-based方法的融合&lt;/b&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Duet, Mitra et al., WWW ‘17&lt;/b&gt; &lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//www.microsoft.com/en-us/research/wp-content/uploads/2016/10/wwwfp0192-mitra.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;microsoft.com/en-us/res&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;earch/wp-content/uploads/2016/10/wwwfp0192-mitra.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt; ：&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-0c3a041146aa2bb0bf8cd90bf4d1c02e_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1273\&quot; data-rawheight=\&quot;632\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1273\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-0c3a041146aa2bb0bf8cd90bf4d1c02e_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;    这篇论文的卖点是，将interaction based的模型和representation based的模型融合。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;Representation based和Interaction based的效果、优缺点&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-084b4c04c84e96b9edca6f4262792dda_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1225\&quot; data-rawheight=\&quot;532\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1225\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-084b4c04c84e96b9edca6f4262792dda_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;效果上是interaction based好一些，但是representation based的方法，可以提前把doc的embedding计算出来，建网页库的时候就存进去，不用实时计算&lt;/b&gt;。&lt;br&gt;&lt;/p&gt;&lt;p&gt;总结一下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Representation based：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;重点是学习文本的句子表示；可以提前把文本的语义向量计算好，在线预测时，不用实时计算。&lt;/li&gt;&lt;li&gt;在学习出句子向量之前，两者没有任何交互，细粒度的匹配信号丢失。学习出来的向量可能是两个不同向量空间的东西，通过上层的融合层和loss，强制性的拉近两个向量。&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;interaction based：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;有细粒度、精细化的匹配信号，上层进行更大粒度的匹配模式的提取；可解释性好&lt;/li&gt;&lt;li&gt;在线计算代价大。 &lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h2&gt;&lt;b&gt;part-7 搜索里的query和doc的相关性匹配 &lt;/b&gt;&lt;/h2&gt;&lt;p&gt;      这一part和前文有点跳跃性的转弯了，突然跳到一个相关性匹配（前文是语义匹配）的问题。但两者相关性高，语义匹配是相关性匹配的基础技术。例如，在工业界的搜索引擎中，网页doc往往可以切分为不同的part，然后可以在不同的part上，应用上述的深度学习匹配技术，然后将不同part的匹配分融合，得到最后的query和doc的匹配分。&lt;/p&gt;&lt;p&gt;       首先，作者阐明相似度!=相关性，区别是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;相似性：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;判断两个句子语义、意思是否相似&lt;/li&gt;&lt;li&gt;一般是同质的两段文本，例如两个句子、两个文章&lt;/li&gt;&lt;li&gt;在两段文本的不同位置进行匹配&lt;/li&gt;&lt;li&gt;匹配函数是对称的，因为是同质的文本进行匹配&lt;/li&gt;&lt;li&gt;代表性任务：同义句子识别&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;相关性：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;判断文档和搜索query是否相关&lt;/li&gt;&lt;li&gt;不同质的两段文本，例如一个是query，一个是网页&lt;/li&gt;&lt;li&gt;在网页的不同部分进行匹配，例如title、锚文本(链接对应的文本)、正文&lt;/li&gt;&lt;li&gt;匹配函数不是对称的，因为不是同质的文本进行匹配&lt;/li&gt;&lt;li&gt;代表性任务：query-网页检索&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-e439ec76d8428e792c226c6a39309028_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1288\&quot; data-rawheight=\&quot;962\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1288\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-e439ec76d8428e792c226c6a39309028_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;Query-Document Relevance Matching的方法也主要分为两大类：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;Based on global distribution of matching strengths，基于全局的匹配信号&lt;/li&gt;&lt;li&gt;Based on local context of matched terms，基于局部的term级别的匹配信号&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h2&gt;&lt;b&gt;part-7.1 based on Global Distribution of Matching Strengths的一些方法介绍&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;   这种方法的基本步骤：&lt;/p&gt;&lt;p&gt;        1.对于query中的每个term:&lt;/p&gt;&lt;p&gt;                    a.计算它在doc中的匹配信号&lt;/p&gt;&lt;p&gt;                    b.计算整体的匹配强度的分布&lt;/p&gt;&lt;p&gt;         2.累计匹配强度的分布&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Deep Relevance Matching Model (Guo et al., CIKM ’16 )&lt;/b&gt; &lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.bigdatalab.ac.cn/%7Egjf/papers/2016/CIKM2016a_guo.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;bigdatalab.ac.cn/~gjf/p&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;apers/2016/CIKM2016a_guo.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;这篇论文更像interaction-based的方法:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;和match matrix类似，使用cosine就算两个单词的相似度，这个模型直接用使用  word2vec的词向量，不在模型中学习。这样可以使用少量的标注样本，专注于匹配函数的学习。而无监督的数据容易大量获得，所以学习word2vec是一件容易的事&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;                   对于query中的每个term：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;将它和文档的所有单词的匹配分，离散化分桶。特别是，为精确匹配单独划分一个桶。统计在每个桶上的次数，即得到一个关于这个term和文档匹配分的一个直方图，即一个向量。&lt;/li&gt;&lt;li&gt;得到上述向量后，使用全连接层学习匹配分。注意，不同的单词 ，这些全连接层的参数是共享的。&lt;/li&gt;&lt;li&gt;将上述的匹配加权求和，这里的权重论文中也介绍了两者方法，其中一种是使用简单的IDF。&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-53ec00fa4593b1500b953d8a79f30e31_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1291\&quot; data-rawheight=\&quot;679\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1291\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-53ec00fa4593b1500b953d8a79f30e31_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;这个模型的优点是：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;区分精确匹配和普通的相似度匹配信号&lt;/li&gt;&lt;li&gt;使用直方图，不用像卷积那样子使用padding&lt;/li&gt;&lt;li&gt;相比原始的匹配信号，直方分布图更鲁棒&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;缺点是：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;失去了位置信息。但这篇论文要解决的是Ad-hoc Retrieval的问题，位置信息相对没那么重要。&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;K-NRM: Kernel Pooling as Matching Function (Xiong et al., SIGIR ‘17)&lt;/b&gt; &lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//arxiv.org/pdf/1706.06613.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;arxiv.org/pdf/1706.0661&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;3.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;这篇论文也是interaction-based的方式，步骤如下：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;先用cosine计算query和doc的match matrix&lt;/li&gt;&lt;li&gt;对于match matrix的每一行，应用K个pooling-kernel，得到一个K维的向量&lt;/li&gt;&lt;li&gt;然后将每一行的K的向量加和，得到一个K维的向量，然后后面就可以接FC层，得到匹配分&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-a6b792db169eb38d1d3e22e7434261b6_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2244\&quot; data-rawheight=\&quot;1020\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2244\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-a6b792db169eb38d1d3e22e7434261b6_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;现在介绍一下这个pooling函数。首先，整个模型的流程用数学符号表示如下：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-74cd928d41ca7d449eacaeb44e49ed05_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;798\&quot; data-rawheight=\&quot;396\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;798\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-74cd928d41ca7d449eacaeb44e49ed05_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;其中M表示匹配矩阵，M[i][j]表示匹配矩阵里的第i行的第j个元素。&lt;/p&gt;&lt;p&gt;论文中采用RBF的pooling-kernel函数：&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic4.zhimg.com/v2-aaade8657de53d9514fee0951ccfeb41_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;444\&quot; data-rawheight=\&quot;130\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;444\&quot; data-original=\&quot;https://pic4.zhimg.com/v2-aaade8657de53d9514fee0951ccfeb41_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;其中 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=%5Cmu_%7Bk%7D%E5%92%8C%5Csigma_%7Bk%7D\&quot; alt=\&quot;\\mu_{k}和\\sigma_{k}\&quot; eeimg=\&quot;1\&quot;&gt; 是第k个kernel的超参（应该也可以学习得来）， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=M_%7Bi%7D\&quot; alt=\&quot;M_{i}\&quot; eeimg=\&quot;1\&quot;&gt; 表示匹配矩阵的第i行。&lt;/p&gt;&lt;p&gt;论文中讲了，这个pooling可以泛化到很多pooling函数的：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;    μ = 1 and σ → 0 ，那么除非M[i][j]=1，否则 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=-%5Cfrac%7B%EF%BC%88M_%7Bij%7D-%5Cmu_%7Bk%7D%EF%BC%89%5E%7B2%7D%7D%7B%5Csigma%5E%7B2%7D%7D\&quot; alt=\&quot;-\\frac{（M_{ij}-\\mu_{k}）^{2}}{\\sigma^{2}}\&quot; eeimg=\&quot;1\&quot;&gt; 都是负无穷大，exp后的值就是0，所以只有M[i][j]=1才会得到非零值，所以这个时候，kernel只会抓取精确匹配的信号&lt;/li&gt;&lt;li&gt;如果    σ → ∞ ， &lt;img src=\&quot;http://www.zhihu.com/equation?tex=-%5Cfrac%7B%EF%BC%88M_%7Bij%7D-%5Cmu_%7Bk%7D%EF%BC%89%5E%7B2%7D%7D%7B%5Csigma%5E%7B2%7D%7D\&quot; alt=\&quot;-\\frac{（M_{ij}-\\mu_{k}）^{2}}{\\sigma^{2}}\&quot; eeimg=\&quot;1\&quot;&gt; 基本趋于0，所以所有值的贡献都一样，类似捕捉的是doc的term的数目。论文中说这时，kernel函数类似于mean-pooling，这是我暂时还理解不了的。&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;同理，这个模型是忽略了顺序信息的。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Conv-KNRM (Dai et al., WSDM ‘18)&lt;/b&gt; &lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.cs.cmu.edu/%7Ecallan/Papers/wsdm18-zhuyun-dai.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;cs.cmu.edu/~callan/Pape&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;rs/wsdm18-zhuyun-dai.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br&gt;   看懂了KNRM后，这篇论文就比较简单，只是用Conv来分别抓取unigram和bigram的信号，然后分别做match-matrix: q-unigram vs d-unigram、q-unigram vs d-bigram、q-bigram vs d-unigram、q-bigram vs d-bigram，然后四个矩阵的匹配信号concat起来即可。&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-a04ff625644bbe8082c06e5f80a95f9f_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1050\&quot; data-rawheight=\&quot;628\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1050\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-a04ff625644bbe8082c06e5f80a95f9f_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;part-7.2 based on Local Context of Matched Terms的一些方法介绍&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;based on Global Distribution of Matching Strengths的方法是，对于query中的每个term，直接求解它和整个文档的匹配信号。而based onLocal Context of Matched Terms的方法是，对于query中的每个term:&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;找出它要匹配的doc的局部上下文&lt;/li&gt;&lt;ul&gt;&lt;li&gt;匹配query和doc的局部上下文&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;累计每一个term的匹配信号&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;这种方法的好处是：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;鲁棒性强，可以过滤掉doc和query无关的部分&lt;/li&gt;&lt;li&gt;在doc的局部上下文，可以很好的考虑顺序信息&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;DeepRank (Pang et al., CIKM ’17 )&lt;/b&gt; &lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//arxiv.org/pdf/1710.05649.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;arxiv.org/pdf/1710.0564&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;9.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;    这个论文的方法比较简单。模仿人类的判断相关性的过程：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;对于query中的每个term，找出它在doc中出现的位置。&lt;/li&gt;&lt;li&gt;例如query的第二个term:q2，它在doc中三个地方出现，对于这三个位置，分别取出2k+1个词（前后各取k个），不妨假设取出来的三个句子是s1、s2、s3，然后可以用match-matrix等各种方法算出query和s1、s2、s3匹配信号，然后用rnn融合这三个匹配信号，得到一个匹配分&lt;/li&gt;&lt;li&gt;将每个term的匹配分加权求和得到最后的匹配分&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-61527adf31aba77d61f53c38258cfa80_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1060\&quot; data-rawheight=\&quot;534\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1060\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-61527adf31aba77d61f53c38258cfa80_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic3.zhimg.com/v2-df6c674056e341cf97fe6a129d164215_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2114\&quot; data-rawheight=\&quot;1084\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2114\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-df6c674056e341cf97fe6a129d164215_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Position-Aware Neural IR Model (PACRR, Hui et al., EMNLP ’17)&lt;/b&gt; &lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//arxiv.org/pdf/1704.03940.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;arxiv.org/pdf/1704.0394&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;0.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;其实这篇论文更多的是讲用不同大小的卷积核抓取不同粒度的匹配信号，然后把不同粒度的匹配信号concat，然后用一个rnn将query的每一个term的匹配信号（匹配信号+每个term的权重）融合，得到最后的匹配分。具体步骤：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;先基于unigram，计算query和doc的match matrix&lt;/li&gt;&lt;li&gt;对于上述的match-matrix，使用不同大小的卷积核进行卷积，例如2*2对应获取bigram的匹配信号，3*3对应获取trigram的匹配信号，同样这样的每种粒度的匹配信号，都对应一个match-matrix&lt;/li&gt;&lt;li&gt;对于query中的每个term，将上述的不同粒度的匹配信号融合，例如通过max-pooling、concat等，反正每个term都得到一个关于匹配信号的向量。这个向量还会插入一个新的信号，就是这个term的权重信号。&lt;/li&gt;&lt;li&gt;然后用一个rnn将上述的匹配向量融合，得到最后的匹配分。&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-0afd62f8b308d6c659a084eba8fb1f61_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;2210\&quot; data-rawheight=\&quot;710\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;2210\&quot; data-original=\&quot;https://pic2.zhimg.com/v2-0afd62f8b308d6c659a084eba8fb1f61_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;不过论文中讲了，为了方便后续的卷积，需要将原始的q*d的匹配矩阵，转化成定长的 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=l_%7Bq%7D%2Al_%7Bd%7D\&quot; alt=\&quot;l_{q}*l_{d}\&quot; eeimg=\&quot;1\&quot;&gt; 的匹配矩阵，虽然个人觉得不是定长的也没啥问题。这里还是介绍一下论文中提出的将原始的匹配矩阵转化成定长的匹配矩阵的两种方法：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;firstk-简单的取前 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=l_%7Bq%7D\&quot; alt=\&quot;l_{q}\&quot; eeimg=\&quot;1\&quot;&gt; 行和前 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=l_%7Bd%7D\&quot; alt=\&quot;l_{d}\&quot; eeimg=\&quot;1\&quot;&gt; 列，不足的补0&lt;/li&gt;&lt;li&gt;kwindow-为了抓取n-gram的匹配信号，不妨假设n=3：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;对于doc的所有长度为n个词的片段：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;计算这个n-gram和query的相似度，例如：计算n-gram的第一个词和query的所有词的相似度，取max，然后将这个n-gram的所有词计算出来的相似度max值取avg，作为这个n-gram和query的相似度打分，然后取top-k个最高分的片断，凑齐长度 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=l_%7Bd%7D\&quot; alt=\&quot;l_{d}\&quot; eeimg=\&quot;1\&quot;&gt;&lt;/li&gt;&lt;li&gt;对于每一个n，都取出这样的一堆长度和为 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=l_%7Bd%7D\&quot; alt=\&quot;l_{d}\&quot; eeimg=\&quot;1\&quot;&gt; 的词，用这堆文本和query计算匹配矩阵，叫 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=sim_%7Bl_p%2Al_d%7D%5E%7Bn%7D\&quot; alt=\&quot;sim_{l_p*l_d}^{n}\&quot; eeimg=\&quot;1\&quot;&gt; ，那么对于上述的卷积核大小为n*n的卷积，输入就是 &lt;img src=\&quot;http://www.zhihu.com/equation?tex=sim_%7Bl_p%2Al_d%7D%5E%7Bn%7D\&quot; alt=\&quot;sim_{l_p*l_d}^{n}\&quot; eeimg=\&quot;1\&quot;&gt; 。这种情况下，卷积层的stride为[1,n]，即query每次滑动一个词，doc每次滑动n个词，保证处理的是doc的连续的n个词。&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;不过本人还是觉得这篇论文的重点是用不同大小的卷积核抓取不同粒度的匹配信号，而不是所谓的position-aware。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;part-8 short summary &lt;/b&gt;&lt;/h2&gt;&lt;p&gt;    搜索着重解决相关性、权威性、时效性等问题，深度学习匹配是解决相关性的大杀器。&lt;/p&gt;&lt;p&gt;模型结构上，以下结构都值得尝试：&lt;/p&gt;&lt;ul&gt;&lt;ul&gt;&lt;li&gt;bow&lt;/li&gt;&lt;li&gt;CNN&lt;/li&gt;&lt;li&gt;RNN、双向RNN、LSTM、GRU&lt;/li&gt;&lt;li&gt;match-matrix&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;    PLSA同样可以做到语义层面的匹配，但是深度学习可以基于有监督数据进行训练，label可以和直接的任务相关，而不是泛泛意义上的匹配。DNN使用语义平滑的word embedding，可以大大提高模型的泛化性。&lt;/p&gt;&lt;p&gt;    模型方法论上，深度学习匹配可以分为representation based的和interaction based的。而具体到将匹配技术应用到搜索里的相关性问题，又可以分为based on Global Distribution of Matching Strengths的和based on Local Context of Matched Terms的。&lt;/p&gt;&lt;p&gt;   最后，安利一下这篇reference &lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/PxyazOPKV3eB-qat8hM9ZQ\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;百度NLP | 神经网络语义匹配技术&lt;/a&gt; ，将这篇文章和本文的tutorial里的细节都看懂，相信你的功力会大增。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;参考连接：&lt;/p&gt;&lt;p&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//www.comp.nus.edu.sg/%7Exiangnan/sigir18-deep.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;comp.nus.edu.sg/~xiangn&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;an/sigir18-deep.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//arxiv.org/pdf/1706.06613.pdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;arxiv.org/pdf/1706.0661&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;3.pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//arxiv.org/abs/1511.08277\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;[1511.08277] A Deep Architecture for Semantic Matching with Multiple Positional Sentence Representations&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/PxyazOPKV3eB-qat8hM9ZQ\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;百度NLP | 神经网络语义匹配技术&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/Kb5wHvT4FQL_Sm_K5emcag\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;“百度一下”背后：深度学习技术的最新应用&lt;/a&gt;&lt;/p&gt;&quot;,&quot;commentCount&quot;:5,&quot;imageUrl&quot;:&quot;&quot;,&quot;linkbox&quot;:{&quot;url&quot;:&quot;&quot;,&quot;category&quot;:&quot;&quot;,&quot;pic&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;},&quot;excerptNew&quot;:&quot;讲真，很久没看过能让我这么兴奋的资料了，这个tutorialhttps://www.comp.nus.edu.sg/~xiangnan/sigir18-deep.pdf简直就像一个博士论文，能让我对这个方向有足够深入的了解。而我最近又恰好从事这个方向，恰好也是落地到搜索引擎和推荐系统中，刚看到这个tutor…&quot;,&quot;excerptTitle&quot;:&quot;&quot;,&quot;previewText&quot;:&quot;&quot;,&quot;voting&quot;:0,&quot;type&quot;:&quot;article&quot;},&quot;45469008&quot;:{&quot;updated&quot;:1538024171,&quot;author&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;机器之心&quot;,&quot;headline&quot;:&quot;国内领先的前沿科技媒体和产业服务平台&quot;,&quot;urlToken&quot;:&quot;ji-qi-zhi-xin-65&quot;,&quot;userType&quot;:&quot;organization&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/06a67981ced7a2e9f07005185605685c&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/v2-dd115d399e55c37e3312c8ee4713890e_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:true,&quot;gender&quot;:1,&quot;badge&quot;:[{&quot;type&quot;:&quot;identity&quot;,&quot;description&quot;:&quot;已认证的官方帐号&quot;}],&quot;id&quot;:&quot;06a67981ced7a2e9f07005185605685c&quot;},&quot;excerpt&quot;:&quot;选自hackernoon，作者：javinpaul，机器之心编译。同学，你会手写二叉树吗？近来正值秋招季节，很多编程面试都要求手写数据结构手推机器学习算法。各位同学为了面试也会刷各种编程题，其中数据结构与排序搜索算法又是最为基础的内容。在本文中，我们为各位读者准备了 48 道基础面试题，它可以帮助我们更深地理解数据结构。本文所有面试题都提供了 Java 解决方案，并介绍了比较流行的 GitHub 面试题项目。很多计算机科学专业毕业…&quot;,&quot;collection&quot;:{&quot;title&quot;:&quot;实习&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/collections/191439643&quot;,&quot;answerCount&quot;:148,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:1,&quot;isPublic&quot;:true,&quot;type&quot;:&quot;collection&quot;,&quot;id&quot;:191439643},&quot;id&quot;:45469008,&quot;voteupCount&quot;:125,&quot;upvotedFollowees&quot;:[],&quot;created&quot;:1538024171,&quot;url&quot;:&quot;https://api.zhihu.com/articles/45469008&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;title&quot;:&quot;手写二叉树？程序员面试最常见问题TOP 48&quot;,&quot;previewType&quot;:&quot;default&quot;,&quot;content&quot;:&quot;&lt;p&gt;选自hackernoon，作者：javinpaul，机器之心编译。&lt;/p&gt;&lt;blockquote&gt;同学，你会手写二叉树吗？近来正值秋招季节，很多编程面试都要求手写数据结构手推机器学习算法。各位同学为了面试也会刷各种编程题，其中数据结构与排序搜索算法又是最为基础的内容。在本文中，我们为各位读者准备了 48 道基础面试题，它可以帮助我们更深地理解数据结构。本文所有面试题都提供了 Java 解决方案，并介绍了比较流行的 GitHub 面试题项目。&lt;/blockquote&gt;&lt;p&gt;很多计算机科学专业毕业生和程序员都会去 Uber、今日头条这样的独角兽公司，或者亚马逊、微软和谷歌这样的科技巨头申请编程和软件开发职位。你在申请这些工作时，肯定很想知道面试官会问到哪些问题。&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-216a3179e29817311959ea77d5990917_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;1038\&quot; data-rawheight=\&quot;498\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1038\&quot; data-original=\&quot;https://pic1.zhimg.com/v2-216a3179e29817311959ea77d5990917_r.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;在本文中，作者会分享一些常见的编程面试问题，这些问题来自于针对不同经验层次的程序员的面试——从应届毕业生到具有一两年经验的程序员。&lt;/p&gt;&lt;p&gt;编程面试题通常包含数据结构和基于算法的问题，以及一些逻辑问题，例如：如何在不使用临时变量的情况下交换两个整数？&lt;/p&gt;&lt;p&gt;为了清晰，编程面试题需要划分为不同主题。我们在面试中经常看到的领域是数组、链表、字符串、二叉树以及有关算法的问题（例如字符串算法、快速排序或基数排序等排序算法），本文将介绍这些内容。&lt;/p&gt;&lt;p&gt;虽然本文无法覆盖你在面试中将要面临的所有问题，但是它可以给你提供足够的思路，让你在面试时对于各种挑战有所准备。&lt;/p&gt;&lt;p&gt;一旦解决了这些问题，你就可以有信心面对任何电话面试或现场面试了。&lt;/p&gt;&lt;p&gt;当然，如果你对于基本数据结构和算法没有足够的知识储备，那么直接接触以下问题将对你没有帮助。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;算法和编程面试题 TOP 48&lt;/b&gt;&lt;/p&gt;&lt;p&gt;废话少说，这里有一份「编程面试最常见的问题列表」：&lt;/p&gt;&lt;p&gt;&lt;b&gt;1. 数组编程面试问题&lt;/b&gt;&lt;/p&gt;&lt;p&gt;数组是最基本的数据结构，它将元素储存在连续的内存空间中。数组也是面试官最喜欢问的主题之一，在任何编程面试中都能听到非常多关于数组的问题，例如反转数组、排序数组或搜索数组元素等。&lt;/p&gt;&lt;p&gt;数组这种数据结构的主要优点在于如果给定索引，那么它会提供 O(1) 复杂度的搜索，这种搜索速度非常迅速。但是从数组中添加或移除元素会比较慢，因为一旦创建了数组，我们就很难再更改它的大小。如果需要更长或更短的数组，我们就需要重新创建新数组，并将老数组的所有元素复制到新数组中。&lt;/p&gt;&lt;p&gt;解决数组问题的关键是对数组数据结构有比较深的理解，同时还需要了解循环、递归和基本运算子等常见的编程结构。以下是一些常见的数组编程面试问题：&lt;/p&gt;&lt;p&gt;1. 在一个元素为 1 到 100 的整数数组中，如何搜索缺失元素？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.com/2014/11/how-to-find-missing-number-on-integer-array-java.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.com&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2014/11/how-to-find-missing-number-on-integer-array-java.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;2. 给定一个数组，如何搜索重复元素？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.com/2014/01/how-to-remove-duplicates-from-array-java-without-collection-API.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.com&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2014/01/how-to-remove-duplicates-from-array-java-without-collection-API.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;3. 给定一个乱序数组，如何搜索最大和最小元素？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//java67.blogspot.com/2014/02/how-to-find-largest-and-smallest-number-array-in-java.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.blogspot.com/201&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;4/02/how-to-find-largest-and-smallest-number-array-in-java.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;4. 给定一个数值，如何搜索整数数组中加和为该数值的成对元素？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.com/2014/08/how-to-find-all-pairs-in-array-of-integers-whose-sum-equal-given-number-java.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.com&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2014/08/how-to-find-all-pairs-in-array-of-integers-whose-sum-equal-given-number-java.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;5. 如果数组包含多个重复值，如何搜索所有重复值？&lt;/li&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.com/2014/03/3-ways-to-find-first-non-repeated-character-String-programming-problem.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.com&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2014/03/3-ways-to-find-first-non-repeated-character-String-programming-problem.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;6. 给定一个数组，如何用 Java 删除重复元素？如何在不使用库的情况下移除数组中的重复元素？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.com/2014/01/how-to-remove-duplicates-from-array-java-without-collection-API.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.com&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2014/01/how-to-remove-duplicates-from-array-java-without-collection-API.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;7. 如何使用快速排序算法对整数数组进行排序？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.com/2014/08/quicksort-sorting-algorithm-in-java-in-place-example.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.com&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2014/08/quicksort-sorting-algorithm-in-java-in-place-example.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;8. 如何使用 Java 反转一个数组？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.com/2013/03/how-to-reverse-array-in-java-int-String-array-example.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.com&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2013/03/how-to-reverse-array-in-java-int-String-array-example.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这些问题不仅能帮助我们提高解决问题的能力，同时也能提升我们关于数组数据结构的理解。&lt;/p&gt;&lt;p&gt;如果你需要了解更多基于数组的深度问题，你可以在 GitHub 或 Coursera 上多找找关于数据结构的课程与资料，例如在 GitHub 中，就有非常多关于数组的学习资料，下面我们介绍了一份中文版的谷歌的面试资料，它在 GitHub 上有 6 万多的收藏量。&lt;/p&gt;&lt;p&gt;项目地址：&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//github.com/jwasham/coding-interview-university/blob/master/translations/README-cn.md\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;github.com/jwasham/codi&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;ng-interview-university/blob/master/translations/README-cn.md&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;2. 链表编程面试问题&lt;/b&gt;&lt;/p&gt;&lt;p&gt;链表是补充数组数据结构的另一种常见数据结构。与数组类似，它也是线性数据结构，以线性方式存储元素。&lt;/p&gt;&lt;p&gt;然而，与数组不同的是，它不会将元素存储在连续的位置；相反，它会将其分散存储在内存中，彼此通过节点相互连接。链表是节点列表，其中每个节点包含存储的值和下一个节点的地址。&lt;/p&gt;&lt;p&gt;由于这种结构，在链表中添加或删除元素变得很简单，因为你只需要改变链接而不是创建数组，但是这样会使搜索变得困难，并且经常需要 O(n) 的时间复杂度才能在单个链表中找到某个元素。&lt;/p&gt;&lt;p&gt;这篇文章（&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//javarevisited.blogspot.com/2013/07/difference-between-array-and-linked-list-java.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.com&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2013/07/difference-between-array-and-linked-list-java.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;）提供了更多关于数组和链表数据结构之间差异的信息。&lt;/p&gt;&lt;p&gt;链表还有多种变体，如单链表，即允许在一个方向（正向或反向）上遍历；双链表则允许你在两个方向（向前或向后）遍历；最后是循环链表，它形成一个循环。&lt;/p&gt;&lt;p&gt;要解决关于链表的问题，掌握递归知识很重要，因为链表是递归数据结构。&lt;/p&gt;&lt;p&gt;如果你从链表中取出一个节点，剩下的数据结构仍然是链表，因此，许多链表问题的递归解比迭代解更简单。&lt;/p&gt;&lt;p&gt;以下是关于链表的一些常见问题和解决方案：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;9. 如何在一次传递中找到单链表的中间元素？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2012/12/how-to-find-middle-element-of-linked-list-one-pass.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2012/12/how-to-find-middle-element-of-linked-list-one-pass.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;10. 如何检查给定的链表是否包含循环？如何找到循环的起始节点？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2013/05/find-if-linked-list-contains-loops-cycle-cyclic-circular-check.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2013/05/find-if-linked-list-contains-loops-cycle-cyclic-circular-check.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;11. 如何反转链表？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2016/07/how-to-reverse-singly-linked-list-in-java-example.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2016/07/how-&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;to-reverse-singly-linked-list-in-java-example.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;12. 在没有递归的情况下如何反转单链表？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2017/03/how-to-reverse-linked-list-in-java-using-iteration-and-recursion.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2017/03/how-to-reverse-linked-list-in-java-using-iteration-and-recursion.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;13. 如何删除乱序链表中的重复节点？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//www.geeksforgeeks.org/remove-duplicates-from-an-unsorted-linked-list/\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;geeksforgeeks.org/remov&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;e-duplicates-from-an-unsorted-linked-list/&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;14. 如何测量单链表的长度？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2016/05/how-do-you-find-length-of-singly-linked.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2016/05/how-do-you-find-length-of-singly-linked.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;15. 如何从单链表的末端找出第三个节点？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2016/07/how-to-find-3rd-element-from-end-in-linked-list-java.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2016/07/how-to-find-3rd-element-from-end-in-linked-list-java.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;16. 如何使用堆栈算出两个链表的总和？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//www.geeksforgeeks.org/sum-of-two-linked-lists/\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;geeksforgeeks.org/sum-o&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;f-two-linked-lists/&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这些问题有助于你发展解决问题的技能，并提升你对链表数据结构的了解。目前有非常多的资源可以帮助我们理解链表，例如在 GitHub 上一个交互式的编码实践中，它使用 Jupyter Notebook 提供了数据结构与算法的各种练习，其中就包括了很多链表问题及实践。&lt;/p&gt;&lt;p&gt;项目地址：&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//github.com/donnemartin/interactive-coding-challenges\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;github.com/donnemartin/&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;interactive-coding-challenges&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-fb9a3ec6e9e101acb2564e9cb9b78cbb_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;299\&quot; data-rawheight=\&quot;168\&quot; class=\&quot;content_image\&quot; width=\&quot;299\&quot;&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;3. 字符串编码面试问题&lt;/b&gt;&lt;/p&gt;&lt;p&gt;除了数组和链表数据结构，字符串也是编程工作面试中的另一热点话题。我参加过的编码面试基本都问过关于字符串的问题。&lt;/p&gt;&lt;p&gt;如果你了解数组，那么你就能轻易地解决基于字符串的问题，因为字符串就是字符数组。因此，你通过解决数组编程问题学到的所有技巧，也能用来解决字符串编程问题。&lt;/p&gt;&lt;p&gt;以下是编程工作面试中常问的字符串编程问题列表：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;17. 如何打印字符串中重复的字符？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//java67.blogspot.sg/2014/03/how-to-find-duplicate-characters-in-String-Java-program.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.blogspot.sg/2014&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/03/how-to-find-duplicate-characters-in-String-Java-program.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;18. 如何检查两个字符串是否互为逆序？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2013/03/Anagram-how-to-check-if-two-string-are-anagrams-example-tutorial.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2013/03/Anagram-how-to-check-if-two-string-are-anagrams-example-tutorial.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;19. 如何打印字符串中首个非重复字符？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2014/03/3-ways-to-find-first-non-repeated-character-String-programming-problem.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2014/03/3-ways-to-find-first-non-repeated-character-String-programming-problem.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;20. 如何使用递归反转给定字符串？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2012/01/how-to-reverse-string-in-java-using.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2012/01/how-to-reverse-string-in-java-using.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;21. 如何检查一个字符串是否仅包含数字？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2012/10/regular-expression-example-in-java-to-check-String-number.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2012/10/regular-expression-example-in-java-to-check-String-number.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;22. 如何搜索字符串中的重复字符？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//java67.blogspot.sg/2014/03/how-to-find-duplicate-characters-in-String-Java-program.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.blogspot.sg/2014&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/03/how-to-find-duplicate-characters-in-String-Java-program.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;23. 给定一个字符串，如何统计元音数和辅音数？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//java67.blogspot.sg/2013/11/how-to-count-vowels-and-consonants-in-Java-String-word.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.blogspot.sg/2013&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/11/how-to-count-vowels-and-consonants-in-Java-String-word.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;24. 给定一个字符，如同计算它在字符串中出现的次数？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2012/12/how-to-count-occurrence-of-character-in-String.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2012/12/how-to-count-occurrence-of-character-in-String.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;25. 如何搜索一个字符串的所有排列情况？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.com/2015/08/how-to-find-all-permutations-of-string-java-example.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.com&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2015/08/how-to-find-all-permutations-of-string-java-example.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;26. 在不使用任何库的情况下，如何反转给定句子中的单词？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//java67.blogspot.com/2015/06/how-to-reverse-words-in-string-java.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.blogspot.com/201&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;5/06/how-to-reverse-words-in-string-java.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;27. 如何检查两个字符串是不是互为旋转（rotation）？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2017/07/string-rotation-in-java-write-program.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2017/07/stri&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;ng-rotation-in-java-write-program.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;28. 给定一个字符串，如何检查它是不是回文结构？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//java67.blogspot.com/2015/06/how-to-check-is-string-is-palindrome-in.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.blogspot.com/201&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;5/06/how-to-check-is-string-is-palindrome-in.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这些问题可以提升你对字符串数据结构的了解。如果你能独立解决所有这些字符串问题，说明你的状态很好。&lt;/p&gt;&lt;p&gt;如果想深入了解一些更复杂的问题，我推荐你去看 Steven Skiena 的《The Algorithm Design Manual》，这本书里有最难的算法问题。&lt;/p&gt;&lt;p&gt;网上也有该书的 PDF 版，下载地址：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//citeseerx.ist.psu.edu/viewdoc/download%3Fdoi%3D10.1.1.471.4772%26rep%3Drep1%26type%3Dpdf\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;citeseerx.ist.psu.edu/v&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;iewdoc/download?doi=10.1.1.471.4772&amp;amp;rep=rep1&amp;amp;type=pdf&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-6440f8dd365a29db4416de90ea715ae9_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;230\&quot; data-rawheight=\&quot;320\&quot; class=\&quot;content_image\&quot; width=\&quot;230\&quot;&gt;&lt;/figure&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;如果你需要更多的练习，这里还有另外 20 个关于字符串编程的问题：&lt;/p&gt;&lt;p&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2015/01/top-20-string-coding-interview-question-programming-interview.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2015/01/top-20-string-coding-interview-question-programming-interview.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;4. 二叉树编程面试问题&lt;/b&gt;&lt;/p&gt;&lt;p&gt;现在我们只了解了线性数据结构方面的问题，但是真实世界中的所有信息不可能全是线性的，这就需要树数据结构了。&lt;/p&gt;&lt;p&gt;树数据结构允许以层级形式存储数据。根据存储数据的方式，有多种树类型，如二叉树。&lt;/p&gt;&lt;p&gt;和它的近亲二叉搜索树一样，它也是最流行的树数据结构之一。因此，你会看到很多相关的有趣问题。例如，如何遍历树、计算节点数量、找出深度，以及检查是否平衡。&lt;/p&gt;&lt;p&gt;解决二叉树问题的关键在于深厚的理论知识，如二叉树的大小或深度、什么是叶节点、什么是节点，以及了解流行的遍历算法。&lt;/p&gt;&lt;p&gt;以下是软件工程师或开发工作面试中常见的二叉树相关编程问题：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;29. 如何实现二叉搜索树？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2015/10/how-to-implement-binary-search-tree-in-java-example.html%23axzz4wnEtnNB3\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2015/10/how-to-implement-binary-search-tree-in-java-example.html#axzz4wnEtnNB3&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;30. 如何对给定二叉树执行前序遍历？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2016/07/binary-tree-preorder-traversal-in-java-using-recursion-iteration-example.html%23axzz5ArdIFI7y\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2016/07/binary-tree-preorder-traversal-in-java-using-recursion-iteration-example.html#axzz5ArdIFI7y&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;31. 如何在没有递归的情况下对给定二叉树执行前序遍历？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2016/07/binary-tree-preorder-traversal-in-java-without-recursion.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2016/07/bina&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;ry-tree-preorder-traversal-in-java-without-recursion.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;32. 如何对给定二叉树执行中序遍历？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2016/08/binary-tree-inorder-traversal-in-java.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2016/08/bina&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;ry-tree-inorder-traversal-in-java.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;33. 如何在没有递归的情况下通过对给定二叉树执行中序遍历来打印所有节点？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2016/08/binary-tree-inorder-traversal-in-java.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2016/08/bina&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;ry-tree-inorder-traversal-in-java.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;34. 如何实现后序遍历算法？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2016/10/binary-tree-post-order-traversal-in.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2016/10/bina&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;ry-tree-post-order-traversal-in.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;35. 如何在没有递归的情况下对给定二叉树执行后序遍历？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2017/05/binary-tree-post-order-traversal-in-java-without-recursion.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2017/05/bina&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;ry-tree-post-order-traversal-in-java-without-recursion.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;36. 如何打印二叉搜索树的所有叶节点？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2016/09/how-to-print-all-leaf-nodes-of-binary-tree-in-java.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2016/09/how-&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;to-print-all-leaf-nodes-of-binary-tree-in-java.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;37. 如何计算给定二叉树中叶节点的数量？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2016/12/how-to-count-number-of-leaf-nodes-in-java-recursive-iterative-algorithm.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2016/12/how-to-count-number-of-leaf-nodes-in-java-recursive-iterative-algorithm.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;38. 如何在给定数组中执行二元搜索？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2015/10/how-to-implement-binary-search-tree-in-java-example.html%23axzz4wnEtnNB3\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2015/10/how-to-implement-binary-search-tree-in-java-example.html#axzz4wnEtnNB3&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果你认为自己对二叉树编程的了解不足，无法解决这些问题，我建议你先熟练掌握数据结构和算法知识，比如你可以上这门课《From 0 to 1: Data Structures &amp;amp; Algorithms in Java》。同样，你也可以查阅准备 Google 面试的一套完整手册，这套 GitHub 手册前面已经介绍了，但它在二叉树等数据结构上真的有非常多的案例与教程。&lt;/p&gt;&lt;p&gt;项目地址：&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//github.com/jwasham/coding-interview-university\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;github.com/jwasham/codi&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;ng-interview-university&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic2.zhimg.com/v2-9b1781f1cdf0aa945da46d4c24f4c5e8_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;299\&quot; data-rawheight=\&quot;168\&quot; class=\&quot;content_image\&quot; width=\&quot;299\&quot;&gt;&lt;/figure&gt;&lt;p&gt;如果你需要更多推荐，可以参考：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2015/07/5-data-structure-and-algorithm-books-best-must-read.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2015/07/5-data-structure-and-algorithm-books-best-must-read.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2018/01/top-5-free-data-structure-and-algorithm-courses-java%25E2%2580%2594c-programmers.html\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;http://javarevisited.blogspot.sg/2018/01/top-5-free-data-structure-and-algorithm-courses-java—c-programmers.html&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;5. 其它编程面试问题&lt;/b&gt;&lt;/p&gt;&lt;p&gt;除了数据结构方面的问题，大部分编程工作面试也会问关于算法、设计、位运算和通用的逻辑问题。&lt;/p&gt;&lt;p&gt;针对性练习很重要，因为有时在实际面试中它们会有点难解。事先练习不仅能够让你熟悉这些问题，还能让你在向面试官解释答案时更加自信。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;39. 如何实现冒泡排序算法（bubble sort algorithm）？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2014/08/bubble-sort-algorithm-in-java-with.html%23axzz5ArdIFI7y\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2014/08/bubble-sort-algorithm-in-java-with.html#axzz5ArdIFI7y&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;40. 如何实现迭代快速排序算法（iterative quicksort algorithm）？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2016/09/iterative-quicksort-example-in-java-without-recursion.html%23axzz5ArdIFI7y\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2016/09/iterative-quicksort-example-in-java-without-recursion.html#axzz5ArdIFI7y&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;41. 如何实现插入排序算法（insertion sort algorithm）？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2014/09/insertion-sort-in-java-with-example.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2014/09/inse&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;rtion-sort-in-java-with-example.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;42. 如何实现归并排序算法（merge sort algorithm）？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2018/03/mergesort-in-java-algorithm-example-and.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2018/03/merg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;esort-in-java-algorithm-example-and.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;43. 如何实现桶排序算法（bucket sort algorithm）？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2017/01/bucket-sort-in-java-with-example.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2017/01/bucket-sort-in-java-with-example.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;44. 如何实现计数排序算法（counting sort algorithm）？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2017/06/counting-sort-in-java-example.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2017/06/coun&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;ting-sort-in-java-example.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;45. 如何实现基数排序算法（radix sort algorithm）？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2018/03/how-to-implement-radix-sort-in-java.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2018/03/how-&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;to-implement-radix-sort-in-java.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;46. 如何在不使用第三个变量的前提下交换两个数字？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2015/08/how-to-swap-two-integers-without-using.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2015/08/how-&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;to-swap-two-integers-without-using.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;47. 如何确认两个矩形是否重叠？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2016/10/how-to-check-if-two-rectangle-overlap-in-java-algorithm.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2016/10/how-to-check-if-two-rectangle-overlap-in-java-algorithm.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;48. 如何设计自动贩卖机？&lt;/p&gt;&lt;ul&gt;&lt;li&gt;解决方案：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2016/06/design-vending-machine-in-java.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2016/06/design-vending-machine-in-java.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果你想查看更多此类编程问题，可以阅读这本书《Cracking the Coding Interview: 189 Programming Questions and Solutions》，适合短时间内准备编程工作面试。&lt;/p&gt;&lt;p&gt;下载地址：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//lib1.org/_ads/fcb49f53d5e943ce8acdc4469f63dc5d\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;lib1.org/_ads/fcb49f53d&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;5e943ce8acdc4469f63dc5d&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=\&quot;https://pic1.zhimg.com/v2-eb8608f33dc222118c0717347c15a1ce_b.jpg\&quot; data-caption=\&quot;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;245\&quot; data-rawheight=\&quot;320\&quot; class=\&quot;content_image\&quot; width=\&quot;245\&quot;&gt;&lt;/figure&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;你练习的问题越多，准备就越充分。因此，如果你认为 48 道题不够的话，可以查看：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//javarevisited.blogspot.com/2015/02/50-programmer-phone-interview-questions-answers.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.com&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2015/02/50-programmer-phone-interview-questions-answers.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2016/06/top-5-books-for-programming-coding-interviews-best.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2016/06/top-5-books-for-programming-coding-interviews-best.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2018/02/10-courses-to-prepare-for-programming-job-interviews.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2018/02/10-courses-to-prepare-for-programming-job-interviews.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;现在你已经准备好面试了&lt;/b&gt;&lt;/p&gt;&lt;p&gt;这部分将介绍一些数据结构和算法之外的常见问题，可以帮助你在面试中取得更好的表现。&lt;/p&gt;&lt;p&gt;我的博客中还有很多此类问题，详见：&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这些常见的编程、数据结构和算法问题是你去任何一家公司面试都必须知道的，不管是大公司还是小公司，不管面试的职位高或低。&lt;/p&gt;&lt;p&gt;如果你正在寻找编程或软件开发工作，那么你可以先使用这些编程问题开始准备。该列表提供了一些不错的面试准备话题，能够帮助你评估自己的面试准备工作是否充分。&lt;/p&gt;&lt;p&gt;熟练掌握数据结构和算法知识是编程工作面试成功的关键，你应该更多地关注这些问题。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;扩展阅读：&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Data Structures and Algorithms: Deep Dive Using Java：&lt;/b&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//click.linksynergy.com/fs-bin/click%3Fid%3DJVFxdTr9V80%26subid%3D0%26offerid%3D323058.1%26type%3D10%26tmpid%3D14538%26RD_PARM1%3Dhttps%253A%252F%252Fwww.udemy.com%252Fdata-structures-and-algorithms-deep-dive-using-java%252F\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;click.linksynergy.com/f&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;s-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fdata-structures-and-algorithms-deep-dive-using-java%2F&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;10 Books to Prepare Technical Programming/Coding Job Interviews：&lt;/b&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2017/06/10-books-to-prepare-technical-coding-job-interviews.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2017/06/10-b&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;ooks-to-prepare-technical-coding-job-interviews.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;10 Algorithm Books Every Programmer Should Read：&lt;/b&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//www.java67.com/2015/09/top-10-algorithm-books-every-programmer-read-learn.html\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://www.&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;java67.com/2015/09/top-&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;10-algorithm-books-every-programmer-read-learn.html&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Top 5 Data Structure and Algorithm Books for Java Developers：&lt;/b&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=http%3A//javarevisited.blogspot.sg/2016/05/5-free-data-structure-and-algorithm-books-in-java.html%23axzz4uXETWjmV\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;javarevisited.blogspot.sg&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;/2016/05/5-free-data-structure-and-algorithm-books-in-java.html#axzz4uXETWjmV&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;From 0 to 1: Data Structures &amp;amp; Algorithms in Java：&lt;/b&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//click.linksynergy.com/fs-bin/click%3Fid%3DJVFxdTr9V80%26subid%3D0%26offerid%3D323058.1%26type%3D10%26tmpid%3D14538%26RD_PARM1%3Dhttps%253A%252F%252Fwww.udemy.com%252Ffrom-0-to-1-data-structures%252F\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;click.linksynergy.com/f&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;s-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Ffrom-0-to-1-data-structures%2F&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Data Structure and Algorithms Analysis—Job Interview：&lt;/b&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//click.linksynergy.com/fs-bin/click%3Fid%3DJVFxdTr9V80%26subid%3D0%26offerid%3D323058.1%26type%3D10%26tmpid%3D14538%26RD_PARM1%3Dhttps%253A%252F%252Fwww.udemy.com%252Fdata-structure-and-algorithms-analysis%252F\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;click.linksynergy.com/f&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;s-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fdata-structure-and-algorithms-analysis%2F&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;原文链接：&lt;/i&gt;&lt;a href=\&quot;http://link.zhihu.com/?target=https%3A//hackernoon.com/50-data-structure-and-algorithms-interview-questions-for-programmers-b4b1ac61f5b0\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;hackernoon.com/50-data-&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;structure-and-algorithms-interview-questions-for-programmers-b4b1ac61f5b0&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&quot;,&quot;commentCount&quot;:4,&quot;imageUrl&quot;:&quot;https://pic2.zhimg.com/50/v2-08e3fde64063e079110435f278876a5e_hd.jpg&quot;,&quot;linkbox&quot;:{&quot;url&quot;:&quot;&quot;,&quot;category&quot;:&quot;&quot;,&quot;pic&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;},&quot;excerptNew&quot;:&quot;选自hackernoon，作者：javinpaul，机器之心编译。同学，你会手写二叉树吗？近来正值秋招季节，很多编程面试都要求手写数据结构手推机器学习算法。各位同学为了面试也会刷各种编程题，其中数据结构与排序搜索算法又是最为基础的内容。在本文中，我们为各位读者…&quot;,&quot;excerptTitle&quot;:&quot;&quot;,&quot;previewText&quot;:&quot;&quot;,&quot;voting&quot;:0,&quot;type&quot;:&quot;article&quot;}},&quot;columns&quot;:{},&quot;topics&quot;:{},&quot;roundtables&quot;:{},&quot;favlists&quot;:{},&quot;comments&quot;:{},&quot;notifications&quot;:{},&quot;ebooks&quot;:{},&quot;activities&quot;:{&quot;1540013027&quot;:{&quot;verb&quot;:&quot;MEMBER_COLLECT_ARTICLE&quot;,&quot;target&quot;:{&quot;id&quot;:45469008,&quot;schema&quot;:&quot;article&quot;},&quot;extraObject&quot;:{&quot;title&quot;:&quot;实习&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/collections/191439643&quot;,&quot;answerCount&quot;:148,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:1,&quot;isPublic&quot;:true,&quot;type&quot;:&quot;collection&quot;,&quot;id&quot;:191439643},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;鱼画&quot;,&quot;headline&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;ceng-yu-wei-36-33&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/893b16856ce17265646c6d653d39f3a9&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-84dfbbb4cfbc1f16f82fb7404f6eeab9_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;893b16856ce17265646c6d653d39f3a9&quot;},&quot;actionText&quot;:&quot;收藏了文章&quot;,&quot;createdTime&quot;:1540013027,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1540013027&quot;},&quot;1540013080&quot;:{&quot;verb&quot;:&quot;MEMBER_COLLECT_ANSWER&quot;,&quot;target&quot;:{&quot;id&quot;:484454218,&quot;schema&quot;:&quot;answer&quot;},&quot;extraObject&quot;:{&quot;title&quot;:&quot;实习&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/collections/191439643&quot;,&quot;answerCount&quot;:148,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:1,&quot;isPublic&quot;:true,&quot;type&quot;:&quot;collection&quot;,&quot;id&quot;:191439643},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;鱼画&quot;,&quot;headline&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;ceng-yu-wei-36-33&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/893b16856ce17265646c6d653d39f3a9&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-84dfbbb4cfbc1f16f82fb7404f6eeab9_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;893b16856ce17265646c6d653d39f3a9&quot;},&quot;actionText&quot;:&quot;收藏了回答&quot;,&quot;createdTime&quot;:1540013080,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1540013080&quot;},&quot;1540013171&quot;:{&quot;verb&quot;:&quot;MEMBER_COLLECT_ARTICLE&quot;,&quot;target&quot;:{&quot;id&quot;:38296950,&quot;schema&quot;:&quot;article&quot;},&quot;extraObject&quot;:{&quot;title&quot;:&quot;AI-&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/collections/259538072&quot;,&quot;answerCount&quot;:413,&quot;isFollowing&quot;:false,&quot;followerCount&quot;:1,&quot;isPublic&quot;:true,&quot;type&quot;:&quot;collection&quot;,&quot;id&quot;:259538072},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;鱼画&quot;,&quot;headline&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;ceng-yu-wei-36-33&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/893b16856ce17265646c6d653d39f3a9&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-84dfbbb4cfbc1f16f82fb7404f6eeab9_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;893b16856ce17265646c6d653d39f3a9&quot;},&quot;actionText&quot;:&quot;收藏了文章&quot;,&quot;createdTime&quot;:1540013171,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1540013171&quot;},&quot;1540014601&quot;:{&quot;verb&quot;:&quot;ANSWER_VOTE_UP&quot;,&quot;target&quot;:{&quot;id&quot;:495040539,&quot;schema&quot;:&quot;answer&quot;},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;鱼画&quot;,&quot;headline&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;ceng-yu-wei-36-33&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/893b16856ce17265646c6d653d39f3a9&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-84dfbbb4cfbc1f16f82fb7404f6eeab9_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;893b16856ce17265646c6d653d39f3a9&quot;},&quot;actionText&quot;:&quot;赞同了回答&quot;,&quot;createdTime&quot;:1540014601,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1540014601&quot;},&quot;1540015797&quot;:{&quot;verb&quot;:&quot;ANSWER_VOTE_UP&quot;,&quot;target&quot;:{&quot;id&quot;:514288865,&quot;schema&quot;:&quot;answer&quot;},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;鱼画&quot;,&quot;headline&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;ceng-yu-wei-36-33&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/893b16856ce17265646c6d653d39f3a9&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-84dfbbb4cfbc1f16f82fb7404f6eeab9_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;893b16856ce17265646c6d653d39f3a9&quot;},&quot;actionText&quot;:&quot;赞同了回答&quot;,&quot;createdTime&quot;:1540015797,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1540015797&quot;},&quot;1540015928&quot;:{&quot;verb&quot;:&quot;ANSWER_VOTE_UP&quot;,&quot;target&quot;:{&quot;id&quot;:513201067,&quot;schema&quot;:&quot;answer&quot;},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;鱼画&quot;,&quot;headline&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;ceng-yu-wei-36-33&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/893b16856ce17265646c6d653d39f3a9&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-84dfbbb4cfbc1f16f82fb7404f6eeab9_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;893b16856ce17265646c6d653d39f3a9&quot;},&quot;actionText&quot;:&quot;赞同了回答&quot;,&quot;createdTime&quot;:1540015928,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1540015928&quot;},&quot;1540034732&quot;:{&quot;verb&quot;:&quot;ANSWER_VOTE_UP&quot;,&quot;target&quot;:{&quot;id&quot;:514311114,&quot;schema&quot;:&quot;answer&quot;},&quot;actor&quot;:{&quot;isFollowed&quot;:false,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;鱼画&quot;,&quot;headline&quot;:&quot;&quot;,&quot;urlToken&quot;:&quot;ceng-yu-wei-36-33&quot;,&quot;userType&quot;:&quot;people&quot;,&quot;url&quot;:&quot;https://api.zhihu.com/people/893b16856ce17265646c6d653d39f3a9&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-84dfbbb4cfbc1f16f82fb7404f6eeab9_s.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;gender&quot;:1,&quot;badge&quot;:[],&quot;id&quot;:&quot;893b16856ce17265646c6d653d39f3a9&quot;},&quot;actionText&quot;:&quot;赞同了回答&quot;,&quot;createdTime&quot;:1540034732,&quot;type&quot;:&quot;feed&quot;,&quot;id&quot;:&quot;1540034732&quot;}},&quot;feeds&quot;:{},&quot;pins&quot;:{},&quot;promotions&quot;:{},&quot;drafts&quot;:{}},&quot;currentUser&quot;:&quot;&quot;,&quot;account&quot;:{&quot;lockLevel&quot;:{},&quot;unlockTicketStatus&quot;:false,&quot;unlockTicket&quot;:null,&quot;challenge&quot;:[],&quot;errorStatus&quot;:false,&quot;message&quot;:&quot;&quot;,&quot;isFetching&quot;:false,&quot;accountInfo&quot;:{},&quot;urlToken&quot;:{&quot;loading&quot;:false}},&quot;settings&quot;:{&quot;socialBind&quot;:null,&quot;inboxMsg&quot;:null,&quot;notification&quot;:{},&quot;email&quot;:{},&quot;privacyFlag&quot;:null,&quot;blockedUsers&quot;:{&quot;isFetching&quot;:false,&quot;paging&quot;:{&quot;pageNo&quot;:1,&quot;pageSize&quot;:6},&quot;data&quot;:[]},&quot;blockedFollowees&quot;:{&quot;isFetching&quot;:false,&quot;paging&quot;:{&quot;pageNo&quot;:1,&quot;pageSize&quot;:6},&quot;data&quot;:[]},&quot;ignoredTopics&quot;:{&quot;isFetching&quot;:false,&quot;paging&quot;:{&quot;pageNo&quot;:1,&quot;pageSize&quot;:6},&quot;data&quot;:[]},&quot;restrictedTopics&quot;:null,&quot;laboratory&quot;:{}},&quot;notification&quot;:{},&quot;people&quot;:{&quot;profileStatus&quot;:{&quot;ceng-yu-wei-36-33&quot;:{&quot;token&quot;:{&quot;id&quot;:&quot;893b16856ce17265646c6d653d39f3a9&quot;,&quot;urlToken&quot;:&quot;ceng-yu-wei-36-33&quot;},&quot;isFetching&quot;:false,&quot;isDrained&quot;:true}},&quot;activitiesByUser&quot;:{&quot;ceng-yu-wei-36-33&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[&quot;1540034732&quot;,&quot;1540015928&quot;,&quot;1540015797&quot;,&quot;1540014601&quot;,&quot;1540013171&quot;,&quot;1540013080&quot;,&quot;1540013027&quot;],&quot;newIds&quot;:[&quot;1540034732&quot;,&quot;1540015928&quot;,&quot;1540015797&quot;,&quot;1540014601&quot;,&quot;1540013171&quot;,&quot;1540013080&quot;,&quot;1540013027&quot;],&quot;previous&quot;:&quot;http://www.zhihu.com/api/v4/members/ceng-yu-wei-36-33/activities?before_id=1540034732&amp;limit=7&amp;desktop=True&quot;,&quot;next&quot;:&quot;http://www.zhihu.com/api/v4/members/ceng-yu-wei-36-33/activities?limit=7&amp;after_id=1540013027&amp;desktop=True&quot;}},&quot;answersByUser&quot;:{},&quot;answersSortByVotesByUser&quot;:{},&quot;answersIncludedByUser&quot;:{},&quot;votedAnswersByUser&quot;:{},&quot;thankedAnswersByUser&quot;:{},&quot;voteAnswersByUser&quot;:{},&quot;thankAnswersByUser&quot;:{},&quot;topicAnswersByUser&quot;:{},&quot;articlesByUser&quot;:{},&quot;articlesSortByVotesByUser&quot;:{},&quot;articlesIncludedByUser&quot;:{},&quot;pinsByUser&quot;:{},&quot;questionsByUser&quot;:{},&quot;commercialQuestionsByUser&quot;:{},&quot;favlistsByUser&quot;:{},&quot;followingByUser&quot;:{},&quot;followersByUser&quot;:{},&quot;mutualsByUser&quot;:{},&quot;followingColumnsByUser&quot;:{},&quot;followingQuestionsByUser&quot;:{},&quot;followingFavlistsByUser&quot;:{},&quot;followingTopicsByUser&quot;:{},&quot;publicationsByUser&quot;:{},&quot;columnsByUser&quot;:{},&quot;allFavlistsByUser&quot;:{},&quot;brands&quot;:null},&quot;env&quot;:{&quot;ab&quot;:{&quot;config&quot;:{&quot;experiments&quot;:[{&quot;expId&quot;:&quot;launch-ad_ios_lans-2&quot;,&quot;expPrefix&quot;:&quot;ad_ios_lans&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:true,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_adr_dkts-9&quot;,&quot;expPrefix&quot;:&quot;gw_adr_dkts&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_adr_mini-2&quot;,&quot;expPrefix&quot;:&quot;gw_adr_mini&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_adr_wbtp-2&quot;,&quot;expPrefix&quot;:&quot;gw_adr_wbtp&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_adr_wxfb-2&quot;,&quot;expPrefix&quot;:&quot;gw_adr_wxfb&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_anr_wxbk-2&quot;,&quot;expPrefix&quot;:&quot;gw_anr_wxbk&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_ios_dkts-8&quot;,&quot;expPrefix&quot;:&quot;gw_ios_dkts&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_ios_mini-2&quot;,&quot;expPrefix&quot;:&quot;gw_ios_mini&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_ios_wxb-2&quot;,&quot;expPrefix&quot;:&quot;gw_ios_wxb&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_ios_wxfb-1&quot;,&quot;expPrefix&quot;:&quot;gw_ios_wxfb&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-gw_wbtp-2&quot;,&quot;expPrefix&quot;:&quot;gw_wbtp&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-mp_amap_ios-1&quot;,&quot;expPrefix&quot;:&quot;mp_amap_ios&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-mp_apm-1&quot;,&quot;expPrefix&quot;:&quot;mp_apm&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-mp_hb_si-3&quot;,&quot;expPrefix&quot;:&quot;mp_hb_si&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-mp_ios_webp-2&quot;,&quot;expPrefix&quot;:&quot;mp_ios_webp&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-mp_video_feed-2&quot;,&quot;expPrefix&quot;:&quot;mp_video_feed&quot;,&quot;isDynamicallyUpdated&quot;:false,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-se_ios_topsearch-2&quot;,&quot;expPrefix&quot;:&quot;se_ios_topsearch&quot;,&quot;isDynamicallyUpdated&quot;:false,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-top_dtmt-10&quot;,&quot;expPrefix&quot;:&quot;top_dtmt&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-top_feed_card-1&quot;,&quot;expPrefix&quot;:&quot;top_feed_card&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-vd_adrupload_cdn-2&quot;,&quot;expPrefix&quot;:&quot;vd_adrupload_cdn&quot;,&quot;isDynamicallyUpdated&quot;:false,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;launch-vd_upload_cdn-2&quot;,&quot;expPrefix&quot;:&quot;vd_upload_cdn&quot;,&quot;isDynamicallyUpdated&quot;:false,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false},{&quot;expId&quot;:&quot;top_ftc-27&quot;,&quot;expPrefix&quot;:&quot;top_ftc&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false}],&quot;params&quot;:[{&quot;id&quot;:&quot;adr_guest_login&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_new_market_search&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;off&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_video_score&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_android_medal_badge_view&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;se_major_onebox&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;major&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_nid&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recall_tb&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_topsearch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;ios_asp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;off&quot;},{&quot;id&quot;:&quot;ios_webp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_billab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_amap&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;y&quot;},{&quot;id&quot;:&quot;ios_q_a_c&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_followtop&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_no_weighing&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_perm&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_question_invite_v2&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_wxfb&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_tf&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_cc_at&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_tr&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_profile_badge&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;id&quot;:&quot;ios_more_editcard&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;id&quot;:&quot;top_tagore&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;web_ask_flow&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;exp_a&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_spic&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_x_z_c0&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;web_column_auto_invite&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_notif_new_invite&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;off&quot;},{&quot;id&quot;:&quot;ios_article_new_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_video_feed&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;-1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_keywordab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_new_user_gift&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_root_ac&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_liguangi_test&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;adr_new_answer_pager&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;adr_wbtp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_gr_topic_reweight&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_cta&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_consult&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_hybrid_editor_v3&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_q_bar&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;NO&quot;},{&quot;id&quot;:&quot;top_an&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_dtmt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_universalebook&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_vdio_rew&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_anp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;android_answer_pager_off&quot;},{&quot;id&quot;:&quot;top_v_album&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_unif&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;off&quot;},{&quot;id&quot;:&quot;ios_mini&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;se_merger&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_next_answer_btn&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_editor_version&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;V2&quot;},{&quot;id&quot;:&quot;se_rescore&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_retagg&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;top_is_gr&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;hb_consulting_price&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;np&quot;},{&quot;id&quot;:&quot;ios_lssq&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_fqa&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_newfollow&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_raf&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_tag_isolation&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;web_stream_render&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_db_n_e&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_question_invite_v2&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_wbtp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_recall_core_interest&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;81&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_yc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_article_new_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_ps&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_billvideo&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_le_nav&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_more_hyb_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_android_video_continuous&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_traffic_threshold&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;314572800&quot;},{&quot;id&quot;:&quot;ios_ad_web_cache&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;web_card_style&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;b&quot;},{&quot;id&quot;:&quot;web_heifetz_column_api2&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_traffic_leak&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;adr_task_statistics&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;adr_prt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;ios_article_recommend_column&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_dt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_gif&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_root_web&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_consultation&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_test_4_liguangyi&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_user_gift&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_qtoc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_recall_follow_user&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;91&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recall_tb_short&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;61&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_feedtopiccard&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_ge4&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;top_feedre_cpt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;101&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_rank&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_use_cashier&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;new&quot;},{&quot;id&quot;:&quot;ios_magitab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_pay_view&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;new&quot;},{&quot;id&quot;:&quot;top_uit&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_mbv&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;adr_test_delete&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_7324&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_dkts&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;20&quot;},{&quot;id&quot;:&quot;ios_next_ans&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;N&quot;},{&quot;id&quot;:&quot;top_distinction&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_quality&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_dkts&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;200&quot;},{&quot;id&quot;:&quot;ios_adr_vid_vol&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_feedre_itemcf&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;31&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_comment_new_editor&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_launch_ad_new_strategy&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;open&quot;},{&quot;id&quot;:&quot;adr_sdk_data_switch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;pin_efs&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;orig&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_grow_guide_login_4&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;ios_mlssq&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_gr_auto_model&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_root_few_topic&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_member_switch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_feedre&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_sj&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_yhgc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_edit_question&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;hb_major_onebox&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_pdf&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;},{&quot;id&quot;:&quot;top_hweb&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_pfq&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_promo&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_root_mg&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_sjre&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;hb_best_answerer&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;web_logoc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;blue&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_nmt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recall_deep_user&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_recommend_column&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_use_gd&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;},{&quot;id&quot;:&quot;se_daxuechuisou&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;old&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_follow_question_hybrid&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_free_content&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;-1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_spec_promo&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_invite&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;adr_new_hybrid&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_ps&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_real_time_launch_http&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;http_off&quot;},{&quot;id&quot;:&quot;ios_spic&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_bugly&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;},{&quot;id&quot;:&quot;adr_video_upload_cdn&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;hb_active_answerer&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_km_center&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_video_upload_cdn&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;se_entity&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;on&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_video_rew&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_ques_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_profile_sig&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;id&quot;:&quot;se_ingress&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;off&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;se_refactored_search_index&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_follow_reason&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_keyword&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recommend_topic_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_pre_load_html&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_input_image&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_launch_timeout&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;-1&quot;},{&quot;id&quot;:&quot;ios_question_new_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_vd_op&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;web_question_invite&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;N&quot;},{&quot;id&quot;:&quot;adr_real_time_launch_http&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;http_off&quot;},{&quot;id&quot;:&quot;ios_consultation&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_medal_badge_view&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;tp_discussion_feed_card_type&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_mqtt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_ff_cardtype&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;A&quot;},{&quot;id&quot;:&quot;top_memberfree&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_nuc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_video_fix_position&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_cashier_color&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_1752&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_searchbox&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_alt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_feedre_rtt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;41&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_newfollowans&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recall_tb_follow&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;71&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;zr_ans_rec&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;gbrank&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_sqtc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;hb_stream_render&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_correct_ab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_vds_alb_pos&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_topsearch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;ios_roundtable&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;A&quot;},{&quot;id&quot;:&quot;top_30&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_medal&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ls_new_video&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_new_roundtable&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;ios_answer_preload&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_gr_model&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_profile_label&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_lowup&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;se_minor_onebox&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;d&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;se_gemini_service&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;content&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_retag&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_traffic_monitor&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;adr_book_is_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_mini&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;ios_invite_ans&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;A&quot;},{&quot;id&quot;:&quot;top_multi_model&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_android_gdt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;open&quot;},{&quot;id&quot;:&quot;top_videos_priority&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;-1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_profile_medal&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;hb_live_btn_color&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;default_color&quot;},{&quot;id&quot;:&quot;top_root&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_roundtable&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_anr_watch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;ios_video_continuous&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_hca&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;hb_billboard&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;tp_ios_topic_write_pin_guide&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_ntr&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_rlp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_ios_launch_mp4&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;ios_video_agent_4_22&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;id&quot;:&quot;ls_play_continuous_order&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;se_consulting_price&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_nad&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;tp_write_pin_guide&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_local_server_enable&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;web_new_comment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_wxbk&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;top_adpar&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_ebook&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_login_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_manual_tag&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_nszt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_slot_ad_pos&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;ios_vid_qt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;hb_unfollow_reason&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_cashier_color&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_relevant_query&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;old&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_ad_slot&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_ans_video&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;N&quot;},{&quot;id&quot;:&quot;ios_vid_home&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_psn&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;},{&quot;id&quot;:&quot;hb_liguangyi_test&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;hb_report&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_answer_hybrid_preload&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_consulting_switch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;off&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_billupdate1&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;tp_sft&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;a&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_unfollow_reason&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;se_auto_syn&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_hqt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_wxbk&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;ios_ad_cta&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_billpic&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_billread&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_f_r_nb&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_tffrt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_vd_score_new&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_android_launch_ad_mp4&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;open&quot;},{&quot;id&quot;:&quot;adr_q_bar&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;NO&quot;},{&quot;id&quot;:&quot;ios_apm&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;ios_quill_editor&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_billboard_count&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recall&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_tmt&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_pdf&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;n&quot;},{&quot;id&quot;:&quot;se_wiki_box&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;se_gi&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;hb_recommend_column&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_book_is_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;top_nucc&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_recall_tb_long&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;51&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_video_topic_volume_control&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;adr_mqtt_5_24_0&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_ad_skip_pos&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;up&quot;},{&quot;id&quot;:&quot;ios_hybrid_intercepting&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;pin_ef&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;orig&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_topic_feedre&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;21&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_feed_video_continuous&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;ios_lans&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;close&quot;},{&quot;id&quot;:&quot;top_bill&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;top_mlt_model&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;},{&quot;id&quot;:&quot;adr_wxfb&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;}],&quot;chains&quot;:[{&quot;chainId&quot;:&quot;_all_&quot;}]},&quot;triggers&quot;:{}},&quot;userAgent&quot;:{&quot;Edge&quot;:false,&quot;Wechat&quot;:false,&quot;Weibo&quot;:false,&quot;QQ&quot;:false,&quot;Mobile&quot;:false,&quot;Android&quot;:false,&quot;iOS&quot;:false,&quot;isAppleDevice&quot;:false,&quot;Zhihu&quot;:false,&quot;ZhihuHybrid&quot;:false,&quot;isBot&quot;:false,&quot;Tablet&quot;:false,&quot;UC&quot;:false,&quot;Sogou&quot;:false,&quot;Qihoo&quot;:false,&quot;Baidu&quot;:false,&quot;isWebView&quot;:false,&quot;origin&quot;:&quot;Custom User Agent&quot;},&quot;trafficSource&quot;:&quot;production&quot;,&quot;edition&quot;:{&quot;baidu&quot;:false,&quot;sogou&quot;:false,&quot;baiduBeijing&quot;:false,&quot;yidianzixun&quot;:false},&quot;theme&quot;:&quot;light&quot;,&quot;referer&quot;:&quot;&quot;,&quot;conf&quot;:{},&quot;ipInfo&quot;:{},&quot;logged&quot;:false,&quot;tdkInfo&quot;:{}},&quot;me&quot;:{&quot;accountInfoLoadStatus&quot;:{},&quot;organizationProfileStatus&quot;:{},&quot;columnContributions&quot;:[]},&quot;comments&quot;:{&quot;stickers&quot;:[],&quot;commentWithPicPermission&quot;:{},&quot;notificationsComments&quot;:{},&quot;pagination&quot;:{},&quot;collapsed&quot;:{},&quot;reverse&quot;:{},&quot;reviewing&quot;:{},&quot;conversation&quot;:{},&quot;conversationMore&quot;:{},&quot;parent&quot;:{}},&quot;pushNotifications&quot;:{&quot;default&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;follow&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;vote_thank&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;currentTab&quot;:&quot;default&quot;,&quot;notificationsCount&quot;:{&quot;default&quot;:0,&quot;follow&quot;:0,&quot;vote_thank&quot;:0}},&quot;messages&quot;:{&quot;data&quot;:{},&quot;currentTab&quot;:&quot;common&quot;,&quot;messageCount&quot;:0},&quot;register&quot;:{&quot;registerValidateSucceeded&quot;:null,&quot;registerValidateErrors&quot;:{},&quot;registerConfirmError&quot;:null,&quot;sendDigitsError&quot;:null,&quot;registerConfirmSucceeded&quot;:null},&quot;login&quot;:{&quot;loginUnregisteredError&quot;:false,&quot;loginBindWechatError&quot;:false,&quot;loginConfirmError&quot;:null,&quot;sendDigitsError&quot;:null,&quot;validateDigitsError&quot;:false,&quot;loginConfirmSucceeded&quot;:null,&quot;qrcodeLoginToken&quot;:&quot;&quot;,&quot;qrcodeLoginScanStatus&quot;:0,&quot;qrcodeLoginError&quot;:null,&quot;qrcodeLoginReturnNewToken&quot;:false},&quot;active&quot;:{&quot;sendDigitsError&quot;:null,&quot;activeConfirmSucceeded&quot;:null,&quot;activeConfirmError&quot;:null},&quot;switches&quot;:{},&quot;captcha&quot;:{&quot;captchaNeeded&quot;:false,&quot;captchaValidated&quot;:false,&quot;captchaBase64String&quot;:null,&quot;captchaValidationMessage&quot;:null,&quot;loginCaptchaExpires&quot;:false},&quot;sms&quot;:{&quot;supportedCountries&quot;:[]},&quot;coupon&quot;:{&quot;isRedeemingCoupon&quot;:false},&quot;question&quot;:{&quot;followers&quot;:{},&quot;concernedFollowers&quot;:{},&quot;answers&quot;:{},&quot;hiddenAnswers&quot;:{},&quot;createdAnswers&quot;:{},&quot;collapsedAnswers&quot;:{},&quot;notificationAnswers&quot;:{},&quot;invitationCandidates&quot;:{},&quot;inviters&quot;:{},&quot;invitees&quot;:{},&quot;similarQuestions&quot;:{},&quot;relatedCommodities&quot;:{},&quot;recommendReadings&quot;:{},&quot;bio&quot;:{},&quot;brand&quot;:{},&quot;permission&quot;:{},&quot;advancedStyle&quot;:{},&quot;commonAnswerCount&quot;:0,&quot;hiddenAnswerCount&quot;:0,&quot;meta&quot;:{},&quot;autoInvitation&quot;:{},&quot;simpleConcernedFollowers&quot;:{}},&quot;shareTexts&quot;:{},&quot;answers&quot;:{&quot;voters&quot;:{},&quot;copyrightApplicants&quot;:{},&quot;favlists&quot;:{},&quot;newAnswer&quot;:{},&quot;concernedUpvoters&quot;:{},&quot;simpleConcernedUpvoters&quot;:{}},&quot;banner&quot;:{},&quot;topic&quot;:{&quot;bios&quot;:{},&quot;hot&quot;:{},&quot;newest&quot;:{},&quot;top&quot;:{},&quot;unanswered&quot;:{},&quot;questions&quot;:{},&quot;followers&quot;:{},&quot;contributors&quot;:{},&quot;parent&quot;:{},&quot;children&quot;:{},&quot;bestAnswerers&quot;:{},&quot;wikiMeta&quot;:{},&quot;index&quot;:{},&quot;intro&quot;:{},&quot;meta&quot;:{},&quot;schema&quot;:{}},&quot;explore&quot;:{&quot;recommendations&quot;:{}},&quot;articles&quot;:{&quot;voters&quot;:{}},&quot;favlists&quot;:{&quot;relations&quot;:{}},&quot;pins&quot;:{&quot;voters&quot;:{}},&quot;topstory&quot;:{&quot;topstorys&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;recommend&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;follow&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;followWonderful&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;sidebar&quot;:null,&quot;announcement&quot;:{},&quot;hotList&quot;:[],&quot;guestFeeds&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;followExtra&quot;:{&quot;isNewUser&quot;:null,&quot;isFetched&quot;:false,&quot;followCount&quot;:0,&quot;followers&quot;:[]}},&quot;upload&quot;:{},&quot;video&quot;:{&quot;data&quot;:{}},&quot;guide&quot;:{&quot;guide&quot;:{&quot;isFetching&quot;:false,&quot;isShowGuide&quot;:false}},&quot;reward&quot;:{&quot;answer&quot;:{},&quot;article&quot;:{},&quot;question&quot;:{}},&quot;search&quot;:{&quot;recommendSearch&quot;:[],&quot;topSearch&quot;:{},&quot;attachedInfo&quot;:{},&quot;nextOffset&quot;:{},&quot;generalByQuery&quot;:{},&quot;generalByQueryInADay&quot;:{},&quot;generalByQueryInAWeek&quot;:{},&quot;generalByQueryInThreeMonths&quot;:{},&quot;peopleByQuery&quot;:{},&quot;topicByQuery&quot;:{},&quot;columnByQuery&quot;:{},&quot;liveByQuery&quot;:{},&quot;albumByQuery&quot;:{},&quot;eBookByQuery&quot;:{}},&quot;creator&quot;:{&quot;tools&quot;:{&quot;question&quot;:{&quot;invitationCount&quot;:{&quot;questionFolloweeCount&quot;:0,&quot;questionTotalCount&quot;:0},&quot;goodatTopics&quot;:[]},&quot;customPromotion&quot;:{&quot;itemLists&quot;:{}}},&quot;explore&quot;:{&quot;academy&quot;:{&quot;tabs&quot;:[],&quot;article&quot;:{}}},&quot;rights&quot;:[],&quot;rightsStatus&quot;:{},&quot;levelUpperLimit&quot;:10,&quot;account&quot;:{&quot;growthLevel&quot;:{}}},&quot;publicEditPermission&quot;:{}}" data-config="false" data-useragent="{&quot;os&quot;:{},&quot;browser&quot;:{}}"></div><script src="https://static.zhihu.com/heifetz/vendor.7c9abc3e398528f8abf1.js"></script><script src="https://static.zhihu.com/heifetz/main.raven.20ecf75e0f2667f5d28a.js" defer=""></script><script src="https://static.zhihu.com/heifetz/main.app.88963c0c1a59d5eb2ece.js"></script><script src="https://static.zhihu.com/heifetz/main.people-routes.b6887e7d44fa143faf31.js"></script></body></html>